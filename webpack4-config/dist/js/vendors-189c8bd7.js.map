{"version":3,"sources":["webpack:///./node_modules/complex.js/complex.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/fraction.js/fraction.js","webpack:///./node_modules/javascript-natural-sort/naturalSort.js","webpack:///./node_modules/typed-function/typed-function.js","webpack:///./node_modules/seed-random/index.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/decimal.js/decimal.js","webpack:///./node_modules/jquery/dist/jquery.js","webpack:///./node_modules/mathjs/src/core/config.js","webpack:///./node_modules/mathjs/src/utils/is.js","webpack:///./node_modules/mathjs/src/utils/object.js","webpack:///./node_modules/mathjs/src/core/function/config.js","webpack:///./node_modules/mathjs/src/entry/configReadonly.js","webpack:///./node_modules/mathjs/src/utils/number.js","webpack:///./node_modules/mathjs/src/utils/bignumber/formatter.js","webpack:///./node_modules/mathjs/src/utils/string.js","webpack:///./node_modules/mathjs/src/error/DimensionError.js","webpack:///./node_modules/mathjs/src/error/IndexError.js","webpack:///./node_modules/mathjs/src/utils/array.js","webpack:///./node_modules/mathjs/src/utils/factory.js","webpack:///./node_modules/mathjs/src/type/complex/Complex.js","webpack:///./node_modules/mathjs/src/utils/function.js","webpack:///./node_modules/mathjs/src/utils/bignumber/constants.js","webpack:///./node_modules/mathjs/src/plain/number/constants.js","webpack:///./node_modules/mathjs/src/type/bignumber/BigNumber.js","webpack:///./node_modules/mathjs/src/type/matrix/Matrix.js","webpack:///./node_modules/mathjs/src/type/unit/physicalConstants.js","webpack:///./node_modules/mathjs/src/type/fraction/Fraction.js","webpack:///./node_modules/mathjs/src/type/matrix/DenseMatrix.js","webpack:///./node_modules/mathjs/src/core/function/typed.js","webpack:///./node_modules/mathjs/src/utils/collection.js","webpack:///./node_modules/mathjs/src/function/utils/isInteger.js","webpack:///./node_modules/mathjs/src/plain/number/utils.js","webpack:///./node_modules/mathjs/src/utils/bignumber/nearlyEqual.js","webpack:///./node_modules/mathjs/src/function/relational/equalScalar.js","webpack:///./node_modules/mathjs/src/utils/complex.js","webpack:///./node_modules/mathjs/src/plain/number/arithmetic.js","webpack:///./node_modules/mathjs/src/plain/number/bitwise.js","webpack:///./node_modules/mathjs/src/plain/number/logical.js","webpack:///./node_modules/mathjs/src/function/special/erf.js","webpack:///./node_modules/mathjs/src/plain/number/trigonometry.js","webpack:///./node_modules/mathjs/src/utils/product.js","webpack:///./node_modules/mathjs/src/plain/number/combinations.js","webpack:///./node_modules/mathjs/src/utils/log.js","webpack:///./node_modules/mathjs/src/function/probability/randomInt.js","webpack:///./node_modules/mathjs/src/function/arithmetic/addScalar.js","webpack:///./node_modules/mathjs/src/function/arithmetic/sqrt.js","webpack:///./node_modules/mathjs/src/function/trigonometry/acosh.js","webpack:///./node_modules/mathjs/src/type/matrix/SparseMatrix.js","webpack:///./node_modules/mathjs/src/type/matrix/function/matrix.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm01.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm04.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm10.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm13.js","webpack:///./node_modules/mathjs/src/type/matrix/utils/algorithm14.js","webpack:///./node_modules/mathjs/src/function/relational/unequal.js","webpack:///./node_modules/mathjs/src/function/statistics/max.js","webpack:///./node_modules/mathjs/src/function/arithmetic/add.js","webpack:///./node_modules/mathjs/src/error/ArgumentsError.js","webpack:///./node_modules/mathjs/src/plain/number/probability.js","webpack:///./node_modules/mathjs/src/function/relational/equal.js","webpack:///./node_modules/mathjs/src/entry/pureFunctionsAny.generated.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/node_modules/is-buffer/index.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","root","cosh","x","Math","exp","sinh","parser_exit","SyntaxError","logHypot","a","b","_a","abs","_b","log","cos","atan2","parse","z","re","im","undefined","Number","isFinite","Complex","sin","length","tokens","match","plus","minus","i","c","isNaN","parseFloat","this","prototype","sign","add","sub","mul","div","t","d","pow","arg","loh","sqrt","r","tmp","expm1","limit","PI","xx","cosm1","y","tan","cot","sec","csc","asin","t1","t2","acos","atan","Infinity","acot","asec","acsc","tanh","coth","csch","sech","asinh","res","acosh","atanh","noIM","oneMinus","onePlus","temp","acoth","acsch","asech","inverse","conjugate","neg","ceil","places","floor","round","equals","clone","toString","ret","toVector","valueOf","isZero","isInfinite","E","NaN","apply","exports","module","bind","__webpack_require__","isBuffer","Object","isArray","val","call","isObject","isFunction","forEach","obj","fn","l","key","hasOwnProperty","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","deepMerge","extend","thisArg","trim","str","replace","MAX_CYCLE_LEN","P","s","n","createError","name","errorConstructor","Error","IntermediateInheritor","DivisionByZero","Fraction","InvalidParameter","assign","parseInt","throwInvalidParam","p1","p2","M","v","w","A","B","C","D","N","LN10","gcd","mod","lcm","m","compare","simplify","eps","cont","rec","slice","divisible","toFraction","excludeWhole","whole","toLatex","toContinued","push","dec","g","cycLen","rem","cycleLen","cycOff","len","rem1","rem2","e","modpow","cycleStart","naturalSort","oFxNcL","oFyNcL","sre","dre","hre","ore","insensitive","toLowerCase","xN","split","yN","xD","Date","yD","cLoc","numS","max","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","ok","notOk","undef","create","_types","test","Array","RegExp","constructor","anyType","_ignore","_conversions","typed","types","conversions","ignore","findTypeByName","typeName","entry","findInArray","hint","TypeError","findTypeIndex","type","indexOf","findTypeName","value","stringifyParams","params","map","param","typeNames","getTypeName","restParam","join","parseParam","filter","notEmpty","notIgnore","matchingConversions","matches","conversion","from","to","keys","filterConversions","exactTypes","typeIndex","conversionIndex","convertibleTypes","concat","hasRestParam","last","hasConversions","some","compileTest","test0","test1","tests","compileTests","arr","varIndex","lastTest","args","testRestParam","getParamAtIndex","signature","index","getExpectedTypeNames","excludeConversions","isExactType","mergeExpectedParams","signatures","entries","uniq","flatMap","getLowestTypeIndex","min","getLowestConversionIndex","compareParams","param1","param2","compareSignatures","signature1","signature2","compileArgConversion","conversion0","conversion1","convert","splitParams","ignoreConversionTypes","_splitParams","typeGroups","filteredTypes","typeGroup","splittedParams","createTypedFunction","signaturesMap","parsedSignatures","array","parsedParam","isInvalidParam","parseSignature","notNull","parsedSignature","conflictingSignature","ii","typesNames1","typesNames2","hasOverlap","len1","len2","restParam1","restParam2","hasConflictingParams","sort","ok0","ok1","ok2","ok3","ok4","ok5","allOk","test00","test10","test20","test30","test40","test50","test01","test11","test21","test31","test41","test51","fns","fnConvert","compiledConversions","fnPreprocess","offset","compileArgsPreprocessing","fn0","fn1","fn2","fn3","fn4","fn5","len0","len3","len4","len5","iStart","iEnd","generic","err","expected","_name","matchingSignatures","nextMatchingDefs","actualType","data","category","actual","lengths","maxLength","expectedLength","arg0","arg1","defineProperty","createSignaturesMap","start","end","array1","array2","item","callback","getName","extractSignatures","validateUnique","_signature","_fn","string, Object","...Function","string, ...Function","find","addType","beforeObjectTest","splice","addConversion","global","width","pool","GLOBAL","startdenom","significance","overflow","mask","oldRandom","random","ARC4","keylen","me","j","S","count","mixkey","seed","smear","stringseed","charCodeAt","tostring","String","fromCharCode","options","arc4","flatten","depth","prop","typ","entropy","crypto","getRandomValues","Uint8Array","plugins","screen","autoseed","resetGlobal","utils","encode","encodeURIComponent","url","paramsSerializer","serializedParams","parts","toISOString","JSON","stringify","hashmarkIndex","__CANCEL__","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","adapter","defaults","XMLHttpRequest","transformRequest","transformResponse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","settle","buildURL","parseHeaders","isURLSameOrigin","config","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","Authorization","btoa","open","toUpperCase","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","config1","config2","Cancel","globalScope","Decimal","inexact","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","mathfloor","mathpow","isBinary","isHex","isOctal","isDecimal","BASE","LOG_BASE","LN10_PRECISION","PI_PRECISION","digitsToString","k","ws","indexOfLastWord","getZeroString","checkInt32","checkRoundingDigits","rm","repeating","di","rd","convertBase","baseIn","baseOut","arrL","strL","charAt","reverse","absoluteValue","finalise","comparedTo","cmp","xdL","ydL","xd","yd","xs","ys","cosine","pr","Ctor","sd","tinyPow","taylorSeries","times","cos2x","toLessThanHalfPi","cubeRoot","cbrt","rep","t3","t3plusx","toExponential","divide","eq","decimalPlaces","dp","dividedBy","dividedToIntegerBy","divToInt","greaterThan","gt","greaterThanOrEqualTo","gte","hyperbolicCosine","one","cosh2_x","d8","hyperbolicSine","sinh2_x","d5","d16","d20","hyperbolicTangent","inverseCosine","halfPi","isNeg","getPi","inverseHyperbolicCosine","lte","ln","inverseHyperbolicSine","inverseHyperbolicTangent","wpr","xsd","inverseSine","inverseTangent","px","x2","isInteger","isInt","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","base","isBase10","denominator","inf","num","naturalLogarithm","getLn10","xe","xLTy","pop","shift","getBase10Exponent","q","naturalExponential","negated","carry","unshift","getPrecision","sine","sin2_x","squareRoot","tangent","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFixed","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","toJSON","multiplyInteger","aL","bL","subtract","logBase","more","prod","prodL","qd","remL","rem0","xi","xL","yd0","yL","yz","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","ltgt","guard","sum","c0","numerator","x1","parseDecimal","search","substring","parseOther","divisor","isFloat","p","isHyperbolic","u","pi","useDefaults","ps","randomBytes","hypot","isDecimalInstance","log2","log10","Uint32Array","copy","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","factory","noGlobal","getProto","getPrototypeOf","class2type","hasOwn","fnToString","ObjectFunctionString","support","nodeType","isWindow","preservedScriptAttributes","src","nonce","noModule","DOMEval","node","doc","script","createElement","text","getAttribute","setAttribute","head","appendChild","parentNode","removeChild","toType","jQuery","selector","context","init","rtrim","isArrayLike","jquery","toArray","get","pushStack","elems","prevObject","each","elem","first","copyIsArray","target","deep","isPlainObject","expando","isReady","msg","noop","proto","isEmptyObject","globalEval","makeArray","results","inArray","second","grep","invert","callbackExpect","guid","Symbol","iterator","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","nonnativeSelectorCache","sortOrder","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","rcomma","rcombinators","rdescend","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rhtml","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","_","escaped","escapedWhitespace","high","rcssescape","fcssescape","ch","asCodePoint","unloadHandler","inDisabledFieldset","addCombinator","disabled","nodeName","dir","next","childNodes","els","nid","groups","newSelector","newContext","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","toSelector","testContext","querySelectorAll","qsaError","removeAttribute","cache","cacheLength","markFunction","assert","el","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","namespace","namespaceURI","documentElement","hasCompare","subWindow","defaultView","top","attachEvent","className","createComment","getById","getElementsByName","attrId","getAttributeNode","tag","innerHTML","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","sortDetached","aup","ap","bp","expr","elements","attr","specified","escape","sel","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo","relative",">"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","parent","useCache","lastChild","uniqueID","pseudo","setFilters","idx","matched","not","matcher","unmatched","has","lang","elemLang","hash","location","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","empty","header","button","even","odd","radio","checkbox","file","image","submit","reset","combinator","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","token","compiled","defaultValue","unique","isXMLDoc","escapeSelector","until","is","siblings","rneedsContext","rsingleTag","winnow","qualifier","self","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","children","contents","prev","sibling","targets","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","content","rnothtmlwhite","Identity","Thrower","ex","adoptValue","noValue","fail","Callbacks","object","flag","createOptions","firing","memory","fired","locked","queue","firingIndex","fire","once","stopOnFalse","remove","disable","lock","fireWith","Deferred","func","tuples","state","always","deferred","catch","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","special","that","mightThrow","notifyWith","resolveWith","exceptionHook","stackTrace","rejectWith","getStackHook","setTimeout","stateString","when","singleValue","remaining","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","warn","readyException","readyList","completed","removeEventListener","readyWait","wait","doScroll","access","chainable","emptyGet","raw","bulk","rmsPrefix","rdashAlpha","fcamelCase","all","letter","camelCase","string","acceptData","owner","Data","uid","configurable","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","getData","removeData","_data","_removeData","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","defer","pnum","source","rcssNum","cssExpand","isAttached","composed","getRootNode","isHiddenWithinTree","style","display","css","swap","old","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","body","showHide","show","values","hide","toggle","rcheckableType","rtagName","rscriptType","wrapMap","option","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","optgroup","tbody","tfoot","colgroup","caption","th","buildFragment","scripts","selection","ignored","wrap","attached","fragment","createDocumentFragment","nodes","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","expectSync","safeActiveElement","on","origFn","event","off","leverageNative","notAsync","saved","isTrigger","delegateType","stopPropagation","stopImmediatePropagation","preventDefault","trigger","Event","handleObjIn","eventHandle","events","handleObj","handlers","namespaces","origType","elemData","handle","triggered","dispatch","bindType","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","enumerable","originalEvent","writable","load","noBubble","click","beforeunload","returnValue","props","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","now","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","rxhtmlTag","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","valueIsFunction","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","rnumnonpx","getStyles","opener","getComputedStyle","rboxStyle","curCSS","computed","minWidth","maxWidth","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","container","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","position","scrollboxSizeVal","offsetWidth","measure","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","cssPrefixes","emptyStyle","vendorProps","finalPropName","final","cssProps","capName","vendorPropName","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","setPositiveNumber","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","getWidthOrHeight","valueIsBorderBox","offsetProp","getClientRects","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","order","orphans","widows","zIndex","zoom","origName","isCustomProp","setProperty","getBoundingClientRect","scrollboxSizeBuggy","left","margin","padding","border","prefix","suffix","expand","expanded","propHooks","run","percent","eased","duration","pos","step","fx","scrollTop","scrollLeft","linear","swing","fxNow","inProgress","rfxtypes","rrun","schedule","hidden","requestAnimationFrame","interval","tick","createFxNow","genFx","includeWidth","height","createTween","animation","Animation","tweeners","properties","stopped","prefilters","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","propFilter","complete","timer","anim","*","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","tabindex","for","class","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","isValidValue","classNames","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","parentWindow","simulate","triggerHandler","attaches","rquery","parseXML","DOMParser","parseFromString","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","valueOrFunction","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeadersNames","strAbort","getResponseHeader","overrideMimeType","mimeType","finalText","crossDomain","host","hasContent","ifModified","beforeSend","success","nativeStatusText","responses","isSuccess","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","text script","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","visible","offsetHeight","xhr","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","xhrFields","onload","binary","scriptAttrs","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","animated","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","hover","fnOver","fnOut","unbind","delegate","undelegate","proxy","holdReady","hold","parseJSON","isNumeric","_jQuery","_$","$","noConflict","DEFAULT_CONFIG","epsilon","matrix","number","predictable","randomSeed","isBigNumber","isComplex","isFraction","isUnit","isMatrix","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isRegExp","isNull","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","typeOf","mapObject","object_hasOwnProperty","deepStrictEqual","property","MATRIX_OPTIONS","NUMBER_OPTIONS","configReadonly_config","freeze","number_isInteger","number_sign","number_log2","LN2","number_log10","number_cbrt","log1p","negate","number_expm1","number_format","notation","rounded","roundDigits","splitNumber","exponent","coefficients","newExp","significandsDiff","expDiff","decimalIdx","decimals","decimalVal","toEngineering","exponential","lower","upper","fixedOptions","lowerExp","upperExp","dot","zeros","splitValue","pp","number_zeros","DBL_EPSILON","EPSILON","nearlyEqual","number_acosh","number_asinh","number_atanh","number_sinh","formatter_format","formatter_toFixed","formatter_toExponential","valueWithoutExp","valueStr","formatter_toEngineering","string_format","looksLikeFraction","fraction","formatArray","syntax","format","DimensionError","relation","IndexError","arraySize","utils_array_validate","size","array_validate","dim","dimNext","child","validateIndex","array_resize","utils_array_resize","oldLen","newLen","minLen","reshape","sizes","flatArray","newArray","reduce","curr","totalSize","sizeIndex","tmpArray2","tmpArray","_reshape","unsqueeze","dims","outer","_unsqueeze","flat","getArrayDataType","itemType","factory_factory","dependencies","meta","assertAndCreate","scope","deps","pickShallow","stripOptionalNotation","dependency","isOptionalDependency","every","missingDependencies","assertDependencies","isFactory","RangeError","isDimensionError","isIndexError","createComplexClass","complex_default","mathjs","toPolar","phi","strRe","strIm","fromPolar","hasBase","fromJSON","isClass","memoize","hasher","BigNumber","createBigNumberPi","createBigNumberClass","decimal_default","createMatrixClass","Matrix","storage","datatype","subset","replacement","resize","skipZeros","numberFactory","createFractionClass","fraction_default","createDenseMatrixClass","DenseMatrix","_size","_datatype","preprocess","_resize","_fit","newSize","changed","createDenseMatrix","getDataType","isScalar","_getSubmatrix","range","_get","submatrix","iSize","sSize","_setSubmatrix","dataIndex","subIndex","_set","indexI","recurse","diagonal","kSuper","kSub","rows","columns","_value","ms","swapRows","_swapRows","vi","_createTyped","typed_function_default","typed_createTyped","throwNoBignumber","throwNoComplex","throwNoFraction","f","throwNoMatrix","deepMap","isNegativeNumber","isPositiveNumber","isZeroNumber","isNaNNumber","nearlyEqual_nearlyEqual","createEqualScalar","equalScalar","boolean, boolean","number, number","BigNumber, BigNumber","Fraction, Fraction","Complex, Complex","complexEquals","Unit, Unit","equalBase","n2","absNumber","addNumber","multiplyNumber","unaryMinusNumber","unaryPlusNumber","cbrtNumber","ceilNumber","cubeNumber","expNumber","expm1Number","gcdNumber","lcmNumber","logNumber","log10Number","log2Number","modNumber","nthRootNumber","inv","signNumber","squareNumber","xgcdNumber","lastx","lasty","powNumber","roundNumber","bitwise_n2","bitAndNumber","bitNotNumber","bitOrNumber","bitXorNumber","leftShiftNumber","rightArithShiftNumber","rightLogShiftNumber","notNumber","orNumber","xorNumber","andNumber","acoshNumber","acotNumber","acothNumber","acscNumber","acschNumber","xInv","asecNumber","asechNumber","asinhNumber","atanhNumber","cotNumber","cothNumber","cscNumber","cschNumber","POSITIVE_INFINITY","secNumber","sechNumber","sinhNumber","product_product","half","combinationsNumber","prodrange","nMinusk","messages","createAddScalar","addScalar","fixPrefix","createSqrt","_sqrtNumber","Array | Matrix","Unit","createSparseMatrixClass","SparseMatrix","_values","_index","_ptr","_createFromArray","_createFromMatrix","ptr","zero","row","_getValueIndex","bottom","_insert","ins","k0","k1","_toArray","createSparseMatrix","density","kk","mvalues","mindex","mptr","pv","_getsubset","x0","y0","_setsubset","_remove","colIndex","rowIndex","r1","c1","h","minRow","maxRow","minColumn","maxColumn","invoke","_map","_forEachRow","kx","ky","vx","vy","createMatrix","_create","string, string","Array | Matrix, string","Array | Matrix, string, string","createAlgorithm01","denseMatrix","sparseMatrix","adata","asize","adt","bvalues","bindex","bptr","bsize","bdt","dt","cf","cdata","mark","createAlgorithm04","avalues","aindex","aptr","cvalues","cindex","cptr","xa","xb","wa","wb","createAlgorithm10","createAlgorithm13","bdata","csize","_iterate","level","av","bv","cv","createAlgorithm14","any, any","createAdd","algorithm01","algorithm04","algorithm10","algorithm13","algorithm14","DenseMatrix, DenseMatrix","DenseMatrix, SparseMatrix","SparseMatrix, DenseMatrix","SparseMatrix, SparseMatrix","Array, Array","Array, Matrix","Matrix, Array","DenseMatrix, any","SparseMatrix, any","any, DenseMatrix","any, SparseMatrix","Array, any","any, Array","any, any, ...any","rest","ArgumentsError","isArgumentsError","gammaNumber","twoN","threeN","fourN","fiveN","gammaP","gammaG","__webpack_exports__","pureFunctionsAny_generated_sqrt","pureFunctionsAny_generated_add","pureFunctionsAny_generated_Complex","pureFunctionsAny_generated_BigNumber","pureFunctionsAny_generated_Matrix","pureFunctionsAny_generated_Fraction","pureFunctionsAny_generated_DenseMatrix","pureFunctionsAny_generated_typed","pureFunctionsAny_generated_equalScalar","pureFunctionsAny_generated_addScalar","pureFunctionsAny_generated_SparseMatrix","pureFunctionsAny_generated_matrix","Function","Axios","mergeConfig","createInstance","defaultConfig","instance","axios","instanceConfig","CancelToken","isCancel","promises","spread","default","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","fulfilled","rejected","getUri","use","eject","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","reason","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","nextTick","title","browser","env","argv","version","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","normalizedName","isAxiosError","description","fileName","lineNumber","columnNumber","ignoreDuplicateOf","line","substr","originURL","msie","userAgent","urlParsingNode","resolveURL","hostname","port","pathname","requestURL","write","expires","path","domain","secure","cookie","toGMTString","decodeURIComponent","relativeURL","executor","resolvePromise"],"mappings":"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","file":"./js/vendors-189c8bd7.js","sourcesContent":["/**\n * @license Complex.js v2.0.11 11/02/2016\n *\n * Copyright (c) 2016, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * var c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n(function(root) {\n\n  'use strict';\n\n  var cosh = function(x) {\n    return (Math.exp(x) + Math.exp(-x)) * 0.5;\n  };\n\n  var sinh = function(x) {\n    return (Math.exp(x) - Math.exp(-x)) * 0.5;\n  };\n\n  /**\n   * Calculates cos(x) - 1 using Taylor series if x is small.\n   *\n   * @param {number} x\n   * @returns {number} cos(x) - 1\n   */\n\n  var cosm1 = function(x) {\n    var limit = Math.PI/4;\n    if (x < -limit || x > limit) {\n      return (Math.cos(x) - 1.0);\n    }\n\n    var xx = x * x;\n    return xx *\n      (-0.5 + xx *\n        (1/24 + xx *\n          (-1/720 + xx *\n            (1/40320 + xx *\n              (-1/3628800 + xx *\n                (1/4790014600 + xx *\n                  (-1/87178291200 + xx *\n                    (1/20922789888000)\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n  };\n\n  var hypot = function(x, y) {\n\n    var a = Math.abs(x);\n    var b = Math.abs(y);\n\n    if (a < 3000 && b < 3000) {\n      return Math.sqrt(a * a + b * b);\n    }\n\n    if (a < b) {\n      a = b;\n      b = x / y;\n    } else {\n      b = y / x;\n    }\n    return a * Math.sqrt(1 + b * b);\n  };\n\n  var parser_exit = function() {\n    throw SyntaxError('Invalid Param');\n  };\n\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n  function logHypot(a, b) {\n\n    var _a = Math.abs(a);\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n\n    /* I got 4 ideas to compute this property without overflow:\n     *\n     * Testing 1000000 times with random samples for a,b ∈ [1, 1000000000] against a big decimal library to get an error estimate\n     *\n     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n     Math.log(a * a + b * b) / 2\n\n     *\n     *\n     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n     var fn = function(a, b) {\n     a = Math.abs(a);\n     b = Math.abs(b);\n     var t = Math.min(a, b);\n     a = Math.max(a, b);\n     t = t / a;\n\n     return Math.log(a) + Math.log(1 + t * t) / 2;\n     };\n\n     * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n     Math.log(a / Math.cos(Math.atan2(b, a)))\n\n     * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n     Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n     */\n\n    return Math.log(a / Math.cos(Math.atan2(b, a)));\n  }\n\n  var parse = function(a, b) {\n\n    var z = {'re': 0, 'im': 0};\n\n    if (a === undefined || a === null) {\n      z['re'] =\n              z['im'] = 0;\n    } else if (b !== undefined) {\n      z['re'] = a;\n      z['im'] = b;\n    } else\n      switch (typeof a) {\n\n        case 'object':\n\n          if ('im' in a && 're' in a) {\n            z['re'] = a['re'];\n            z['im'] = a['im'];\n          } else if ('abs' in a && 'arg' in a) {\n            if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['abs'] * Math.cos(a['arg']);\n            z['im'] = a['abs'] * Math.sin(a['arg']);\n          } else if ('r' in a && 'phi' in a) {\n            if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['r'] * Math.cos(a['phi']);\n            z['im'] = a['r'] * Math.sin(a['phi']);\n          } else if (a.length === 2) { // Quick array check\n            z['re'] = a[0];\n            z['im'] = a[1];\n          } else {\n            parser_exit();\n          }\n          break;\n\n        case 'string':\n\n          z['im'] = /* void */\n                  z['re'] = 0;\n\n          var tokens = a.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n          var plus = 1;\n          var minus = 0;\n\n          if (tokens === null) {\n            parser_exit();\n          }\n\n          for (var i = 0; i < tokens.length; i++) {\n\n            var c = tokens[i];\n\n            if (c === ' ' || c === '\\t' || c === '\\n') {\n              /* void */\n            } else if (c === '+') {\n              plus++;\n            } else if (c === '-') {\n              minus++;\n            } else if (c === 'i' || c === 'I') {\n\n              if (plus + minus === 0) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n                i++;\n              } else {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n              }\n              plus = minus = 0;\n\n            } else {\n\n              if (plus + minus === 0 || isNaN(c)) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n                i++;\n              } else {\n                z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n              }\n              plus = minus = 0;\n            }\n          }\n\n          // Still something on the stack\n          if (plus + minus > 0) {\n            parser_exit();\n          }\n          break;\n\n        case 'number':\n          z['im'] = 0;\n          z['re'] = a;\n          break;\n\n        default:\n          parser_exit();\n      }\n\n    if (isNaN(z['re']) || isNaN(z['im'])) {\n      // If a calculation is NaN, we treat it as NaN and don't throw\n      //parser_exit();\n    }\n\n    return z;\n  };\n\n  /**\n   * @constructor\n   * @returns {Complex}\n   */\n  function Complex(a, b) {\n\n    if (!(this instanceof Complex)) {\n      return new Complex(a, b);\n    }\n\n    var z = parse(a, b);\n\n    this['re'] = z['re'];\n    this['im'] = z['im'];\n  }\n\n  Complex.prototype = {\n\n    're': 0,\n    'im': 0,\n\n    /**\n     * Calculates the sign of a complex number, which is a normalized complex\n     *\n     * @returns {Complex}\n     */\n    'sign': function() {\n\n      var abs = this['abs']();\n\n      return new Complex(\n              this['re'] / abs,\n              this['im'] / abs);\n    },\n\n    /**\n     * Adds two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'add': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity + Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity + z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n              this['re'] + z['re'],\n              this['im'] + z['im']);\n    },\n\n    /**\n     * Subtracts two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'sub': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity - Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity - z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n              this['re'] - z['re'],\n              this['im'] - z['im']);\n    },\n\n    /**\n     * Multiplies two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'mul': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity * 0 = NaN\n      if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity * z = Infinity { where z != 0 }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      // Short circuit for real values\n      if (z['im'] === 0 && this['im'] === 0) {\n        return new Complex(this['re'] * z['re'], 0);\n      }\n\n      return new Complex(\n              this['re'] * z['re'] - this['im'] * z['im'],\n              this['re'] * z['im'] + this['im'] * z['re']);\n    },\n\n    /**\n     * Divides two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'div': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // 0 / 0 = NaN and Infinity / Infinity = NaN\n      if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity / 0 = Infinity\n      if (this['isInfinite']() || z['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      // 0 / Infinity = 0\n      if (this['isZero']() || z['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      a = this['re'];\n      b = this['im'];\n\n      var c = z['re'];\n      var d = z['im'];\n      var t, x;\n\n      if (0 === d) {\n        // Divisor is real\n        return new Complex(a / c, b / c);\n      }\n\n      if (Math.abs(c) < Math.abs(d)) {\n\n        x = c / d;\n        t = c * x + d;\n\n        return new Complex(\n                (a * x + b) / t,\n                (b * x - a) / t);\n\n      } else {\n\n        x = d / c;\n        t = d * x + c;\n\n        return new Complex(\n                (a + b * x) / t,\n                (b - a * x) / t);\n      }\n    },\n\n    /**\n     * Calculate the power of two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'pow': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      a = this['re'];\n      b = this['im'];\n\n      if (z['isZero']()) {\n        return Complex['ONE'];\n      }\n\n      // If the exponent is real\n      if (z['im'] === 0) {\n\n        if (b === 0 && a >= 0) {\n\n          return new Complex(Math.pow(a, z['re']), 0);\n\n        } else if (a === 0) { // If base is fully imaginary\n\n          switch ((z['re'] % 4 + 4) % 4) {\n            case 0:\n              return new Complex(Math.pow(b, z['re']), 0);\n            case 1:\n              return new Complex(0, Math.pow(b, z['re']));\n            case 2:\n              return new Complex(-Math.pow(b, z['re']), 0);\n            case 3:\n              return new Complex(0, -Math.pow(b, z['re']));\n          }\n        }\n      }\n\n      /* I couldn't find a good formula, so here is a derivation and optimization\n       *\n       * z_1^z_2 = (a + bi)^(c + di)\n       *         = exp((c + di) * log(a + bi)\n       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n       * =>...\n       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       *\n       * =>...\n       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       *\n       * =>\n       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n       *\n       */\n\n      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {\n        return Complex['ZERO'];\n      }\n\n      var arg = Math.atan2(b, a);\n      var loh = logHypot(a, b);\n\n      a = Math.exp(z['re'] * loh - z['im'] * arg);\n      b = z['im'] * loh + z['re'] * arg;\n      return new Complex(\n              a * Math.cos(b),\n              a * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex square root\n     *\n     * @returns {Complex}\n     */\n    'sqrt': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var r = this['abs']();\n\n      var re, im;\n\n      if (a >= 0) {\n\n        if (b === 0) {\n          return new Complex(Math.sqrt(a), 0);\n        }\n\n        re = 0.5 * Math.sqrt(2.0 * (r + a));\n      } else {\n        re = Math.abs(b) / Math.sqrt(2 * (r - a));\n      }\n\n      if (a <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - a));\n      } else {\n        im = Math.abs(b) / Math.sqrt(2 * (r + a));\n      }\n\n      return new Complex(re, b < 0 ? -im : im);\n    },\n\n    /**\n     * Calculate the complex exponent\n     *\n     * @returns {Complex}\n     */\n    'exp': function() {\n\n      var tmp = Math.exp(this['re']);\n\n      if (this['im'] === 0) {\n        //return new Complex(tmp, 0);\n      }\n      return new Complex(\n              tmp * Math.cos(this['im']),\n              tmp * Math.sin(this['im']));\n    },\n\n    /**\n     * Calculate the complex exponent and subtracts one.\n     *\n     * This may be more accurate than `Complex(x).exp().sub(1)` if\n     * `x` is small.\n     *\n     * @returns {Complex}\n     */\n    'expm1': function() {\n\n      /**\n       * exp(a + i*b) - 1\n       = exp(a) * (cos(b) + j*sin(b)) - 1\n       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n       */\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.expm1(a) * Math.cos(b) + cosm1(b),\n              Math.exp(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the natural log\n     *\n     * @returns {Complex}\n     */\n    'log': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0 && a > 0) {\n        //return new Complex(Math.log(a), 0);\n      }\n\n      return new Complex(\n              logHypot(a, b),\n              Math.atan2(b, a));\n    },\n\n    /**\n     * Calculate the magnitude of the complex number\n     *\n     * @returns {number}\n     */\n    'abs': function() {\n\n      return hypot(this['re'], this['im']);\n    },\n\n    /**\n     * Calculate the angle of the complex number\n     *\n     * @returns {number}\n     */\n    'arg': function() {\n\n      return Math.atan2(this['im'], this['re']);\n    },\n\n    /**\n     * Calculate the sine of the complex number\n     *\n     * @returns {Complex}\n     */\n    'sin': function() {\n\n      // sin(c) = (e^b - e^(-b)) / (2i)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.sin(a) * cosh(b),\n              Math.cos(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the cosine\n     *\n     * @returns {Complex}\n     */\n    'cos': function() {\n\n      // cos(z) = (e^b + e^(-b)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.cos(a) * cosh(b),\n              -Math.sin(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the tangent\n     *\n     * @returns {Complex}\n     */\n    'tan': function() {\n\n      // tan(c) = (e^(ci) - e^(-ci)) / (i(e^(ci) + e^(-ci)))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) + cosh(b);\n\n      return new Complex(\n              Math.sin(a) / d,\n              sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cotangent\n     *\n     * @returns {Complex}\n     */\n    'cot': function() {\n\n      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) - cosh(b);\n\n      return new Complex(\n              -Math.sin(a) / d,\n              sinh(b) / d);\n    },\n\n    /**\n     * Calculate the secant\n     *\n     * @returns {Complex}\n     */\n    'sec': function() {\n\n      // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n              Math.cos(a) * cosh(b) / d,\n              Math.sin(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cosecans\n     *\n     * @returns {Complex}\n     */\n    'csc': function() {\n\n      // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n              Math.sin(a) * cosh(b) / d,\n              -Math.cos(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the complex arcus sinus\n     *\n     * @returns {Complex}\n     */\n    'asin': function() {\n\n      // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n              b * b - a * a + 1,\n              -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n              t1['re'] - b,\n              t1['im'] + a)['log']();\n\n      return new Complex(t2['im'], -t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cosinus\n     *\n     * @returns {Complex}\n     */\n    'acos': function() {\n\n      // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n              b * b - a * a + 1,\n              -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n              t1['re'] - b,\n              t1['im'] + a)['log']();\n\n      return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus tangent\n     *\n     * @returns {Complex}\n     */\n    'atan': function() {\n\n      // atan(c) = i / 2 log((i + x) / (i - x))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0) {\n\n        if (b === 1) {\n          return new Complex(0, Infinity);\n        }\n\n        if (b === -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      var d = a * a + (1.0 - b) * (1.0 - b);\n\n      var t1 = new Complex(\n              (1 - b * b - a * a) / d,\n              -2 * a / d).log();\n\n      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cotangent\n     *\n     * @returns {Complex}\n     */\n    'acot': function() {\n\n      // acot(c) = i / 2 log((c - i) / (c + i))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(Math.atan2(1, a), 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).atan()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).atan();\n    },\n\n    /**\n     * Calculate the complex arcus secant\n     *\n     * @returns {Complex}\n     */\n    'asec': function() {\n\n      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).acos()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).acos();\n    },\n\n    /**\n     * Calculate the complex arcus cosecans\n     *\n     * @returns {Complex}\n     */\n    'acsc': function() {\n\n      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(Math.PI / 2, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).asin()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).asin();\n    },\n\n    /**\n     * Calculate the complex sinh\n     *\n     * @returns {Complex}\n     */\n    'sinh': function() {\n\n      // sinh(c) = (e^c - e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              sinh(a) * Math.cos(b),\n              cosh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex cosh\n     *\n     * @returns {Complex}\n     */\n    'cosh': function() {\n\n      // cosh(c) = (e^c + e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              cosh(a) * Math.cos(b),\n              sinh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex tanh\n     *\n     * @returns {Complex}\n     */\n    'tanh': function() {\n\n      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) + Math.cos(b);\n\n      return new Complex(\n              sinh(a) / d,\n              Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'coth': function() {\n\n      // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) - Math.cos(b);\n\n      return new Complex(\n              sinh(a) / d,\n              -Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'csch': function() {\n\n      // csch(c) = 2 / (e^c - e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) - cosh(2 * a);\n\n      return new Complex(\n              -2 * sinh(a) * Math.cos(b) / d,\n              2 * cosh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex sech\n     *\n     * @returns {Complex}\n     */\n    'sech': function() {\n\n      // sech(c) = 2 / (e^c + e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) + cosh(2 * a);\n\n      return new Complex(\n              2 * cosh(a) * Math.cos(b) / d,\n              -2 * sinh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'asinh': function() {\n\n      // asinh(c) = log(c + sqrt(c^2 + 1))\n\n      var tmp = this['im'];\n      this['im'] = -this['re'];\n      this['re'] = tmp;\n      var res = this['asin']();\n\n      this['re'] = -this['im'];\n      this['im'] = tmp;\n      tmp = res['re'];\n\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n      return res;\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'acosh': function() {\n\n      // acosh(c) = log(c + sqrt(c^2 - 1))\n\n      var res = this['acos']();\n      if (res['im'] <= 0) {\n        var tmp = res['re'];\n        res['re'] = -res['im'];\n        res['im'] = tmp;\n      } else {\n        var tmp = res['im'];\n        res['im'] = -res['re'];\n        res['re'] = tmp;\n      }\n      return res;\n    },\n\n    /**\n     * Calculate the complex atanh\n     *\n     * @returns {Complex}\n     */\n    'atanh': function() {\n\n      // atanh(c) = log((1+c) / (1-c)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var noIM = a > 1 && b === 0;\n      var oneMinus = 1 - a;\n      var onePlus = 1 + a;\n      var d = oneMinus * oneMinus + b * b;\n\n      var x = (d !== 0)\n              ? new Complex(\n                      (onePlus * oneMinus - b * b) / d,\n                      (b * oneMinus + onePlus * b) / d)\n              : new Complex(\n                      (a !== -1) ? (a / 0) : 0,\n                      (b !== 0) ? (b / 0) : 0);\n\n      var temp = x['re'];\n      x['re'] = logHypot(x['re'], x['im']) / 2;\n      x['im'] = Math.atan2(x['im'], temp) / 2;\n      if (noIM) {\n        x['im'] = -x['im'];\n      }\n      return x;\n    },\n\n    /**\n     * Calculate the complex acoth\n     *\n     * @returns {Complex}\n     */\n    'acoth': function() {\n\n      // acoth(c) = log((c+1) / (c-1)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Math.PI / 2);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).atanh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).atanh();\n    },\n\n    /**\n     * Calculate the complex acsch\n     *\n     * @returns {Complex}\n     */\n    'acsch': function() {\n\n      // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n\n        return new Complex(\n                (a !== 0)\n                ? Math.log(a + Math.sqrt(a * a + 1))\n                : Infinity, 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).asinh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).asinh();\n    },\n\n    /**\n     * Calculate the complex asech\n     *\n     * @returns {Complex}\n     */\n    'asech': function() {\n\n      // asech(c) = log((1+sqrt(1-c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).acosh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).acosh();\n    },\n\n    /**\n     * Calculate the complex inverse 1/z\n     *\n     * @returns {Complex}\n     */\n    'inverse': function() {\n\n      // 1 / 0 = Infinity and 1 / Infinity = 0\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      if (this['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var d = a * a + b * b;\n\n      return new Complex(a / d, -b / d);\n    },\n\n    /**\n     * Returns the complex conjugate\n     *\n     * @returns {Complex}\n     */\n    'conjugate': function() {\n\n      return new Complex(this['re'], -this['im']);\n    },\n\n    /**\n     * Gets the negated complex number\n     *\n     * @returns {Complex}\n     */\n    'neg': function() {\n\n      return new Complex(-this['re'], -this['im']);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'ceil': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.ceil(this['re'] * places) / places,\n              Math.ceil(this['im'] * places) / places);\n    },\n\n    /**\n     * Floors the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'floor': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.floor(this['re'] * places) / places,\n              Math.floor(this['im'] * places) / places);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'round': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.round(this['re'] * places) / places,\n              Math.round(this['im'] * places) / places);\n    },\n\n    /**\n     * Compares two complex numbers\n     *\n     * **Note:** new Complex(Infinity).equals(Infinity) === false\n     *\n     * @returns {boolean}\n     */\n    'equals': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n              Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * @returns {Complex}\n     */\n    'clone': function() {\n\n      return new Complex(this['re'], this['im']);\n    },\n\n    /**\n     * Gets a string of the actual complex number\n     *\n     * @returns {string}\n     */\n    'toString': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var ret = '';\n\n      if (this['isNaN']()) {\n        return 'NaN';\n      }\n\n      if (this['isZero']()) {\n        return '0';\n      }\n\n      if (this['isInfinite']()) {\n        return 'Infinity';\n      }\n\n      if (a !== 0) {\n        ret += a;\n      }\n\n      if (b !== 0) {\n\n        if (a !== 0) {\n          ret += b < 0 ? ' - ' : ' + ';\n        } else if (b < 0) {\n          ret += '-';\n        }\n\n        b = Math.abs(b);\n\n        if (1 !== b) {\n          ret += b;\n        }\n        ret += 'i';\n      }\n\n      if (!ret)\n        return '0';\n\n      return ret;\n    },\n\n    /**\n     * Returns the actual number as a vector\n     *\n     * @returns {Array}\n     */\n    'toVector': function() {\n\n      return [this['re'], this['im']];\n    },\n\n    /**\n     * Returns the actual real value of the current object\n     *\n     * @returns {number|null}\n     */\n    'valueOf': function() {\n\n      if (this['im'] === 0) {\n        return this['re'];\n      }\n      return null;\n    },\n\n    /**\n     * Determines whether a complex number is not on the Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function() {\n      return isNaN(this['re']) || isNaN(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the zero pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isZero': function() {\n      return (\n              (this['re'] === 0 || this['re'] === -0) &&\n              (this['im'] === 0 || this['im'] === -0)\n              );\n    },\n\n    /**\n     * Determines whether a complex number is not at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function() {\n      return isFinite(this['re']) && isFinite(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isInfinite': function() {\n      return !(this['isNaN']() || this['isFinite']());\n    }\n  };\n\n  Complex['ZERO'] = new Complex(0, 0);\n  Complex['ONE'] = new Complex(1, 0);\n  Complex['I'] = new Complex(0, 1);\n  Complex['PI'] = new Complex(Math.PI, 0);\n  Complex['E'] = new Complex(Math.E, 0);\n  Complex['INFINITY'] = new Complex(Infinity, Infinity);\n  Complex['NAN'] = new Complex(NaN, NaN);\n  Complex['EPSILON'] = 1e-16;\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return Complex;\n    });\n  } else if (typeof exports === 'object') {\n    Object.defineProperty(exports, \"__esModule\", {'value': true});\n    Complex['default'] = Complex;\n    Complex['Complex'] = Complex;\n    module['exports'] = Complex;\n  } else {\n    root['Complex'] = Complex;\n  }\n\n})(this);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","/**\n * @license Fraction.js v4.0.12 09/09/2015\n * http://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2015, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function createError(name) {\n\n    function errorConstructor() {\n      var temp = Error.apply(this, arguments);\n      temp['name'] = this['name'] = name;\n      this['stack'] = temp['stack'];\n      this['message'] = temp['message'];\n    }\n\n    /**\n     * Error constructor\n     *\n     * @constructor\n     */\n    function IntermediateInheritor() {}\n    IntermediateInheritor.prototype = Error.prototype;\n    errorConstructor.prototype = new IntermediateInheritor();\n\n    return errorConstructor;\n  }\n\n  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');\n  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throwInvalidParam();\n    }\n    return n * s;\n  }\n\n  function throwInvalidParam() {\n    throw new InvalidParameter();\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n        {\n          if (\"d\" in p1 && \"n\" in p1) {\n            n = p1[\"n\"];\n            d = p1[\"d\"];\n            if (\"s\" in p1)\n              n *= p1[\"s\"];\n          } else if (0 in p1) {\n            n = p1[0];\n            if (1 in p1)\n              d = p1[1];\n          } else {\n            throwInvalidParam();\n          }\n          s = n * d;\n          break;\n        }\n        case \"number\":\n        {\n          if (p1 < 0) {\n            s = p1;\n            p1 = -p1;\n          }\n\n          if (p1 % 1 === 0) {\n            n = p1;\n          } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n            if (p1 >= 1) {\n              z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n              p1 /= z;\n            }\n\n            // Using Farey Sequences\n            // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n            while (B <= N && D <= N) {\n              M = (A + C) / (B + D);\n\n              if (p1 === M) {\n                if (B + D <= N) {\n                  n = A + C;\n                  d = B + D;\n                } else if (D > B) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n                break;\n\n              } else {\n\n                if (p1 > M) {\n                  A += C;\n                  B += D;\n                } else {\n                  C += A;\n                  D += B;\n                }\n\n                if (B > N) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n              }\n            }\n            n *= z;\n          } else if (isNaN(p1) || isNaN(p2)) {\n            d = n = NaN;\n          }\n          break;\n        }\n        case \"string\":\n        {\n          B = p1.match(/\\d+|./g);\n\n          if (B === null)\n            throwInvalidParam();\n\n          if (B[A] === '-') {// Check for minus sign at the beginning\n            s = -1;\n            A++;\n          } else if (B[A] === '+') {// Check for plus sign at the beginning\n            A++;\n          }\n\n          if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n            w = assign(B[A++], s);\n          } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n            if (B[A] !== '.') { // Handle 0.5 and .5\n              v = assign(B[A++], s);\n            }\n            A++;\n\n            // Check for decimal places\n            if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n              w = assign(B[A], s);\n              y = Math.pow(10, B[A].length);\n              A++;\n            }\n\n            // Check for repeating places\n            if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n              x = assign(B[A + 1], s);\n              z = Math.pow(10, B[A + 1].length) - 1;\n              A += 3;\n            }\n\n          } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n            w = assign(B[A], s);\n            y = assign(B[A + 2], 1);\n            A += 3;\n          } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n            v = assign(B[A], s);\n            w = assign(B[A + 2], s);\n            y = assign(B[A + 4], 1);\n            A += 5;\n          }\n\n          if (B.length <= A) { // Check for more tokens on the stack\n            d = y * z;\n            s = /* void */\n                    n = x + d * v + z * w;\n            break;\n          }\n\n          /* Fall through on error */\n        }\n        default:\n          throwInvalidParam();\n      }\n\n    if (d === 0) {\n      throw new DivisionByZero();\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n            d /= 2) {\n    }\n\n    for (; d % 5 === 0;\n            d /= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n     function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a %= b;\n      if (!a)\n        return b;\n      b %= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    if (!(this instanceof Fraction)) {\n      return new Fraction(a, b);\n    }\n\n    parse(a, b);\n\n    if (Fraction['REDUCE']) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    } else {\n      a = 1;\n    }\n\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  }\n\n  /**\n   * Boolean global variable to be able to disable automatic reduction of the fraction\n   *\n   */\n  Fraction['REDUCE'] = 1;\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return new Fraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return new Fraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n              this[\"d\"] * P[\"n\"]\n              );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return new Fraction(this);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return new Fraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        Fraction(0, 0); // Throw DivisionByZero\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return new Fraction(\n              this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n              P[\"d\"] * this[\"d\"]\n              );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return new Fraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return new Fraction;\n      }\n      return new Fraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denumerator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return new Fraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some integer exponent\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(m) {\n\n      if (m < 0) {\n        return new Fraction(Math.pow(this['s'] * this[\"d\"], -m), Math.pow(this[\"n\"], -m));\n      } else {\n        return new Fraction(Math.pow(this['s'] * this[\"n\"], m), Math.pow(this[\"d\"], m));\n      }\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      // First naive implementation, needs improvement\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      var cont = this['abs']()['toContinued']();\n\n      eps = eps || 0.001;\n\n      function rec(a) {\n        if (a.length === 1)\n          return new Fraction(a[0]);\n        return rec(a.slice(1))['inverse']()['add'](a[0]);\n      }\n\n      for (var i = 0; i < cont.length; i++) {\n        var tmp = rec(cont.slice(0, i + 1));\n        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {\n          return tmp['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          str += \" \";\n          n %= d;\n        }\n\n        str += n;\n        str += '/';\n        str += d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          n %= d;\n        }\n\n        str += \"\\\\frac{\";\n        str += n;\n        str += '}{';\n        str += d;\n        str += '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var g;\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      if (!Fraction['REDUCE']) {\n        g = gcd(N, D);\n        N /= g;\n        D /= g;\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repitation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] === -1 ? \"-\" : \"\";\n\n      str += N / D | 0;\n\n      N %= D;\n      N *= 10;\n\n      if (N)\n        str += \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \"(\";\n        for (var i = cycLen; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \")\";\n      } else {\n        for (var i = dec; N && i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(exports, \"__esModule\", {'value': true});\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n","/*\r\n * Natural Sort algorithm for Javascript - Version 0.7 - Released under MIT license\r\n * Author: Jim Palmer (based on chunking idea from Dave Koelle)\r\n */\r\n/*jshint unused:false */\r\nmodule.exports = function naturalSort (a, b) {\r\n\t\"use strict\";\r\n\tvar re = /(^([+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,\r\n\t\tsre = /(^[ ]*|[ ]*$)/g,\r\n\t\tdre = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\r\n\t\thre = /^0x[0-9a-f]+$/i,\r\n\t\tore = /^0/,\r\n\t\ti = function(s) { return naturalSort.insensitive && ('' + s).toLowerCase() || '' + s; },\r\n\t\t// convert all to strings strip whitespace\r\n\t\tx = i(a).replace(sre, '') || '',\r\n\t\ty = i(b).replace(sre, '') || '',\r\n\t\t// chunk/tokenize\r\n\t\txN = x.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\r\n\t\tyN = y.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\r\n\t\t// numeric, hex or date detection\r\n\t\txD = parseInt(x.match(hre), 16) || (xN.length !== 1 && x.match(dre) && Date.parse(x)),\r\n\t\tyD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null,\r\n\t\toFxNcL, oFyNcL;\r\n\t// first try and sort Hex codes or Dates\r\n\tif (yD) {\r\n\t\tif ( xD < yD ) { return -1; }\r\n\t\telse if ( xD > yD ) { return 1; }\r\n\t}\r\n\t// natural sorting through split numeric strings and default strings\r\n\tfor(var cLoc=0, numS=Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\r\n\t\t// find floats not starting with '0', string or 0 if not defined (Clint Priest)\r\n\t\toFxNcL = !(xN[cLoc] || '').match(ore) && parseFloat(xN[cLoc]) || xN[cLoc] || 0;\r\n\t\toFyNcL = !(yN[cLoc] || '').match(ore) && parseFloat(yN[cLoc]) || yN[cLoc] || 0;\r\n\t\t// handle numeric vs string comparison - number < string - (Kyle Adams)\r\n\t\tif (isNaN(oFxNcL) !== isNaN(oFyNcL)) { return (isNaN(oFxNcL)) ? 1 : -1; }\r\n\t\t// rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\r\n\t\telse if (typeof oFxNcL !== typeof oFyNcL) {\r\n\t\t\toFxNcL += '';\r\n\t\t\toFyNcL += '';\r\n\t\t}\r\n\t\tif (oFxNcL < oFyNcL) { return -1; }\r\n\t\tif (oFxNcL > oFyNcL) { return 1; }\r\n\t}\r\n\treturn 0;\r\n};\r\n","/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n'use strict';\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n\n  function ok () {\n    return true;\n  }\n\n  function notOk () {\n    return false;\n  }\n\n  function undef () {\n    return undefined;\n  }\n\n  /**\n   * @typedef {{\n   *   params: Param[],\n   *   fn: function\n   * }} Signature\n   *\n   * @typedef {{\n   *   types: Type[],\n   *   restParam: boolean\n   * }} Param\n   *\n   * @typedef {{\n   *   name: string,\n   *   typeIndex: number,\n   *   test: function,\n   *   conversion?: ConversionDef,\n   *   conversionIndex: number,\n   * }} Type\n   *\n   * @typedef {{\n   *   from: string,\n   *   to: string,\n   *   convert: function (*) : *\n   * }} ConversionDef\n   *\n   * @typedef {{\n   *   name: string,\n   *   test: function(*) : boolean\n   * }} TypeDef\n   */\n\n  // create a new instance of typed-function\n  function create () {\n    // data type tests\n    var _types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) {\n        return typeof x === 'object' && x.constructor === Object\n      }},\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    var anyType = {\n      name: 'any',\n      test: ok\n    }\n\n    // types which need to be ignored\n    var _ignore = [];\n\n    // type conversions\n    var _conversions = [];\n\n    // This is a temporary object, will be replaced with a typed function at the end\n    var typed = {\n      types: _types,\n      conversions: _conversions,\n      ignore: _ignore\n    };\n\n    /**\n     * Find the test function for a type\n     * @param {String} typeName\n     * @return {TypeDef} Returns the type definition when found,\n     *                    Throws a TypeError otherwise\n     */\n    function findTypeByName (typeName) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.name === typeName;\n      });\n\n      if (entry) {\n        return entry;\n      }\n\n      if (typeName === 'any') { // special baked-in case 'any'\n        return anyType;\n      }\n\n      var hint = findInArray(typed.types, function (entry) {\n        return entry.name.toLowerCase() === typeName.toLowerCase();\n      });\n\n      throw new TypeError('Unknown type \"' + typeName + '\"' +\n          (hint ? ('. Did you mean \"' + hint.name + '\"?') : ''));\n    }\n\n    /**\n     * Find the index of a type definition. Handles special case 'any'\n     * @param {TypeDef} type\n     * @return {number}\n     */\n    function findTypeIndex(type) {\n      if (type === anyType) {\n        return 999;\n      }\n\n      return typed.types.indexOf(type);\n    }\n\n    /**\n     * Find a type that matches a value.\n     * @param {*} value\n     * @return {string} Returns the name of the first type for which\n     *                  the type test matches the value.\n     */\n    function findTypeName(value) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.test(value);\n      });\n\n      if (entry) {\n        return entry.name;\n      }\n\n      throw new TypeError('Value has unknown type. Value: ' + value);\n    }\n\n    /**\n     * Find a specific signature from a (composed) typed function, for example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an error when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = findTypeName(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n    \n    /**\n     * Stringify parameters in a normalized way\n     * @param {Param[]} params\n     * @return {string}\n     */\n    function stringifyParams (params) {\n      return params\n          .map(function (param) {\n            var typeNames = param.types.map(getTypeName);\n\n            return (param.restParam ? '...' : '') + typeNames.join('|');\n          })\n          .join(',');\n    }\n\n    /**\n     * Parse a parameter, like \"...number | boolean\"\n     * @param {string} param\n     * @param {ConversionDef[]} conversions\n     * @return {Param} param\n     */\n    function parseParam (param, conversions) {\n      var restParam = param.indexOf('...') === 0;\n      var types = (!restParam)\n          ? param\n          : (param.length > 3)\n              ? param.slice(3)\n              : 'any';\n\n      var typeNames = types.split('|').map(trim)\n          .filter(notEmpty)\n          .filter(notIgnore);\n\n      var matchingConversions = filterConversions(conversions, typeNames);\n\n      var exactTypes = typeNames.map(function (typeName) {\n        var type = findTypeByName(typeName);\n\n        return {\n          name: typeName,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: null,\n          conversionIndex: -1\n        };\n      });\n\n      var convertibleTypes = matchingConversions.map(function (conversion) {\n        var type = findTypeByName(conversion.from);\n\n        return {\n          name: conversion.from,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: conversion,\n          conversionIndex: conversions.indexOf(conversion)\n        };\n      });\n\n      return {\n        types: exactTypes.concat(convertibleTypes),\n        restParam: restParam\n      };\n    }\n\n    /**\n     * Parse a signature with comma separated parameters,\n     * like \"number | boolean, ...string\"\n     * @param {string} signature\n     * @param {function} fn\n     * @param {ConversionDef[]} conversions\n     * @return {Signature | null} signature\n     */\n    function parseSignature (signature, fn, conversions) {\n      var params = [];\n\n      if (signature.trim() !== '') {\n        params = signature\n            .split(',')\n            .map(trim)\n            .map(function (param, index, array) {\n              var parsedParam = parseParam(param, conversions);\n\n              if (parsedParam.restParam && (index !== array.length - 1)) {\n                throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' +\n                    'only allowed for the last parameter');\n              }\n\n              return parsedParam;\n          });\n      }\n\n      if (params.some(isInvalidParam)) {\n        // invalid signature: at least one parameter has no types\n        // (they may have been filtered)\n        return null;\n      }\n\n      return {\n        params: params,\n        fn: fn\n      };\n    }\n\n    /**\n     * Test whether a set of params contains a restParam\n     * @param {Param[]} params\n     * @return {boolean} Returns true when the last parameter is a restParam\n     */\n    function hasRestParam(params) {\n      var param = last(params)\n      return param ? param.restParam : false;\n    }\n\n    /**\n     * Test whether a parameter contains conversions\n     * @param {Param} param\n     * @return {boolean} Returns true when at least one of the parameters\n     *                   contains a conversion.\n     */\n    function hasConversions(param) {\n      return param.types.some(function (type) {\n        return type.conversion != null;\n      });\n    }\n\n    /**\n     * Create a type test for a single parameter, which can have one or multiple\n     * types.\n     * @param {Param} param\n     * @return {function(x: *) : boolean} Returns a test function\n     */\n    function compileTest(param) {\n      if (!param || param.types.length === 0) {\n        // nothing to do\n        return ok;\n      }\n      else if (param.types.length === 1) {\n        return findTypeByName(param.types[0].name).test;\n      }\n      else if (param.types.length === 2) {\n        var test0 = findTypeByName(param.types[0].name).test;\n        var test1 = findTypeByName(param.types[1].name).test;\n        return function or(x) {\n          return test0(x) || test1(x);\n        }\n      }\n      else { // param.types.length > 2\n        var tests = param.types.map(function (type) {\n          return findTypeByName(type.name).test;\n        })\n        return function or(x) {\n          for (var i = 0; i < tests.length; i++) {\n            if (tests[i](x)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n    }\n\n    /**\n     * Create a test for all parameters of a signature\n     * @param {Param[]} params\n     * @return {function(args: Array<*>) : boolean}\n     */\n    function compileTests(params) {\n      var tests, test0, test1;\n\n      if (hasRestParam(params)) {\n        // variable arguments like '...number'\n        tests = initial(params).map(compileTest);\n        var varIndex = tests.length;\n        var lastTest = compileTest(last(params));\n        var testRestParam = function (args) {\n          for (var i = varIndex; i < args.length; i++) {\n            if (!lastTest(args[i])) {\n              return false;\n            }\n          }\n          return true;\n        }\n\n        return function testArgs(args) {\n          for (var i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false;\n            }\n          }\n          return testRestParam(args) && (args.length >= varIndex + 1);\n        };\n      }\n      else {\n        // no variable arguments\n        if (params.length === 0) {\n          return function testArgs(args) {\n            return args.length === 0;\n          };\n        }\n        else if (params.length === 1) {\n          test0 = compileTest(params[0]);\n          return function testArgs(args) {\n            return test0(args[0]) && args.length === 1;\n          };\n        }\n        else if (params.length === 2) {\n          test0 = compileTest(params[0]);\n          test1 = compileTest(params[1]);\n          return function testArgs(args) {\n            return test0(args[0]) && test1(args[1]) && args.length === 2;\n          };\n        }\n        else { // arguments.length > 2\n          tests = params.map(compileTest);\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n            return args.length === tests.length;\n          };\n        }\n      }\n    }\n\n    /**\n     * Find the parameter at a specific index of a signature.\n     * Handles rest parameters.\n     * @param {Signature} signature\n     * @param {number} index\n     * @return {Param | null} Returns the matching parameter when found,\n     *                        null otherwise.\n     */\n    function getParamAtIndex(signature, index) {\n      return index < signature.params.length\n          ? signature.params[index]\n          : hasRestParam(signature.params)\n              ? last(signature.params)\n              : null\n    }\n\n    /**\n     * Get all type names of a parameter\n     * @param {Signature} signature\n     * @param {number} index\n     * @param {boolean} excludeConversions\n     * @return {string[]} Returns an array with type names\n     */\n    function getExpectedTypeNames (signature, index, excludeConversions) {\n      var param = getParamAtIndex(signature, index);\n      var types = param\n          ? excludeConversions\n                  ? param.types.filter(isExactType)\n                  : param.types\n          : [];\n\n      return types.map(getTypeName);\n    }\n\n    /**\n     * Returns the name of a type\n     * @param {Type} type\n     * @return {string} Returns the type name\n     */\n    function getTypeName(type) {\n      return type.name;\n    }\n\n    /**\n     * Test whether a type is an exact type or conversion\n     * @param {Type} type\n     * @return {boolean} Returns true when\n     */\n    function isExactType(type) {\n      return type.conversion === null || type.conversion === undefined;\n    }\n\n    /**\n     * Helper function for creating error messages: create an array with\n     * all available types on a specific argument index.\n     * @param {Signature[]} signatures\n     * @param {number} index\n     * @return {string[]} Returns an array with available types\n     */\n    function mergeExpectedParams(signatures, index) {\n      var typeNames = uniq(flatMap(signatures, function (signature) {\n        return getExpectedTypeNames(signature, index, false);\n      }));\n\n      return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;\n    }\n\n    /**\n     * Create\n     * @param {string} name             The name of the function\n     * @param {array.<*>} args          The actual arguments passed to the function\n     * @param {Signature[]} signatures  A list with available signatures\n     * @return {TypeError} Returns a type error with additional data\n     *                     attached to it in the property `data`\n     */\n    function createError(name, args, signatures) {\n      var err, expected;\n      var _name = name || 'unnamed';\n\n      // test for wrong type at some index\n      var matchingSignatures = signatures;\n      var index;\n      for (index = 0; index < args.length; index++) {\n        var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n          var test = compileTest(getParamAtIndex(signature, index));\n          return (index < signature.params.length || hasRestParam(signature.params)) &&\n              test(args[index]);\n        });\n\n        if (nextMatchingDefs.length === 0) {\n          // no matching signatures anymore, throw error \"wrong type\"\n          expected = mergeExpectedParams(matchingSignatures, index);\n          if (expected.length > 0) {\n            var actualType = findTypeName(args[index]);\n\n            err = new TypeError('Unexpected type of argument in function ' + _name +\n                ' (expected: ' + expected.join(' or ') +\n                ', actual: ' + actualType + ', index: ' + index + ')');\n            err.data = {\n              category: 'wrongType',\n              fn: _name,\n              index: index,\n              actual: actualType,\n              expected: expected\n            }\n            return err;\n          }\n        }\n        else {\n          matchingSignatures = nextMatchingDefs;\n        }\n      }\n\n      // test for too few arguments\n      var lengths = matchingSignatures.map(function (signature) {\n        return hasRestParam(signature.params) ? Infinity : signature.params.length;\n      });\n      if (args.length < Math.min.apply(null, lengths)) {\n        expected = mergeExpectedParams(matchingSignatures, index);\n        err = new TypeError('Too few arguments in function ' + _name +\n            ' (expected: ' + expected.join(' or ') +\n            ', index: ' + args.length + ')');\n        err.data = {\n          category: 'tooFewArgs',\n          fn: _name,\n          index: args.length,\n          expected: expected\n        }\n        return err;\n      }\n\n      // test for too many arguments\n      var maxLength = Math.max.apply(null, lengths);\n      if (args.length > maxLength) {\n        err = new TypeError('Too many arguments in function ' + _name +\n            ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n        err.data = {\n          category: 'tooManyArgs',\n          fn: _name,\n          index: args.length,\n          expectedLength: maxLength\n        }\n        return err;\n      }\n\n      err = new TypeError('Arguments of type \"' + args.join(', ') +\n          '\" do not match any of the defined signatures of function ' + _name + '.');\n      err.data = {\n        category: 'mismatch',\n        actual: args.map(findTypeName)\n      }\n      return err;\n    }\n\n    /**\n     * Find the lowest index of all exact types of a parameter (no conversions)\n     * @param {Param} param\n     * @return {number} Returns the index of the lowest type in typed.types\n     */\n    function getLowestTypeIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].typeIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Find the lowest index of the conversion of all types of the parameter\n     * having a conversion\n     * @param {Param} param\n     * @return {number} Returns the lowest index of the conversions of this type\n     */\n    function getLowestConversionIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (!isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].conversionIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Compare two params\n     * @param {Param} param1\n     * @param {Param} param2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareParams (param1, param2) {\n      var c;\n\n      // compare having a rest parameter or not\n      c = param1.restParam - param2.restParam;\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare having conversions or not\n      c = hasConversions(param1) - hasConversions(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of the types\n      c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of any conversion\n      return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n    }\n\n    /**\n     * Compare two signatures\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareSignatures (signature1, signature2) {\n      var len = Math.min(signature1.params.length, signature2.params.length);\n      var i;\n      var c;\n\n      // compare whether the params have conversions at all or not\n      c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions)\n      if (c !== 0) {\n        return c;\n      }\n\n      // next compare whether the params have conversions one by one\n      for (i = 0; i < len; i++) {\n        c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the types of the params one by one\n      for (i = 0; i < len; i++) {\n        c = compareParams(signature1.params[i], signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the number of params\n      return signature1.params.length - signature2.params.length;\n    }\n\n    /**\n     * Get params containing all types that can be converted to the defined types.\n     *\n     * @param {ConversionDef[]} conversions\n     * @param {string[]} typeNames\n     * @return {ConversionDef[]} Returns the conversions that are available\n     *                        for every type (if any)\n     */\n    function filterConversions(conversions, typeNames) {\n      var matches = {};\n\n      conversions.forEach(function (conversion) {\n        if (typeNames.indexOf(conversion.from) === -1 &&\n            typeNames.indexOf(conversion.to) !== -1 &&\n            !matches[conversion.from]) {\n          matches[conversion.from] = conversion;\n        }\n      });\n\n      return Object.keys(matches).map(function (from) {\n        return matches[from];\n      });\n    }\n\n    /**\n     * Preprocess arguments before calling the original function:\n     * - if needed convert the parameters\n     * - in case of rest parameters, move the rest parameters into an Array\n     * @param {Param[]} params\n     * @param {function} fn\n     * @return {function} Returns a wrapped function\n     */\n    function compileArgsPreprocessing(params, fn) {\n      var fnConvert = fn;\n\n      // TODO: can we make this wrapper function smarter/simpler?\n\n      if (params.some(hasConversions)) {\n        var restParam = hasRestParam(params);\n        var compiledConversions = params.map(compileArgConversion)\n\n        fnConvert = function convertArgs() {\n          var args = [];\n          var last = restParam ? arguments.length - 1 : arguments.length;\n          for (var i = 0; i < last; i++) {\n            args[i] = compiledConversions[i](arguments[i]);\n          }\n          if (restParam) {\n            args[last] = arguments[last].map(compiledConversions[last]);\n          }\n\n          return fn.apply(null, args);\n        }\n      }\n\n      var fnPreprocess = fnConvert;\n      if (hasRestParam(params)) {\n        var offset = params.length - 1;\n\n        fnPreprocess = function preprocessRestParams () {\n          return fnConvert.apply(null,\n              slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n        }\n      }\n\n      return fnPreprocess;\n    }\n\n    /**\n     * Compile conversion for a parameter to the right type\n     * @param {Param} param\n     * @return {function} Returns the wrapped function that will convert arguments\n     *\n     */\n    function compileArgConversion(param) {\n      var test0, test1, conversion0, conversion1;\n      var tests = [];\n      var conversions = [];\n\n      param.types.forEach(function (type) {\n        if (type.conversion) {\n          tests.push(findTypeByName(type.conversion.from).test);\n          conversions.push(type.conversion.convert);\n        }\n      });\n\n      // create optimized conversion functions depending on the number of conversions\n      switch (conversions.length) {\n        case 0:\n          return function convertArg(arg) {\n            return arg;\n          }\n\n        case 1:\n          test0 = tests[0]\n          conversion0 = conversions[0];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            return arg;\n          }\n\n        case 2:\n          test0 = tests[0]\n          test1 = tests[1]\n          conversion0 = conversions[0];\n          conversion1 = conversions[1];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            if (test1(arg)) {\n              return conversion1(arg)\n            }\n            return arg;\n          }\n\n        default:\n          return function convertArg(arg) {\n            for (var i = 0; i < conversions.length; i++) {\n              if (tests[i](arg)) {\n                return conversions[i](arg);\n              }\n            }\n            return arg;\n          }\n      }\n    }\n\n    /**\n     * Convert an array with signatures into a map with signatures,\n     * where signatures with union types are split into separate signatures\n     *\n     * Throws an error when there are conflicting types\n     *\n     * @param {Signature[]} signatures\n     * @return {Object.<string, function>}  Returns a map with signatures\n     *                                      as key and the original function\n     *                                      of this signature as value.\n     */\n    function createSignaturesMap(signatures) {\n      var signaturesMap = {};\n      signatures.forEach(function (signature) {\n        if (!signature.params.some(hasConversions)) {\n          splitParams(signature.params, true).forEach(function (params) {\n            signaturesMap[stringifyParams(params)] = signature.fn;\n          });\n        }\n      });\n\n      return signaturesMap;\n    }\n\n    /**\n     * Split params with union types in to separate params.\n     *\n     * For example:\n     *\n     *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n     *     // returns:\n     *     // [\n     *     //   ['Array', 'string'],\n     *     //   ['Array', 'RegExp'],\n     *     //   ['Object', 'string'],\n     *     //   ['Object', 'RegExp']\n     *     // ]\n     *\n     * @param {Param[]} params\n     * @param {boolean} ignoreConversionTypes\n     * @return {Param[]}\n     */\n    function splitParams(params, ignoreConversionTypes) {\n      function _splitParams(params, index, types) {\n        if (index < params.length) {\n          var param = params[index]\n          var filteredTypes = ignoreConversionTypes\n              ? param.types.filter(isExactType)\n              : param.types;\n          var typeGroups\n\n          if (param.restParam) {\n            // split the types of a rest parameter in two:\n            // one with only exact types, and one with exact types and conversions\n            var exactTypes = filteredTypes.filter(isExactType)\n            typeGroups = exactTypes.length < filteredTypes.length\n                ? [exactTypes, filteredTypes]\n                : [filteredTypes]\n\n          }\n          else {\n            // split all the types of a regular parameter into one type per group\n            typeGroups = filteredTypes.map(function (type) {\n              return [type]\n            })\n          }\n\n          // recurse over the groups with types\n          return flatMap(typeGroups, function (typeGroup) {\n            return _splitParams(params, index + 1, types.concat([typeGroup]));\n          });\n\n        }\n        else {\n          // we've reached the end of the parameters. Now build a new Param\n          var splittedParams = types.map(function (type, typeIndex) {\n            return {\n              types: type,\n              restParam: (typeIndex === params.length - 1) && hasRestParam(params)\n            }\n          });\n\n          return [splittedParams];\n        }\n      }\n\n      return _splitParams(params, 0, []);\n    }\n\n    /**\n     * Test whether two signatures have a conflicting signature\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {boolean} Returns true when the signatures conflict, false otherwise.\n     */\n    function hasConflictingParams(signature1, signature2) {\n      var ii = Math.max(signature1.params.length, signature2.params.length);\n\n      for (var i = 0; i < ii; i++) {\n        var typesNames1 = getExpectedTypeNames(signature1, i, true);\n        var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n        if (!hasOverlap(typesNames1, typesNames2)) {\n          return false;\n        }\n      }\n\n      var len1 = signature1.params.length;\n      var len2 = signature2.params.length;\n      var restParam1 = hasRestParam(signature1.params);\n      var restParam2 = hasRestParam(signature2.params);\n\n      return restParam1\n          ? restParam2 ? (len1 === len2) : (len2 >= len1)\n          : restParam2 ? (len1 >= len2)  : (len1 === len2)\n    }\n\n    /**\n     * Create a typed function\n     * @param {String} name               The name for the typed function\n     * @param {Object.<string, function>} signaturesMap\n     *                                    An object with one or\n     *                                    multiple signatures as key, and the\n     *                                    function corresponding to the\n     *                                    signature as value.\n     * @return {function}  Returns the created typed function.\n     */\n    function createTypedFunction(name, signaturesMap) {\n      if (Object.keys(signaturesMap).length === 0) {\n        throw new SyntaxError('No signatures provided');\n      }\n\n      // parse the signatures, and check for conflicts\n      var parsedSignatures = [];\n      Object.keys(signaturesMap)\n          .map(function (signature) {\n            return parseSignature(signature, signaturesMap[signature], typed.conversions);\n          })\n          .filter(notNull)\n          .forEach(function (parsedSignature) {\n            // check whether this parameter conflicts with already parsed signatures\n            var conflictingSignature = findInArray(parsedSignatures, function (s) {\n              return hasConflictingParams(s, parsedSignature)\n            });\n            if (conflictingSignature) {\n              throw new TypeError('Conflicting signatures \"' +\n                  stringifyParams(conflictingSignature.params) + '\" and \"' +\n                  stringifyParams(parsedSignature.params) + '\".');\n            }\n\n            parsedSignatures.push(parsedSignature);\n          });\n\n      // split and filter the types of the signatures, and then order them\n      var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n        var params = parsedSignature ? splitParams(parsedSignature.params, false) : []\n\n        return params.map(function (params) {\n          return {\n            params: params,\n            fn: parsedSignature.fn\n          };\n        });\n      }).filter(notNull);\n\n      signatures.sort(compareSignatures);\n\n      // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n      var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n      var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n      var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n      var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n      var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n      var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n      var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n      // compile the tests\n      var tests = signatures.map(function (signature) {\n        return compileTests(signature.params);\n      });\n\n      var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n      var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n      var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n      var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n      var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n      var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n\n      var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n      var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n      var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n      var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n      var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n      var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n      // compile the functions\n      var fns = signatures.map(function(signature) {\n        return compileArgsPreprocessing(signature.params, signature.fn)\n      });\n\n      var fn0 = ok0 ? fns[0] : undef;\n      var fn1 = ok1 ? fns[1] : undef;\n      var fn2 = ok2 ? fns[2] : undef;\n      var fn3 = ok3 ? fns[3] : undef;\n      var fn4 = ok4 ? fns[4] : undef;\n      var fn5 = ok5 ? fns[5] : undef;\n\n      var len0 = ok0 ? signatures[0].params.length : -1;\n      var len1 = ok1 ? signatures[1].params.length : -1;\n      var len2 = ok2 ? signatures[2].params.length : -1;\n      var len3 = ok3 ? signatures[3].params.length : -1;\n      var len4 = ok4 ? signatures[4].params.length : -1;\n      var len5 = ok5 ? signatures[5].params.length : -1;\n\n      // simple and generic, but also slow\n      var iStart = allOk ? 6 : 0;\n      var iEnd = signatures.length;\n      var generic = function generic() {\n        'use strict';\n\n        for (var i = iStart; i < iEnd; i++) {\n          if (tests[i](arguments)) {\n            return fns[i].apply(null, arguments);\n          }\n        }\n\n        throw createError(name, arguments, signatures);\n      }\n\n      // create the typed function\n      // fast, specialized version. Falls back to the slower, generic one if needed\n      var fn = function fn(arg0, arg1) {\n        'use strict';\n\n        if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(null, arguments); }\n        if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(null, arguments); }\n        if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(null, arguments); }\n        if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(null, arguments); }\n        if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(null, arguments); }\n        if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(null, arguments); }\n\n        return generic.apply(null, arguments);\n      }\n\n      // attach name the typed function\n      try {\n        Object.defineProperty(fn, 'name', {value: name});\n      }\n      catch (err) {\n        // old browsers do not support Object.defineProperty and some don't support setting the name property\n        // the function name is not essential for the functioning, it's mostly useful for debugging,\n        // so it's fine to have unnamed functions.\n      }\n\n      // attach signatures to the function\n      fn.signatures = createSignaturesMap(signatures);\n\n      return fn;\n    }\n\n    /**\n     * Test whether a type should be NOT be ignored\n     * @param {string} typeName\n     * @return {boolean}\n     */\n    function notIgnore(typeName) {\n      return typed.ignore.indexOf(typeName) === -1;\n    }\n\n    /**\n     * trim a string\n     * @param {string} str\n     * @return {string}\n     */\n    function trim(str) {\n      return str.trim();\n    }\n\n    /**\n     * Test whether a string is not empty\n     * @param {string} str\n     * @return {boolean}\n     */\n    function notEmpty(str) {\n      return !!str;\n    }\n\n    /**\n     * test whether a value is not strict equal to null\n     * @param {*} value\n     * @return {boolean}\n     */\n    function notNull(value) {\n      return value !== null;\n    }\n\n    /**\n     * Test whether a parameter has no types defined\n     * @param {Param} param\n     * @return {boolean}\n     */\n    function isInvalidParam (param) {\n      return param.types.length === 0;\n    }\n\n    /**\n     * Return all but the last items of an array\n     * @param {Array} arr\n     * @return {Array}\n     */\n    function initial(arr) {\n      return arr.slice(0, arr.length - 1);\n    }\n\n    /**\n     * return the last item of an array\n     * @param {Array} arr\n     * @return {*}\n     */\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n\n    /**\n     * Slice an array or function Arguments\n     * @param {Array | Arguments | IArguments} arr\n     * @param {number} start\n     * @param {number} [end]\n     * @return {Array}\n     */\n    function slice(arr, start, end) {\n      return Array.prototype.slice.call(arr, start, end);\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Test whether two arrays have overlapping items\n     * @param {Array} array1\n     * @param {Array} array2\n     * @return {boolean} Returns true when at least one item exists in both arrays\n     */\n    function hasOverlap(array1, array2) {\n      for (var i = 0; i < array1.length; i++) {\n        if (contains(array2, array1[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Return the first item from an array for which test(arr[i]) returns true\n     * @param {Array} arr\n     * @param {function} test\n     * @return {* | undefined} Returns the first matching item\n     *                         or undefined when there is no match\n     */\n    function findInArray(arr, test) {\n      for (var i = 0; i < arr.length; i++) {\n        if (test(arr[i])) {\n          return arr[i];\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * Filter unique items of an array with strings\n     * @param {string[]} arr\n     * @return {string[]}\n     */\n    function uniq(arr) {\n      var entries = {}\n      for (var i = 0; i < arr.length; i++) {\n        entries[arr[i]] = true;\n      }\n      return Object.keys(entries);\n    }\n\n    /**\n     * Flat map the result invoking a callback for every item in an array.\n     * https://gist.github.com/samgiles/762ee337dff48623e729\n     * @param {Array} arr\n     * @param {function} callback\n     * @return {Array}\n     */\n    function flatMap(arr, callback) {\n      return Array.prototype.concat.apply([], arr.map(callback));\n    }\n\n    /**\n     * Retrieve the function name from a set of typed functions,\n     * and check whether the name of all functions match (if given)\n     * @param {function[]} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // check whether the names are the same when defined\n        if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n          if (name === '') {\n            name = fn.name;\n          }\n          else if (name !== fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    // extract and merge all signatures of a list with typed functions\n    function extractSignatures(fns) {\n      var err;\n      var signaturesMap = {};\n\n      function validateUnique(_signature, _fn) {\n        if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n          err = new Error('Signature \"' + _signature + '\" is defined twice');\n          err.data = {signature: _signature};\n          throw err;\n          // else: both signatures point to the same function, that's fine\n        }\n      }\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // test whether this is a typed-function\n        if (typeof fn.signatures === 'object') {\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              validateUnique(signature, fn.signatures[signature]);\n              signaturesMap[signature] = fn.signatures[signature];\n            }\n          }\n        }\n        else if (typeof fn.signature === 'string') {\n          validateUnique(fn.signature, fn);\n          signaturesMap[fn.signature] = fn;\n        }\n        else {\n          err = new TypeError('Function is no typed-function (index: ' + i + ')');\n          err.data = {index: i};\n          throw err;\n        }\n      }\n\n      return signaturesMap;\n    }\n\n    typed = createTypedFunction('typed', {\n      'string, Object': createTypedFunction,\n      'Object': function (signaturesMap) {\n        // find existing name\n        var fns = [];\n        for (var signature in signaturesMap) {\n          if (signaturesMap.hasOwnProperty(signature)) {\n            fns.push(signaturesMap[signature]);\n          }\n        }\n        var name = getName(fns);\n        return createTypedFunction(name, signaturesMap);\n      },\n      '...Function': function (fns) {\n        return createTypedFunction(getName(fns), extractSignatures(fns));\n      },\n      'string, ...Function': function (name, fns) {\n        return createTypedFunction(name, extractSignatures(fns));\n      }\n    });\n\n    typed.create = create;\n    typed.types = _types;\n    typed.conversions = _conversions;\n    typed.ignore = _ignore;\n    typed.convert = convert;\n    typed.find = find;\n\n    /**\n     * add a type\n     * @param {{name: string, test: function}} type\n     * @param {boolean} [beforeObjectTest=true]\n     *                          If true, the new test will be inserted before\n     *                          the test with name 'Object' (if any), since\n     *                          tests for Object match Array and classes too.\n     */\n    typed.addType = function (type, beforeObjectTest) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      if (beforeObjectTest !== false) {\n        for (var i = 0; i < typed.types.length; i++) {\n          if (typed.types[i].name === 'Object') {\n            typed.types.splice(i, 0, type);\n            return\n          }\n        }\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));","'use strict';\r\n\r\nvar width = 256;// each RC4 output is 0 <= x < 256\r\nvar chunks = 6;// at least six RC4 outputs for each double\r\nvar digits = 52;// there are 52 significant digits in a double\r\nvar pool = [];// pool: entropy pool starts empty\r\nvar GLOBAL = typeof global === 'undefined' ? window : global;\r\n\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\nvar startdenom = Math.pow(width, chunks),\r\n    significance = Math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1;\r\n\r\n\r\nvar oldRandom = Math.random;\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nmodule.exports = function(seed, options) {\r\n  if (options && options.global === true) {\r\n    options.global = false;\r\n    Math.random = module.exports(seed, options);\r\n    options.global = true;\r\n    return Math.random;\r\n  }\r\n  var use_entropy = (options && options.entropy) || false;\r\n  var key = [];\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    use_entropy ? [seed, tostring(pool)] :\r\n    0 in arguments ? seed : autoseed(), 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Override Math.random\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\r\n  return function() {         // Closure to return a random double:\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer Math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n};\r\n\r\nmodule.exports.resetGlobal = function () {\r\n  Math.random = oldRandom;\r\n};\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n/** @constructor */\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability discard an initial batch of values.\r\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\r\n  })(width);\r\n}\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj)[0], prop;\r\n  if (depth && typ == 'o') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 's' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto if available.\r\n//\r\n/** @param {Uint8Array=} seed */\r\nfunction autoseed(seed) {\r\n  try {\r\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\r\n    return tostring(seed);\r\n  } catch (e) {\r\n    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,\r\n            GLOBAL.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to intefere with determinstic PRNG state later,\r\n// seedrandom will not call Math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(Math.random(), pool);\r\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  // Only Node.JS has a process variable that is of [[Class]] process\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach([\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength',\n    'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken',\n    'socketPath'\n  ], function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","module.exports = require('./lib/axios');",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.2.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { name: '[object Decimal]' };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n  // Add aliases to match BigDecimal method names.\r\n  // P.add = P.plus;\r\n  P.subtract = P.minus;\r\n  P.multiply = P.times;\r\n  P.divide = P.div;\r\n  P.remainder = P.mod;\r\n  P.compareTo = P.cmp;\r\n  P.negate = P.neg;\r\n   */\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, y,\r\n      len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (v instanceof Decimal) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","/*!\n * jQuery JavaScript Library v3.4.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2019-05-01T21:04Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.4.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code, options ) {\n\t\tDOMEval( code, { nonce: options && options.nonce } );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.4\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2019-04-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t(nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\") ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 && rdescend.test( selector ) ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem.namespaceURI,\n\t\tdocElem = (elem.ownerDocument || elem).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( typeof elem.contentDocument !== \"undefined\" ) {\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t// Support: IE 9-11 only\n\t// Also use offsetWidth/offsetHeight for when box sizing is unreliable\n\t// We use getClientRects() to check for hidden/disconnected.\n\t// In those cases, the computed value can be trusted to be border-box\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\t\tval === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url, options ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","export const DEFAULT_CONFIG = {\n  // minimum relative difference between two compared values,\n  // used by all comparison functions\n  epsilon: 1e-12,\n\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\n  matrix: 'Matrix',\n\n  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n  number: 'number',\n\n  // number of significant digits in BigNumbers\n  precision: 64,\n\n  // predictable output type of functions. When true, output type depends only\n  // on the input types. When false (default), output type can vary depending\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n  // predictable is false, and returns `NaN` when true.\n  predictable: false,\n\n  // random seed for seeded pseudo random number generation\n  // null = randomly seed\n  randomSeed: null\n}\n","// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\n\nexport function isNumber (x) {\n  return typeof x === 'number'\n}\n\nexport function isBigNumber (x) {\n  return (x && x.constructor.prototype.isBigNumber === true) || false\n}\n\nexport function isComplex (x) {\n  return (x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true) || false\n}\n\nexport function isFraction (x) {\n  return (x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true) || false\n}\n\nexport function isUnit (x) {\n  return (x && x.constructor.prototype.isUnit === true) || false\n}\n\nexport function isString (x) {\n  return typeof x === 'string'\n}\n\nexport const isArray = Array.isArray\n\nexport function isMatrix (x) {\n  return (x && x.constructor.prototype.isMatrix === true) || false\n}\n\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\nexport function isCollection (x) {\n  return Array.isArray(x) || isMatrix(x)\n}\n\nexport function isDenseMatrix (x) {\n  return (x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true) || false\n}\n\nexport function isSparseMatrix (x) {\n  return (x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true) || false\n}\n\nexport function isRange (x) {\n  return (x && x.constructor.prototype.isRange === true) || false\n}\n\nexport function isIndex (x) {\n  return (x && x.constructor.prototype.isIndex === true) || false\n}\n\nexport function isBoolean (x) {\n  return typeof x === 'boolean'\n}\n\nexport function isResultSet (x) {\n  return (x && x.constructor.prototype.isResultSet === true) || false\n}\n\nexport function isHelp (x) {\n  return (x && x.constructor.prototype.isHelp === true) || false\n}\n\nexport function isFunction (x) {\n  return typeof x === 'function'\n}\n\nexport function isDate (x) {\n  return x instanceof Date\n}\n\nexport function isRegExp (x) {\n  return x instanceof RegExp\n}\n\nexport function isObject (x) {\n  return !!(x &&\n    typeof x === 'object' &&\n    x.constructor === Object &&\n    !isComplex(x) &&\n    !isFraction(x))\n}\n\nexport function isNull (x) {\n  return x === null\n}\n\nexport function isUndefined (x) {\n  return x === undefined\n}\n\nexport function isAccessorNode (x) {\n  return (x && x.isAccessorNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isArrayNode (x) {\n  return (x && x.isArrayNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isAssignmentNode (x) {\n  return (x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isBlockNode (x) {\n  return (x && x.isBlockNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isConditionalNode (x) {\n  return (x && x.isConditionalNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isConstantNode (x) {\n  return (x && x.isConstantNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isFunctionAssignmentNode (x) {\n  return (x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isFunctionNode (x) {\n  return (x && x.isFunctionNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isIndexNode (x) {\n  return (x && x.isIndexNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isNode (x) {\n  return (x && x.isNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isObjectNode (x) {\n  return (x && x.isObjectNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isOperatorNode (x) {\n  return (x && x.isOperatorNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isParenthesisNode (x) {\n  return (x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isRangeNode (x) {\n  return (x && x.isRangeNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isSymbolNode (x) {\n  return (x && x.isSymbolNode === true && x.constructor.prototype.isNode === true) || false\n}\n\nexport function isChain (x) {\n  return (x && x.constructor.prototype.isChain === true) || false\n}\n\nexport function typeOf (x) {\n  const t = typeof x\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null'\n    if (Array.isArray(x)) return 'Array'\n    if (x instanceof Date) return 'Date'\n    if (x instanceof RegExp) return 'RegExp'\n\n    // math.js types\n    if (isBigNumber(x)) return 'BigNumber'\n    if (isComplex(x)) return 'Complex'\n    if (isFraction(x)) return 'Fraction'\n    if (isMatrix(x)) return 'Matrix'\n    if (isUnit(x)) return 'Unit'\n    if (isIndex(x)) return 'Index'\n    if (isRange(x)) return 'Range'\n    if (isResultSet(x)) return 'ResultSet'\n    if (isNode(x)) return x.type\n    if (isChain(x)) return 'Chain'\n    if (isHelp(x)) return 'Help'\n\n    return 'Object'\n  }\n\n  if (t === 'function') return 'Function'\n\n  return t // can be 'string', 'number', 'boolean', ...\n}\n","import { isBigNumber } from './is'\n\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\nexport function clone (x) {\n  const type = typeof x\n\n  // immutable primitive types\n  if (type === 'number' || type === 'string' || type === 'boolean' ||\n      x === null || x === undefined) {\n    return x\n  }\n\n  // use clone function of the object when available\n  if (typeof x.clone === 'function') {\n    return x.clone()\n  }\n\n  // array\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value)\n    })\n  }\n\n  if (x instanceof Date) return new Date(x.valueOf())\n  if (isBigNumber(x)) return x // bignumbers are immutable\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x) // TODO: clone a RegExp\n\n  // object\n  return mapObject(x, clone)\n}\n\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\nexport function mapObject (object, callback) {\n  const clone = {}\n\n  for (const key in object) {\n    if (hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key])\n    }\n  }\n\n  return clone\n}\n\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\nexport function extend (a, b) {\n  for (const prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\nexport function deepExtend (a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend')\n  }\n\n  for (const prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {}\n        }\n        if (a[prop] && a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop])\n        } else {\n          a[prop] = b[prop]\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend')\n      } else {\n        a[prop] = b[prop]\n      }\n    }\n  }\n  return a\n}\n\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * Compares values and functions strictly (ie. 2 is not the same as '2').\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\nexport function deepStrictEqual (a, b) {\n  let prop, i, len\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false\n    }\n\n    if (a.length !== b.length) {\n      return false\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!deepStrictEqual(a[i], b[i])) {\n        return false\n      }\n    }\n    return true\n  } else if (typeof a === 'function') {\n    return (a === b)\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false\n    }\n\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {\n        return false\n      }\n    }\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in a) || !deepStrictEqual(a[prop], b[prop])) {\n        return false\n      }\n    }\n    return true\n  } else {\n    return (a === b)\n  }\n}\n\n/**\n * Recursively flatten a nested object.\n * @param {Object} nestedObject\n * @return {Object} Returns the flattened object\n */\nexport function deepFlatten (nestedObject) {\n  const flattenedObject = {}\n\n  _deepFlatten(nestedObject, flattenedObject)\n\n  return flattenedObject\n}\n\n// helper function used by deepFlatten\nfunction _deepFlatten (nestedObject, flattenedObject) {\n  for (const prop in nestedObject) {\n    if (nestedObject.hasOwnProperty(prop)) {\n      const value = nestedObject[prop]\n      if (typeof value === 'object' && value !== null) {\n        _deepFlatten(value, flattenedObject)\n      } else {\n        flattenedObject[prop] = value\n      }\n    }\n  }\n}\n\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\nexport function canDefineProperty () {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', { get: function () {} })\n      return true\n    }\n  } catch (e) {}\n\n  return false\n}\n\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n *\n * @param {Object} object         Object where to add the property\n * @param {string} prop           Property name\n * @param {Function} valueResolver Function returning the property value. Called\n *                                without arguments.\n */\nexport function lazy (object, prop, valueResolver) {\n  let _uninitialized = true\n  let _value\n\n  Object.defineProperty(object, prop, {\n    get: function () {\n      if (_uninitialized) {\n        _value = valueResolver()\n        _uninitialized = false\n      }\n      return _value\n    },\n\n    set: function (value) {\n      _value = value\n      _uninitialized = false\n    },\n\n    configurable: true,\n    enumerable: true\n  })\n}\n\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string | string[]} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\nexport function traverse (object, path) {\n  if (path && typeof path === 'string') {\n    return traverse(object, path.split('.'))\n  }\n\n  let obj = object\n\n  if (path) {\n    for (let i = 0; i < path.length; i++) {\n      const key = path[i]\n      if (!(key in obj)) {\n        obj[key] = {}\n      }\n      obj = obj[key]\n    }\n  }\n\n  return obj\n}\n\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\nexport function hasOwnProperty (object, property) {\n  return object && Object.hasOwnProperty.call(object, property)\n}\n\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\nexport function isLegacyFactory (object) {\n  return object && typeof object.factory === 'function'\n}\n\n/**\n * Get a nested property from an object\n * @param {Object} object\n * @param {string | string[]} path\n * @returns {Object}\n */\nexport function get (object, path) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return get(object, path.split('.'))\n    } else {\n      return object[path]\n    }\n  }\n\n  let child = object\n\n  for (let i = 0; i < path.length; i++) {\n    const key = path[i]\n    child = child ? child[key] : undefined\n  }\n\n  return child\n}\n\n/**\n * Set a nested property in an object\n * Mutates the object itself\n * If the path doesn't exist, it will be created\n * @param {Object} object\n * @param {string | string[]} path\n * @param {*} value\n * @returns {Object}\n */\nexport function set (object, path, value) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return set(object, path.split('.'), value)\n    } else {\n      object[path] = value\n      return object\n    }\n  }\n\n  let child = object\n  for (let i = 0; i < path.length - 1; i++) {\n    const key = path[i]\n    if (child[key] === undefined) {\n      child[key] = {}\n    }\n    child = child[key]\n  }\n\n  if (path.length > 0) {\n    const lastKey = path[path.length - 1]\n    child[lastKey] = value\n  }\n\n  return object\n}\n\n/**\n * Create an object composed of the picked object properties\n * @param {Object} object\n * @param {string[]} properties\n * @param {function} [transform] Optional value to transform a value when picking it\n * @return {Object}\n */\nexport function pick (object, properties, transform) {\n  const copy = {}\n\n  for (let i = 0; i < properties.length; i++) {\n    const key = properties[i]\n    const value = get(object, key)\n    if (value !== undefined) {\n      set(copy, key, transform ? transform(value, key) : value)\n    }\n  }\n\n  return copy\n}\n\n/**\n * Shallow version of pick, creating an object composed of the picked object properties\n * but not for nested properties\n * @param {Object} object\n * @param {string[]} properties\n * @return {Object}\n */\nexport function pickShallow (object, properties) {\n  const copy = {}\n\n  for (let i = 0; i < properties.length; i++) {\n    const key = properties[i]\n    const value = object[key]\n    if (value !== undefined) {\n      copy[key] = value\n    }\n  }\n\n  return copy\n}\n\nexport function values (object) {\n  return Object.keys(object).map(key => object[key])\n}\n\n// helper function to test whether a string contains a path like 'user.name'\nfunction isPath (str) {\n  return str.indexOf('.') !== -1\n}\n","import { clone, mapObject, deepExtend } from '../../utils/object'\nimport { DEFAULT_CONFIG } from '../config'\n\nexport const MATRIX_OPTIONS = ['Matrix', 'Array'] // valid values for option matrix\nexport const NUMBER_OPTIONS = ['number', 'BigNumber', 'Fraction'] // valid values for option number\n\nexport function configFactory (config, emit) {\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *\n   *     import { create, all } from 'mathjs'\n   *\n   *     // create a mathjs instance\n   *     const math = create(all)\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.evaluate('0.4')                // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.evaluate('0.4')                // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config (options) {\n    if (options) {\n      const prev = mapObject(config, clone)\n\n      // validate some of the options\n      validateOption(options, 'matrix', MATRIX_OPTIONS)\n      validateOption(options, 'number', NUMBER_OPTIONS)\n\n      // merge options\n      deepExtend(config, options)\n\n      const curr = mapObject(config, clone)\n\n      const changes = mapObject(options, clone)\n\n      // emit 'config' event\n      emit('config', curr, prev, changes)\n\n      return curr\n    } else {\n      return mapObject(config, clone)\n    }\n  }\n\n  // attach the valid options to the function so they can be extended\n  _config.MATRIX_OPTIONS = MATRIX_OPTIONS\n  _config.NUMBER_OPTIONS = NUMBER_OPTIONS\n\n  // attach the config properties as readonly properties to the config function\n  Object.keys(DEFAULT_CONFIG).forEach(key => {\n    Object.defineProperty(_config, key, {\n      get: () => config[key],\n      enumerable: true,\n      configurable: true\n    })\n  })\n\n  return _config\n}\n\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\nfunction contains (array, item) {\n  return array.indexOf(item) !== -1\n}\n\n/**\n * Find a string in an array. Case insensitive search\n * @param {Array.<string>} array\n * @param {string} item\n * @return {number} Returns the index when found. Returns -1 when not found\n */\nfunction findIndex (array, item) {\n  return array\n    .map(function (i) {\n      return i.toLowerCase()\n    })\n    .indexOf(item.toLowerCase())\n}\n\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\nfunction validateOption (options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    const index = findIndex(values, options[name])\n    if (index !== -1) {\n      // right value, wrong casing\n      // TODO: lower case values are deprecated since v3, remove this warning some day.\n      console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".')\n\n      options[name] = values[index] // change the option to the right casing\n    } else {\n      // unknown value\n      console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.')\n    }\n  }\n}\n","import { DEFAULT_CONFIG } from '../core/config'\nimport { MATRIX_OPTIONS, NUMBER_OPTIONS } from '../core/function/config'\n\n// create a read-only version of config\nexport const config = /* #__PURE__ */ function (options) {\n  if (options) {\n    throw new Error('The global config is readonly. \\n' +\n      'Please create a mathjs instance if you want to change the default configuration. \\n' +\n      'Example:\\n' +\n      '\\n' +\n      '  import { create, all } from \\'mathjs\\';\\n' +\n      '  const mathjs = create(all);\\n' +\n      '  mathjs.config({ number: \\'BigNumber\\' });\\n')\n  }\n\n  return Object.freeze(DEFAULT_CONFIG)\n}\nObject.assign(config, DEFAULT_CONFIG, { MATRIX_OPTIONS, NUMBER_OPTIONS })\n","import { mapObject } from './object'\nimport { isNumber } from './is'\n\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\nexport function isInteger (value) {\n  if (typeof value === 'boolean') {\n    return true\n  }\n\n  return isFinite(value)\n    ? (value === Math.round(value))\n    : false\n  // Note: we use ==, not ===, as we can have Booleans as well\n}\n\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {number}\n */\nexport const sign = /* #__PURE__ */ Math.sign || function (x) {\n  if (x > 0) {\n    return 1\n  } else if (x < 0) {\n    return -1\n  } else {\n    return 0\n  }\n}\n\n/**\n * Calculate the base-2 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\nexport const log2 = /* #__PURE__ */ Math.log2 || function log2 (x) {\n  return Math.log(x) / Math.LN2\n}\n\n/**\n * Calculate the base-10 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\nexport const log10 = /* #__PURE__ */ Math.log10 || function log10 (x) {\n  return Math.log(x) / Math.LN10\n}\n\n/**\n * Calculate the natural logarithm of a number + 1\n * @param {number} x\n * @returns {number}\n */\nexport const log1p = /* #__PURE__ */ Math.log1p || function (x) {\n  return Math.log(x + 1)\n}\n\n/**\n * Calculate cubic root for a number\n *\n * Code from es6-shim.js:\n *   https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1564-L1577\n *\n * @param {number} x\n * @returns {number} Returns the cubic root of x\n */\nexport const cbrt = /* #__PURE__ */ Math.cbrt || function cbrt (x) {\n  if (x === 0) {\n    return x\n  }\n\n  const negate = x < 0\n  let result\n  if (negate) {\n    x = -x\n  }\n\n  if (isFinite(x)) {\n    result = Math.exp(Math.log(x) / 3)\n    // from https://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n    result = (x / (result * result) + (2 * result)) / 3\n  } else {\n    result = x\n  }\n\n  return negate ? -result : result\n}\n\n/**\n * Calculates exponentiation minus 1\n * @param {number} x\n * @return {number} res\n */\nexport const expm1 = /* #__PURE__ */ Math.expm1 || function expm1 (x) {\n  return (x >= 2e-4 || x <= -2e-4)\n    ? Math.exp(x) - 1\n    : x + x * x / 2 + x * x * x / 6\n}\n\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lowerExp` and `upperExp` bounds, and\n *                                          uses exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default,\n *                                          not rounding any digits.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12.071, {notation: 'fixed'})                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexport function format (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value)\n  }\n\n  // handle special cases\n  if (value === Infinity) {\n    return 'Infinity'\n  } else if (value === -Infinity) {\n    return '-Infinity'\n  } else if (isNaN(value)) {\n    return 'NaN'\n  }\n\n  // default values for options\n  let notation = 'auto'\n  let precision\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation\n    }\n\n    // determine precision from options\n    if (isNumber(options)) {\n      precision = options\n    } else if (isNumber(options.precision)) {\n      precision = options.precision\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision)\n\n    case 'exponential':\n      return toExponential(value, precision)\n\n    case 'engineering':\n      return toEngineering(value, precision)\n\n    case 'auto':\n      // TODO: clean up some day. Deprecated since: 2018-01-24\n      // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n      if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n        const fixedOptions = mapObject(options, function (x) { return x })\n        fixedOptions.exponential = undefined\n        if (options.exponential.lower !== undefined) {\n          fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10)\n        }\n        if (options.exponential.upper !== undefined) {\n          fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10)\n        }\n\n        console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' +\n            '(minimum and maximum value) ' +\n            'are replaced with exponential.lowerExp and exponential.upperExp ' +\n            '(minimum and maximum exponent) since version 4.0.0. ' +\n            'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions))\n\n        return toPrecision(value, precision, fixedOptions)\n      }\n\n      // remove trailing zeros after the decimal point\n      return toPrecision(value, precision, options && options)\n        .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          const digits = arguments[2]\n          const e = arguments[4]\n          return (digits !== '.') ? digits + e : e\n        })\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".')\n  }\n}\n\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\nexport function splitNumber (value) {\n  // parse the input value\n  const match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/)\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value)\n  }\n\n  const sign = match[1]\n  const digits = match[2]\n  let exponent = parseFloat(match[4] || '0')\n\n  const dot = digits.indexOf('.')\n  exponent += (dot !== -1) ? (dot - 1) : (digits.length - 1)\n\n  const coefficients = digits\n    .replace('.', '') // remove the dot (must be removed before removing leading zeros)\n    .replace(/^0*/, function (zeros) {\n      // remove leading zeros, add their count to the exponent\n      exponent -= zeros.length\n      return ''\n    })\n    .replace(/0*$/, '') // remove trailing zeros\n    .split('')\n    .map(function (d) {\n      return parseInt(d)\n    })\n\n  if (coefficients.length === 0) {\n    coefficients.push(0)\n    exponent++\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  }\n}\n\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\nexport function toEngineering (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value)\n  }\n\n  const rounded = roundDigits(splitNumber(value), precision)\n\n  const e = rounded.exponent\n  let c = rounded.coefficients\n\n  // find nearest lower multiple of 3 for exponent\n  const newExp = e % 3 === 0 ? e : (e < 0 ? (e - 3) - (e % 3) : e - (e % 3))\n\n  if (isNumber(precision)) {\n    // add zeroes to give correct sig figs\n    while (precision > c.length || (e - newExp) + 1 > c.length) {\n      c.push(0)\n    }\n  } else {\n    // concatenate coefficients with necessary zeros\n    const significandsDiff = e >= 0 ? e : Math.abs(newExp)\n\n    // add zeros if necessary (for ex: 1e+8)\n    while (c.length - 1 < significandsDiff) {\n      c.push(0)\n    }\n  }\n\n  // find difference in exponents\n  let expDiff = Math.abs(e - newExp)\n\n  let decimalIdx = 1\n\n  // push decimal index over by expDiff times\n  while (expDiff > 0) {\n    decimalIdx++\n    expDiff--\n  }\n\n  // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n  const decimals = c.slice(decimalIdx).join('')\n  const decimalVal = ((isNumber(precision) && decimals.length) || decimals.match(/[1-9]/)) ? ('.' + decimals) : ''\n\n  const str = c.slice(0, decimalIdx).join('') +\n      decimalVal +\n      'e' + (e >= 0 ? '+' : '') + newExp.toString()\n  return rounded.sign + str\n}\n\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=undefined]  Optional number of decimals after the\n *                                        decimal point. null by default.\n */\nexport function toFixed (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value)\n  }\n\n  const splitValue = splitNumber(value)\n  const rounded = (typeof precision === 'number')\n    ? roundDigits(splitValue, splitValue.exponent + 1 + precision)\n    : splitValue\n  let c = rounded.coefficients\n  let p = rounded.exponent + 1 // exponent may have changed\n\n  // append zeros if needed\n  const pp = p + (precision || 0)\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length))\n  }\n\n  // prepend zeros if needed\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c)\n    p = 1\n  }\n\n  // insert a dot if needed\n  if (p < c.length) {\n    c.splice(p, 0, (p === 0) ? '0.' : '.')\n  }\n\n  return rounded.sign + c.join('')\n}\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\nexport function toExponential (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value)\n  }\n\n  // round if needed, else create a clone\n  const split = splitNumber(value)\n  const rounded = precision ? roundDigits(split, precision) : split\n  let c = rounded.coefficients\n  const e = rounded.exponent\n\n  // append zeros if needed\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length))\n  }\n\n  // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n  const first = c.shift()\n  return rounded.sign + first + (c.length > 0 ? ('.' + c.join('')) : '') +\n      'e' + (e >= 0 ? '+' : '') + e\n}\n\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n *                                       By default:\n *                                         lowerExp = -3 (incl)\n *                                         upper = +5 (excl)\n * @return {string}\n */\nexport function toPrecision (value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value)\n  }\n\n  // determine lower and upper bound for exponential notation.\n  const lowerExp = (options && options.lowerExp !== undefined) ? options.lowerExp : -3\n  const upperExp = (options && options.upperExp !== undefined) ? options.upperExp : 5\n\n  const split = splitNumber(value)\n  const rounded = precision ? roundDigits(split, precision) : split\n  if (rounded.exponent < lowerExp || rounded.exponent >= upperExp) {\n    // exponential notation\n    return toExponential(value, precision)\n  } else {\n    let c = rounded.coefficients\n    const e = rounded.exponent\n\n    // append trailing zeros\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length))\n    }\n\n    // append trailing zeros\n    // TODO: simplify the next statement\n    c = c.concat(zeros(e - c.length + 1 +\n        (c.length < precision ? precision - c.length : 0)))\n\n    // prepend zeros\n    c = zeros(-e).concat(c)\n\n    const dot = e > 0 ? e : 0\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.')\n    }\n\n    return rounded.sign + c.join('')\n  }\n}\n\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\nexport function roundDigits (split, precision) {\n  // create a clone\n  const rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  }\n  const c = rounded.coefficients\n\n  // prepend zeros if needed\n  while (precision <= 0) {\n    c.unshift(0)\n    rounded.exponent++\n    precision++\n  }\n\n  if (c.length > precision) {\n    const removed = c.splice(precision, c.length - precision)\n\n    if (removed[0] >= 5) {\n      let i = precision - 1\n      c[i]++\n      while (c[i] === 10) {\n        c.pop()\n        if (i === 0) {\n          c.unshift(0)\n          rounded.exponent++\n          i++\n        }\n        i--\n        c[i]++\n      }\n    }\n  }\n\n  return rounded\n}\n\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\nfunction zeros (length) {\n  const arr = []\n  for (let i = 0; i < length; i++) {\n    arr.push(0)\n  }\n  return arr\n}\n\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\nexport function digits (value) {\n  return value\n    .toExponential()\n    .replace(/e.*$/, '') // remove exponential notation\n    .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n    .length\n}\n\n/**\n * Minimum number added to one that makes the result different than one\n */\nexport const DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16\n\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\nexport function nearlyEqual (x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x === y\n  }\n\n  if (x === y) {\n    return true\n  }\n\n  // NaN\n  if (isNaN(x) || isNaN(y)) {\n    return false\n  }\n\n  // at this point x and y should be finite\n  if (isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    const diff = Math.abs(x - y)\n    if (diff < DBL_EPSILON) {\n      return true\n    } else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false\n}\n\n/**\n * Calculate the hyperbolic arccos of a number\n * @param {number} x\n * @return {number}\n */\nexport const acosh = Math.acosh || function (x) {\n  return Math.log(Math.sqrt(x * x - 1) + x)\n}\n\nexport const asinh = Math.asinh || function (x) {\n  return Math.log(Math.sqrt(x * x + 1) + x)\n}\n\n/**\n * Calculate the hyperbolic arctangent of a number\n * @param {number} x\n * @return {number}\n */\nexport const atanh = Math.atanh || function (x) {\n  return Math.log((1 + x) / (1 - x)) / 2\n}\n\n/**\n * Calculate the hyperbolic cosine of a number\n * @param {number} x\n * @returns {number}\n */\nexport const cosh = Math.cosh || function (x) {\n  return (Math.exp(x) + Math.exp(-x)) / 2\n}\n\n/**\n * Calculate the hyperbolic sine of a number\n * @param {number} x\n * @returns {number}\n */\nexport const sinh = Math.sinh || function (x) {\n  return (Math.exp(x) - Math.exp(-x)) / 2\n}\n\n/**\n * Calculate the hyperbolic tangent of a number\n * @param {number} x\n * @returns {number}\n */\nexport const tanh = Math.tanh || function (x) {\n  const e = Math.exp(2 * x)\n  return (e - 1) / (e + 1)\n}\n","import { mapObject } from '../object'\n\n/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexport function format (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value)\n  }\n\n  // handle special cases\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : (value.gt(0) ? 'Infinity' : '-Infinity')\n  }\n\n  // default values for options\n  let notation = 'auto'\n  let precision\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation\n    }\n\n    // determine precision from options\n    if (typeof options === 'number') {\n      precision = options\n    } else if (options.precision) {\n      precision = options.precision\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision)\n\n    case 'exponential':\n      return toExponential(value, precision)\n\n    case 'engineering':\n      return toEngineering(value, precision)\n\n    case 'auto':\n      // TODO: clean up some day. Deprecated since: 2018-01-24\n      // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n      if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n        const fixedOptions = mapObject(options, function (x) { return x })\n        fixedOptions.exponential = undefined\n        if (options.exponential.lower !== undefined) {\n          fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10)\n        }\n        if (options.exponential.upper !== undefined) {\n          fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10)\n        }\n\n        console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' +\n            '(minimum and maximum value) ' +\n            'are replaced with exponential.lowerExp and exponential.upperExp ' +\n            '(minimum and maximum exponent) since version 4.0.0. ' +\n            'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions))\n\n        return format(value, fixedOptions)\n      }\n\n      // determine lower and upper bound for exponential notation.\n      // TODO: implement support for upper and lower to be BigNumbers themselves\n      const lowerExp = (options && options.lowerExp !== undefined) ? options.lowerExp : -3\n      const upperExp = (options && options.upperExp !== undefined) ? options.upperExp : 5\n\n      // handle special case zero\n      if (value.isZero()) return '0'\n\n      // determine whether or not to output exponential notation\n      let str\n      const rounded = value.toSignificantDigits(precision)\n      const exp = rounded.e\n      if (exp >= lowerExp && exp < upperExp) {\n        // normal number notation\n        str = rounded.toFixed()\n      } else {\n        // exponential notation\n        str = toExponential(value, precision)\n      }\n\n      // remove trailing zeros after the decimal point\n      return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        const digits = arguments[2]\n        const e = arguments[4]\n        return (digits !== '.') ? digits + e : e\n      })\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".')\n  }\n}\n\n/**\n * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {BigNumber | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\nexport function toEngineering (value, precision) {\n  // find nearest lower multiple of 3 for exponent\n  const e = value.e\n  const newExp = e % 3 === 0 ? e : (e < 0 ? (e - 3) - (e % 3) : e - (e % 3))\n\n  // find difference in exponents, and calculate the value without exponent\n  const valueWithoutExp = value.mul(Math.pow(10, -newExp))\n\n  let valueStr = valueWithoutExp.toPrecision(precision)\n  if (valueStr.indexOf('e') !== -1) {\n    valueStr = valueWithoutExp.toString()\n  }\n\n  return valueStr + 'e' + (e >= 0 ? '+' : '') + newExp.toString()\n}\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\nexport function toExponential (value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1) // Note the offset of one\n  } else {\n    return value.toExponential()\n  }\n}\n\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=undefined] Optional number of decimals after the\n *                                       decimal point. Undefined by default.\n */\nexport function toFixed (value, precision) {\n  return value.toFixed(precision)\n}\n","import { isBigNumber, isString, typeOf } from './is'\nimport { format as formatNumber } from './number'\nimport { format as formatBigNumber } from './bignumber/formatter'\n\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\nexport function endsWith (text, search) {\n  const start = text.length - search.length\n  const end = text.length\n  return (text.substring(start, end) === search)\n}\n\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7)                // '0.2857142857142857'\n *     math.format(math.pi, 3)         // '3.14'\n *     math.format(new Complex(2, 3))  // '2 + 3i'\n *     math.format('hello')            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\nexport function format (value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options)\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options)\n  }\n\n  // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return (value.s * value.n) + '/' + value.d\n    } else {\n      // output as decimal, like '0.(3)'\n      return value.toString()\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options)\n  }\n\n  if (isString(value)) {\n    return '\"' + value + '\"'\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function'\n  }\n\n  if (value && typeof value === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options)\n    } else if (value && value.toString() !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString()\n    } else {\n      const entries = []\n\n      for (const key in value) {\n        if (value.hasOwnProperty(key)) {\n          entries.push('\"' + key + '\": ' + format(value[key], options))\n        }\n      }\n\n      return '{' + entries.join(', ') + '}'\n    }\n  }\n\n  return String(value)\n}\n\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\nexport function stringify (value) {\n  const text = String(value)\n  let escaped = ''\n  let i = 0\n  while (i < text.length) {\n    let c = text.charAt(i)\n\n    if (c === '\\\\') {\n      escaped += c\n      i++\n\n      c = text.charAt(i)\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\' // no valid escape character -> escape it\n      }\n      escaped += c\n    } else if (c === '\"') {\n      escaped += '\\\\\"'\n    } else {\n      escaped += c\n    }\n    i++\n  }\n\n  return '\"' + escaped + '\"'\n}\n\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\nexport function escape (value) {\n  let text = String(value)\n  text = text.replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n\n  return text\n}\n\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\nfunction formatArray (array, options) {\n  if (Array.isArray(array)) {\n    let str = '['\n    const len = array.length\n    for (let i = 0; i < len; i++) {\n      if (i !== 0) {\n        str += ', '\n      }\n      str += formatArray(array[i], options)\n    }\n    str += ']'\n    return str\n  } else {\n    return format(array, options)\n  }\n}\n\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\nfunction looksLikeFraction (value) {\n  return (value &&\n      typeof value === 'object' &&\n      typeof value.s === 'number' &&\n      typeof value.n === 'number' &&\n      typeof value.d === 'number') || false\n}\n\n/**\n * Compare two strings\n * @param {string} x\n * @param {string} y\n * @returns {number}\n */\nexport function compareText (x, y) {\n  // we don't want to convert numbers to string, only accept string input\n  if (!isString(x)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' +\n      '(expected: string or Array or Matrix, actual: ' + typeOf(x) + ', index: 0)')\n  }\n  if (!isString(y)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' +\n      '(expected: string or Array or Matrix, actual: ' + typeOf(y) + ', index: 1)')\n  }\n\n  return (x === y)\n    ? 0\n    : (x > y ? 1 : -1)\n}\n","/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nexport function DimensionError (actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator')\n  }\n\n  this.actual = actual\n  this.expected = expected\n  this.relation = relation\n\n  this.message = 'Dimension mismatch (' +\n      (Array.isArray(actual) ? ('[' + actual.join(', ') + ']') : actual) +\n      ' ' + (this.relation || '!=') + ' ' +\n      (Array.isArray(expected) ? ('[' + expected.join(', ') + ']') : expected) +\n      ')'\n\n  this.stack = (new Error()).stack\n}\n\nDimensionError.prototype = new RangeError()\nDimensionError.prototype.constructor = RangeError\nDimensionError.prototype.name = 'DimensionError'\nDimensionError.prototype.isDimensionError = true\n","/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nexport function IndexError (index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator')\n  }\n\n  this.index = index\n  if (arguments.length < 3) {\n    this.min = 0\n    this.max = min\n  } else {\n    this.min = min\n    this.max = max\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')'\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')'\n  } else {\n    this.message = 'Index out of range (' + this.index + ')'\n  }\n\n  this.stack = (new Error()).stack\n}\n\nIndexError.prototype = new RangeError()\nIndexError.prototype.constructor = RangeError\nIndexError.prototype.name = 'IndexError'\nIndexError.prototype.isIndexError = true\n","import { isInteger } from './number'\nimport { isNumber } from './is'\nimport { format } from './string'\nimport { DimensionError } from '../error/DimensionError'\nimport { IndexError } from '../error/IndexError'\n\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\nexport function arraySize (x) {\n  let s = []\n\n  while (Array.isArray(x)) {\n    s.push(x.length)\n    x = x[0]\n  }\n\n  return s\n}\n\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\nfunction _validate (array, size, dim) {\n  let i\n  const len = array.length\n\n  if (len !== size[dim]) {\n    throw new DimensionError(len, size[dim])\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    const dimNext = dim + 1\n    for (i = 0; i < len; i++) {\n      const child = array[i]\n      if (!Array.isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<')\n      }\n      _validate(array[i], size, dimNext)\n    }\n  } else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>')\n      }\n    }\n  }\n}\n\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\nexport function validate (array, size) {\n  const isScalar = (size.length === 0)\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new DimensionError(array.length, 0)\n    }\n  } else {\n    // array\n    _validate(array, size, 0)\n  }\n}\n\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\nexport function validateIndex (index, length) {\n  if (!isNumber(index) || !isInteger(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')')\n  }\n  if (index < 0 || (typeof length === 'number' && index >= length)) {\n    throw new IndexError(index, length)\n  }\n}\n\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. Specify for example `null`,\n *                              to clearly see entries that are not explicitly\n *                              set.\n * @return {Array} array         The resized array\n */\nexport function resize (array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n\n  // check the type of the arguments\n  if (!Array.isArray(array) || !Array.isArray(size)) {\n    throw new TypeError('Array expected')\n  }\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported')\n  }\n\n  // check whether size contains positive integers\n  size.forEach(function (value) {\n    if (!isNumber(value) || !isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' +\n          '(size: ' + format(size) + ')')\n    }\n  })\n\n  // recursively resize the array\n  const _defaultValue = (defaultValue !== undefined) ? defaultValue : 0\n  _resize(array, size, 0, _defaultValue)\n\n  return array\n}\n\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\nfunction _resize (array, size, dim, defaultValue) {\n  let i\n  let elem\n  const oldLen = array.length\n  const newLen = size[dim]\n  const minLen = Math.min(oldLen, newLen)\n\n  // apply new length\n  array.length = newLen\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    const dimNext = dim + 1\n\n    // resize existing child arrays\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i]\n      if (!Array.isArray(elem)) {\n        elem = [elem] // add a dimension\n        array[i] = elem\n      }\n      _resize(elem, size, dimNext, defaultValue)\n    }\n\n    // create new child arrays\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = []\n      array[i] = elem\n\n      // resize new child array\n      _resize(elem, size, dimNext, defaultValue)\n    }\n  } else {\n    // last dimension\n\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0]\n      }\n    }\n\n    // fill new elements with the default value\n    for (i = minLen; i < newLen; i++) {\n      array[i] = defaultValue\n    }\n  }\n}\n\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nexport function reshape (array, sizes) {\n  const flatArray = flatten(array)\n  let newArray\n\n  function product (arr) {\n    return arr.reduce((prev, curr) => prev * curr)\n  }\n\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected')\n  }\n\n  if (sizes.length === 0) {\n    throw new DimensionError(0, product(arraySize(array)), '!=')\n  }\n\n  let totalSize = 1\n  for (let sizeIndex = 0; sizeIndex < sizes.length; sizeIndex++) {\n    totalSize *= sizes[sizeIndex]\n  }\n\n  if (flatArray.length !== totalSize) {\n    throw new DimensionError(\n      product(sizes),\n      product(arraySize(array)),\n      '!='\n    )\n  }\n\n  try {\n    newArray = _reshape(flatArray, sizes)\n  } catch (e) {\n    if (e instanceof DimensionError) {\n      throw new DimensionError(\n        product(sizes),\n        product(arraySize(array)),\n        '!='\n      )\n    }\n    throw e\n  }\n\n  return newArray\n}\n\n/**\n * Iteratively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n */\n\nfunction _reshape (array, sizes) {\n  // testing if there are enough elements for the requested shape\n  let tmpArray = array\n  let tmpArray2\n  // for each dimensions starting by the last one and ignoring the first one\n  for (let sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {\n    const size = sizes[sizeIndex]\n    tmpArray2 = []\n\n    // aggregate the elements of the current tmpArray in elements of the requested size\n    const length = tmpArray.length / size\n    for (let i = 0; i < length; i++) {\n      tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size))\n    }\n    // set it as the new tmpArray for the next loop turn or for return\n    tmpArray = tmpArray2\n  }\n\n  return tmpArray\n}\n\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\nexport function squeeze (array, size) {\n  let s = size || arraySize(array)\n\n  // squeeze outer dimensions\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0]\n    s.shift()\n  }\n\n  // find the first dimension to be squeezed\n  let dims = s.length\n  while (s[dims - 1] === 1) {\n    dims--\n  }\n\n  // squeeze inner dimensions\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0)\n    s.length = dims\n  }\n\n  return array\n}\n\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _squeeze (array, dims, dim) {\n  let i, ii\n\n  if (dim < dims) {\n    const next = dim + 1\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next)\n    }\n  } else {\n    while (Array.isArray(array)) {\n      array = array[0]\n    }\n  }\n\n  return array\n}\n\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n *\n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n *\n * @param {Array} array\n * @param {number} dims       Desired number of dimensions of the array\n * @param {number} [outer]    Number of outer dimensions to be added\n * @param {Array} [size] Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\nexport function unsqueeze (array, dims, outer, size) {\n  let s = size || arraySize(array)\n\n  // unsqueeze outer dimensions\n  if (outer) {\n    for (let i = 0; i < outer; i++) {\n      array = [array]\n      s.unshift(1)\n    }\n  }\n\n  // unsqueeze inner dimensions\n  array = _unsqueeze(array, dims, 0)\n  while (s.length < dims) {\n    s.push(1)\n  }\n\n  return array\n}\n\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _unsqueeze (array, dims, dim) {\n  let i, ii\n\n  if (Array.isArray(array)) {\n    const next = dim + 1\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next)\n    }\n  } else {\n    for (let d = dim; d < dims; d++) {\n      array = [array]\n    }\n  }\n\n  return array\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\nexport function flatten (array) {\n  if (!Array.isArray(array)) {\n    // if not an array, return as is\n    return array\n  }\n  let flat = []\n\n  array.forEach(function callback (value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback) // traverse through sub-arrays recursively\n    } else {\n      flat.push(value)\n    }\n  })\n\n  return flat\n}\n\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\nexport function map (array, callback) {\n  return Array.prototype.map.call(array, callback)\n}\n\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\nexport function forEach (array, callback) {\n  Array.prototype.forEach.call(array, callback)\n}\n\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\nexport function filter (array, callback) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported')\n  }\n\n  return Array.prototype.filter.call(array, callback)\n}\n\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\nexport function filterRegExp (array, regexp) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported')\n  }\n\n  return Array.prototype.filter.call(array, (entry) => regexp.test(entry))\n}\n\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\nexport function join (array, separator) {\n  return Array.prototype.join.call(array, separator)\n}\n\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array} a  An array\n * @return {Array} An array of objects containing the original value and its identifier\n */\nexport function identify (a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected')\n  }\n\n  if (a.length === 0) {\n    return a\n  }\n\n  let b = []\n  let count = 0\n  b[0] = { value: a[0], identifier: 0 }\n  for (let i = 1; i < a.length; i++) {\n    if (a[i] === a[i - 1]) {\n      count++\n    } else {\n      count = 0\n    }\n    b.push({ value: a[i], identifier: count })\n  }\n  return b\n}\n\n/**\n * Remove the numeric identifier from the elements\n * @param {array} a  An array\n * @return {array} An array of values without identifiers\n */\nexport function generalize (a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected')\n  }\n\n  if (a.length === 0) {\n    return a\n  }\n\n  let b = []\n  for (let i = 0; i < a.length; i++) {\n    b.push(a[i].value)\n  }\n  return b\n}\n\n/**\n * Check the datatype of a given object\n * This is a low level implementation that should only be used by\n * parent Matrix classes such as SparseMatrix or DenseMatrix\n * This method does not validate Array Matrix shape\n * @param {Array} array\n * @param {function} typeOf   Callback function to use to determine the type of a value\n * @return string\n */\nexport function getArrayDataType (array, typeOf) {\n  let type // to hold type info\n  let length = 0 // to hold length value to ensure it has consistent sizes\n\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i]\n    const isArray = Array.isArray(item)\n\n    // Saving the target matrix row size\n    if (i === 0 && isArray) {\n      length = item.length\n    }\n\n    // If the current item is an array but the length does not equal the targetVectorSize\n    if (isArray && item.length !== length) {\n      return undefined\n    }\n\n    const itemType = isArray\n      ? getArrayDataType(item, typeOf) // recurse into a nested array\n      : typeOf(item)\n\n    if (type === undefined) {\n      type = itemType // first item\n    } else if (type !== itemType) {\n      return 'mixed'\n    } else {\n      // we're good, everything has the same type so far\n    }\n  }\n\n  return type\n}\n\n/**\n * Return the last item from an array\n * @param array\n * @returns {*}\n */\nexport function last (array) {\n  return array[array.length - 1]\n}\n\n/**\n * Get all but the last element of array.\n */\nexport function initial (array) {\n  return array.slice(0, array.length - 1)\n}\n\n/**\n * Test whether an array or string contains an item\n * @param {Array | string} array\n * @param {*} item\n * @return {boolean}\n */\nexport function contains (array, item) {\n  return array.indexOf(item) !== -1\n}\n","import { contains } from './array'\nimport { pickShallow } from './object'\n\n/**\n * Create a factory function, which can be used to inject dependencies.\n *\n * The created functions are memoized, a consecutive call of the factory\n * with the exact same inputs will return the same function instance.\n * The memoized cache is exposed on `factory.cache` and can be cleared\n * if needed.\n *\n * Example:\n *\n *     const name = 'log'\n *     const dependencies = ['config', 'typed', 'divideScalar', 'Complex']\n *\n *     export const createLog = factory(name, dependencies, ({ typed, config, divideScalar, Complex }) => {\n *       // ... create the function log here and return it\n *     }\n *\n * @param {string} name           Name of the function to be created\n * @param {string[]} dependencies The names of all required dependencies\n * @param {function} create       Callback function called with an object with all dependencies\n * @param {Object} [meta]         Optional object with meta information that will be attached\n *                                to the created factory function as property `meta`.\n * @returns {function}\n */\nexport function factory (name, dependencies, create, meta) {\n  function assertAndCreate (scope) {\n    // we only pass the requested dependencies to the factory function\n    // to prevent functions to rely on dependencies that are not explicitly\n    // requested.\n    const deps = pickShallow(scope, dependencies.map(stripOptionalNotation))\n\n    assertDependencies(name, dependencies, scope)\n\n    return create(deps)\n  }\n\n  assertAndCreate.isFactory = true\n  assertAndCreate.fn = name\n  assertAndCreate.dependencies = dependencies.slice().sort()\n  if (meta) {\n    assertAndCreate.meta = meta\n  }\n\n  return assertAndCreate\n}\n\n/**\n * Sort all factories such that when loading in order, the dependencies are resolved.\n *\n * @param {Array} factories\n * @returns {Array} Returns a new array with the sorted factories.\n */\nexport function sortFactories (factories) {\n  const factoriesByName = {}\n\n  factories.forEach(factory => {\n    factoriesByName[factory.fn] = factory\n  })\n\n  function containsDependency (factory, dependency) {\n    // TODO: detect circular references\n    if (isFactory(factory)) {\n      if (contains(factory.dependencies, dependency.fn || dependency.name)) {\n        return true\n      }\n\n      if (factory.dependencies.some(d => containsDependency(factoriesByName[d], dependency))) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  const sorted = []\n\n  function addFactory (factory) {\n    let index = 0\n    while (index < sorted.length && !containsDependency(sorted[index], factory)) {\n      index++\n    }\n\n    sorted.splice(index, 0, factory)\n  }\n\n  // sort regular factory functions\n  factories\n    .filter(isFactory)\n    .forEach(addFactory)\n\n  // sort legacy factory functions AFTER the regular factory functions\n  factories\n    .filter(factory => !isFactory(factory))\n    .forEach(addFactory)\n\n  return sorted\n}\n\n// TODO: comment or cleanup if unused in the end\nexport function create (factories, scope = {}) {\n  sortFactories(factories)\n    .forEach(factory => factory(scope))\n\n  return scope\n}\n\n/**\n * Test whether an object is a factory. This is the case when it has\n * properties name, dependencies, and a function create.\n * @param {*} obj\n * @returns {boolean}\n */\nexport function isFactory (obj) {\n  return typeof obj === 'function' &&\n    typeof obj.fn === 'string' &&\n    Array.isArray(obj.dependencies)\n}\n\n/**\n * Assert that all dependencies of a list with dependencies are available in the provided scope.\n *\n * Will throw an exception when there are dependencies missing.\n *\n * @param {string} name   Name for the function to be created. Used to generate a useful error message\n * @param {string[]} dependencies\n * @param {Object} scope\n */\nexport function assertDependencies (name, dependencies, scope) {\n  const allDefined = dependencies\n    .filter(dependency => !isOptionalDependency(dependency)) // filter optionals\n    .every(dependency => scope[dependency] !== undefined)\n\n  if (!allDefined) {\n    const missingDependencies = dependencies.filter(dependency => scope[dependency] === undefined)\n\n    // TODO: create a custom error class for this, a MathjsError or something like that\n    throw new Error(`Cannot create function \"${name}\", ` +\n      `some dependencies are missing: ${missingDependencies.map(d => `\"${d}\"`).join(', ')}.`)\n  }\n}\n\nexport function isOptionalDependency (dependency) {\n  return dependency && dependency[0] === '?'\n}\n\nexport function stripOptionalNotation (dependency) {\n  return dependency && dependency[0] === '?'\n    ? dependency.slice(1)\n    : dependency\n}\n","import Complex from 'complex.js'\nimport { format } from '../../utils/number'\nimport { isNumber, isUnit } from '../../utils/is'\nimport { factory } from '../../utils/factory'\n\nconst name = 'Complex'\nconst dependencies = []\n\nexport const createComplexClass = /* #__PURE__ */ factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Complex.prototype.type = 'Complex'\n  Complex.prototype.isComplex = true\n\n  /**\n   * Get a JSON representation of the complex number\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}`\n   */\n  Complex.prototype.toJSON = function () {\n    return {\n      mathjs: 'Complex',\n      re: this.re,\n      im: this.im\n    }\n  }\n\n  /*\n   * Return the value of the complex number in polar notation\n   * The angle phi will be set in the interval of [-pi, pi].\n   * @return {{r: number, phi: number}} Returns and object with properties r and phi.\n   */\n  Complex.prototype.toPolar = function () {\n    return {\n      r: this.abs(),\n      phi: this.arg()\n    }\n  }\n\n  /**\n   * Get a string representation of the complex number,\n   * with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n  Complex.prototype.format = function (options) {\n    let str = ''\n    let im = this.im\n    let re = this.re\n    const strRe = format(this.re, options)\n    const strIm = format(this.im, options)\n\n    // round either re or im when smaller than the configured precision\n    const precision = isNumber(options) ? options : options ? options.precision : null\n    if (precision !== null) {\n      const epsilon = Math.pow(10, -precision)\n      if (Math.abs(re / im) < epsilon) {\n        re = 0\n      }\n      if (Math.abs(im / re) < epsilon) {\n        im = 0\n      }\n    }\n\n    if (im === 0) {\n      // real value\n      str = strRe\n    } else if (re === 0) {\n      // purely complex value\n      if (im === 1) {\n        str = 'i'\n      } else if (im === -1) {\n        str = '-i'\n      } else {\n        str = strIm + 'i'\n      }\n    } else {\n      // complex value\n      if (im < 0) {\n        if (im === -1) {\n          str = strRe + ' - i'\n        } else {\n          str = strRe + ' - ' + strIm.substring(1) + 'i'\n        }\n      } else {\n        if (im === 1) {\n          str = strRe + ' + i'\n        } else {\n          str = strRe + ' + ' + strIm + 'i'\n        }\n      }\n    }\n    return str\n  }\n\n  /**\n   * Create a complex number from polar coordinates\n   *\n   * Usage:\n   *\n   *     Complex.fromPolar(r: number, phi: number) : Complex\n   *     Complex.fromPolar({r: number, phi: number}) : Complex\n   *\n   * @param {*} args...\n   * @return {Complex}\n   */\n  Complex.fromPolar = function (args) {\n    switch (arguments.length) {\n      case 1:\n        const arg = arguments[0]\n        if (typeof arg === 'object') {\n          return Complex(arg)\n        }\n        throw new TypeError('Input has to be an object with r and phi keys.')\n\n      case 2:\n        const r = arguments[0]\n        let phi = arguments[1]\n        if (isNumber(r)) {\n          if (isUnit(phi) && phi.hasBase('ANGLE')) {\n            // convert unit to a number in radians\n            phi = phi.toNumber('rad')\n          }\n\n          if (isNumber(phi)) {\n            return new Complex({ r: r, phi: phi })\n          }\n\n          throw new TypeError('Phi is not a number nor an angle unit.')\n        } else {\n          throw new TypeError('Radius r is not a number.')\n        }\n\n      default:\n        throw new SyntaxError('Wrong number of arguments in function fromPolar')\n    }\n  }\n\n  Complex.prototype.valueOf = Complex.prototype.toString\n\n  /**\n   * Create a Complex number from a JSON object\n   * @param {Object} json  A JSON Object structured as\n   *                       {\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}\n   *                       All properties are optional, default values\n   *                       for `re` and `im` are 0.\n   * @return {Complex} Returns a new Complex number\n   */\n  Complex.fromJSON = function (json) {\n    return new Complex(json)\n  }\n\n  /**\n   * Compare two complex numbers, `a` and `b`:\n   *\n   * - Returns 1 when the real part of `a` is larger than the real part of `b`\n   * - Returns -1 when the real part of `a` is smaller than the real part of `b`\n   * - Returns 1 when the real parts are equal\n   *   and the imaginary part of `a` is larger than the imaginary part of `b`\n   * - Returns -1 when the real parts are equal\n   *   and the imaginary part of `a` is smaller than the imaginary part of `b`\n   * - Returns 0 when both real and imaginary parts are equal.\n   *\n   * @params {Complex} a\n   * @params {Complex} b\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n  Complex.compare = function (a, b) {\n    if (a.re > b.re) { return 1 }\n    if (a.re < b.re) { return -1 }\n\n    if (a.im > b.im) { return 1 }\n    if (a.im < b.im) { return -1 }\n\n    return 0\n  }\n\n  return Complex\n}, { isClass: true })\n","// function utils\n\n/**\n * Memoize a given function by caching the computed result.\n * The cache of a memoized function can be cleared by deleting the `cache`\n * property of the function.\n *\n * @param {function} fn                     The function to be memoized.\n *                                          Must be a pure function.\n * @param {function(args: Array)} [hasher]  A custom hash builder.\n *                                          Is JSON.stringify by default.\n * @return {function}                       Returns the memoized function\n */\nexport function memoize (fn, hasher) {\n  return function memoize () {\n    if (typeof memoize.cache !== 'object') {\n      memoize.cache = {}\n    }\n\n    const args = []\n    for (let i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    const hash = hasher ? hasher(args) : JSON.stringify(args)\n    if (!(hash in memoize.cache)) {\n      memoize.cache[hash] = fn.apply(fn, args)\n    }\n    return memoize.cache[hash]\n  }\n}\n\n/**\n * Memoize a given function by caching all results and the arguments,\n * and comparing against the arguments of previous results before\n * executing again.\n * This is less performant than `memoize` which calculates a hash,\n * which is very fast to compare. Use `memoizeCompare` only when it is\n * not possible to create a unique serializable hash from the function\n * arguments.\n * The isEqual function must compare two sets of arguments\n * and return true when equal (can be a deep equality check for example).\n * @param {function} fn\n * @param {function(a: *, b: *) : boolean} isEqual\n * @returns {function}\n */\nexport function memoizeCompare (fn, isEqual) {\n  const memoize = function memoize () {\n    const args = []\n    for (let i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    for (let c = 0; c < memoize.cache.length; c++) {\n      const cached = memoize.cache[c]\n\n      if (isEqual(args, cached.args)) {\n        // TODO: move this cache entry to the top so recently used entries move up?\n        return cached.res\n      }\n    }\n\n    const res = fn.apply(fn, args)\n    memoize.cache.unshift({ args, res })\n\n    return res\n  }\n\n  memoize.cache = []\n\n  return memoize\n}\n\n/**\n * Find the maximum number of arguments expected by a typed function.\n * @param {function} fn   A typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\nexport function maxArgumentCount (fn) {\n  return Object.keys(fn.signatures || {})\n    .reduce(function (args, signature) {\n      const count = (signature.match(/,/g) || []).length + 1\n      return Math.max(args, count)\n    }, -1)\n}\n","import { memoize } from '../function'\n\n/**\n * Calculate BigNumber e\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns e\n */\nexport const createBigNumberE = memoize(function (BigNumber) {\n  return new BigNumber(1).exp()\n}, hasher)\n\n/**\n * Calculate BigNumber golden ratio, phi = (1+sqrt(5))/2\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns phi\n */\nexport const createBigNumberPhi = memoize(function (BigNumber) {\n  return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2)\n}, hasher)\n\n/**\n * Calculate BigNumber pi.\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns pi\n */\nexport const createBigNumberPi = memoize(function (BigNumber) {\n  return BigNumber.acos(-1)\n}, hasher)\n\n/**\n * Calculate BigNumber tau, tau = 2 * pi\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns tau\n */\nexport const createBigNumberTau = memoize(function (BigNumber) {\n  return createBigNumberPi(BigNumber).times(2)\n}, hasher)\n\n/**\n * Create a hash for a BigNumber constructor function. The created has is\n * the configured precision\n * @param {Array} args         Supposed to contain a single entry with\n *                             a BigNumber constructor\n * @return {number} precision\n * @private\n */\nfunction hasher (args) {\n  return args[0].precision\n}\n","\nexport const pi = Math.PI\nexport const tau = 2 * Math.PI\nexport const e = Math.E\nexport const phi = 1.61803398874989484820458683436563811772030917980576286213545\n","import Decimal from 'decimal.js'\nimport { factory } from '../../utils/factory'\n\nconst name = 'BigNumber'\nconst dependencies = ['?on', 'config']\n\nexport const createBigNumberClass = /* #__PURE__ */ factory(name, dependencies, ({ on, config }) => {\n  const BigNumber = Decimal.clone({ precision: config.precision })\n\n  /**\n   * Attach type information\n   */\n  BigNumber.prototype.type = 'BigNumber'\n  BigNumber.prototype.isBigNumber = true\n\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    }\n  }\n\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value)\n  }\n\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({ precision: curr.precision })\n      }\n    })\n  }\n\n  return BigNumber\n}, { isClass: true })\n","import { factory } from '../../utils/factory'\n\nconst name = 'Matrix'\nconst dependencies = []\n\nexport const createMatrixClass = /* #__PURE__ */ factory(name, dependencies, () => {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *\n   *     let matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *\n   *     let matrix = math.matrix([[1, 2], [3, 4]])\n   *     matix.size()              // [2, 2]\n   *     matrix.resize([3, 2], 5)\n   *     matrix.valueOf()          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix () {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator')\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Matrix.prototype.type = 'Matrix'\n  Matrix.prototype.isMatrix = true\n\n  /**\n   * Get the Matrix storage constructor for the given format.\n   *\n   * @param {string} format       The Matrix storage format.\n   *\n   * @return {Function}           The Matrix storage constructor.\n   */\n  Matrix.storage = function (format) {\n    // TODO: deprecated since v6.0.0. Clean up some day\n    throw new Error('Matrix.storage is deprecated since v6.0.0. ' +\n      'Use the factory function math.matrix instead.')\n  }\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface')\n  }\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface')\n  }\n\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface')\n  }\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface')\n  }\n\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface')\n  }\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface')\n  }\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface')\n  }\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface')\n  }\n\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface')\n  }\n\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n  Matrix.prototype.size = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface')\n  }\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface')\n  }\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface')\n  }\n\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface')\n  }\n\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface')\n  }\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface')\n  }\n\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface')\n  }\n\n  return Matrix\n}, { isClass: true })\n","import { factory } from '../../utils/factory'\n\n// Source: https://en.wikipedia.org/wiki/Physical_constant\n\n// Universal constants\nexport const createSpeedOfLight = /* #__PURE__ */ unitFactory('speedOfLight', '299792458', 'm s^-1')\nexport const createGravitationConstant = /* #__PURE__ */ unitFactory('gravitationConstant', '6.67430e-11', 'm^3 kg^-1 s^-2')\nexport const createPlanckConstant = /* #__PURE__ */ unitFactory('planckConstant', '6.62607015e-34', 'J s')\nexport const createReducedPlanckConstant = /* #__PURE__ */ unitFactory('reducedPlanckConstant', '1.0545718176461565e-34', 'J s')\n\n// Electromagnetic constants\nexport const createMagneticConstant = /* #__PURE__ */ unitFactory('magneticConstant', '1.25663706212e-6', 'N A^-2')\nexport const createElectricConstant = /* #__PURE__ */ unitFactory('electricConstant', '8.8541878128e-12', 'F m^-1')\nexport const createVacuumImpedance = /* #__PURE__ */ unitFactory('vacuumImpedance', '376.730313667', 'ohm')\nexport const createCoulomb = /* #__PURE__ */ unitFactory('coulomb', '8.987551792261171e9', 'N m^2 C^-2')\nexport const createElementaryCharge = /* #__PURE__ */ unitFactory('elementaryCharge', '1.602176634e-19', 'C')\nexport const createBohrMagneton = /* #__PURE__ */ unitFactory('bohrMagneton', '9.2740100783e-24', 'J T^-1')\nexport const createConductanceQuantum = /* #__PURE__ */ unitFactory('conductanceQuantum', '7.748091729863649e-5', 'S')\nexport const createInverseConductanceQuantum = /* #__PURE__ */ unitFactory('inverseConductanceQuantum', '12906.403729652257', 'ohm')\nexport const createMagneticFluxQuantum = /* #__PURE__ */ unitFactory('magneticFluxQuantum', '2.0678338484619295e-15', 'Wb')\nexport const createNuclearMagneton = /* #__PURE__ */ unitFactory('nuclearMagneton', '5.0507837461e-27', 'J T^-1')\nexport const createKlitzing = /* #__PURE__ */ unitFactory('klitzing', '25812.807459304513', 'ohm')\nexport const createJosephson = /* #__PURE__ */ unitFactory('josephson', '4.835978484169836e14 Hz V', 'Hz V^-1') // TODO: support for Hz needed\n\n// Atomic and nuclear constants\nexport const createBohrRadius = /* #__PURE__ */ unitFactory('bohrRadius', '5.29177210903e-11', 'm')\nexport const createClassicalElectronRadius = /* #__PURE__ */ unitFactory('classicalElectronRadius', '2.8179403262e-15', 'm')\nexport const createElectronMass = /* #__PURE__ */ unitFactory('electronMass', '9.1093837015e-31', 'kg')\nexport const createFermiCoupling = /* #__PURE__ */ unitFactory('fermiCoupling', '1.1663787e-5', 'GeV^-2')\nexport const createFineStructure = numberFactory('fineStructure', 7.2973525693e-3)\nexport const createHartreeEnergy = /* #__PURE__ */ unitFactory('hartreeEnergy', '4.3597447222071e-18', 'J')\nexport const createProtonMass = /* #__PURE__ */ unitFactory('protonMass', '1.67262192369e-27', 'kg')\nexport const createDeuteronMass = /* #__PURE__ */ unitFactory('deuteronMass', '3.3435830926e-27', 'kg')\nexport const createNeutronMass = /* #__PURE__ */ unitFactory('neutronMass', '1.6749271613e-27', 'kg')\nexport const createQuantumOfCirculation = /* #__PURE__ */ unitFactory('quantumOfCirculation', '3.6369475516e-4', 'm^2 s^-1')\nexport const createRydberg = /* #__PURE__ */ unitFactory('rydberg', '10973731.568160', 'm^-1')\nexport const createThomsonCrossSection = /* #__PURE__ */ unitFactory('thomsonCrossSection', '6.6524587321e-29', 'm^2')\nexport const createWeakMixingAngle = numberFactory('weakMixingAngle', 0.22290)\nexport const createEfimovFactor = numberFactory('efimovFactor', 22.7)\n\n// Physico-chemical constants\nexport const createAtomicMass = /* #__PURE__ */ unitFactory('atomicMass', '1.66053906660e-27', 'kg')\nexport const createAvogadro = /* #__PURE__ */ unitFactory('avogadro', '6.02214076e23', 'mol^-1')\nexport const createBoltzmann = /* #__PURE__ */ unitFactory('boltzmann', '1.380649e-23', 'J K^-1')\nexport const createFaraday = /* #__PURE__ */ unitFactory('faraday', '96485.33212331001', 'C mol^-1')\nexport const createFirstRadiation = /* #__PURE__ */ unitFactory('firstRadiation', '3.7417718521927573e-16', 'W m^2')\n// export const createSpectralRadiance = /* #__PURE__ */ unitFactory('spectralRadiance', '1.1910429723971881e-16', 'W m^2 sr^-1') // TODO spectralRadiance\nexport const createLoschmidt = /* #__PURE__ */ unitFactory('loschmidt', '2.686780111798444e25', 'm^-3')\nexport const createGasConstant = /* #__PURE__ */ unitFactory('gasConstant', '8.31446261815324', 'J K^-1 mol^-1')\nexport const createMolarPlanckConstant = /* #__PURE__ */ unitFactory('molarPlanckConstant', '3.990312712893431e-10', 'J s mol^-1')\nexport const createMolarVolume = /* #__PURE__ */ unitFactory('molarVolume', '0.022413969545014137', 'm^3 mol^-1')\nexport const createSackurTetrode = numberFactory('sackurTetrode', -1.16487052358)\nexport const createSecondRadiation = /* #__PURE__ */ unitFactory('secondRadiation', '0.014387768775039337', 'm K')\nexport const createStefanBoltzmann = /* #__PURE__ */ unitFactory('stefanBoltzmann', '5.67037441918443e-8', 'W m^-2 K^-4')\nexport const createWienDisplacement = /* #__PURE__ */ unitFactory('wienDisplacement', '2.897771955e-3', 'm K')\n\n// Adopted values\nexport const createMolarMass = /* #__PURE__ */ unitFactory('molarMass', '0.99999999965e-3', 'kg mol^-1')\nexport const createMolarMassC12 = /* #__PURE__ */ unitFactory('molarMassC12', '11.9999999958e-3', 'kg mol^-1')\nexport const createGravity = /* #__PURE__ */ unitFactory('gravity', '9.80665', 'm s^-2')\n// atm is defined in Unit.js\n\n// Natural units\nexport const createPlanckLength = /* #__PURE__ */ unitFactory('planckLength', '1.616255e-35', 'm')\nexport const createPlanckMass = /* #__PURE__ */ unitFactory('planckMass', '2.176435e-8', 'kg')\nexport const createPlanckTime = /* #__PURE__ */ unitFactory('planckTime', '5.391245e-44', 's')\nexport const createPlanckCharge = /* #__PURE__ */ unitFactory('planckCharge', '1.87554603778e-18', 'C')\nexport const createPlanckTemperature = /* #__PURE__ */ unitFactory('planckTemperature', '1.416785e+32', 'K')\n\n// helper function to create a factory function which creates a physical constant,\n// a Unit with either a number value or a BigNumber value depending on the configuration\nfunction unitFactory (name, valueStr, unitStr) {\n  const dependencies = ['config', 'Unit', 'BigNumber']\n\n  return factory(name, dependencies, ({ config, Unit, BigNumber }) => {\n    // Note that we can parse into number or BigNumber.\n    // We do not parse into Fractions as that doesn't make sense: we would lose precision of the values\n    // Therefore we dont use Unit.parse()\n    const value = config.number === 'BigNumber'\n      ? new BigNumber(valueStr)\n      : parseFloat(valueStr)\n\n    const unit = new Unit(value, unitStr)\n    unit.fixPrefix = true\n    return unit\n  })\n}\n\n// helper function to create a factory function which creates a numeric constant,\n// either a number or BigNumber depending on the configuration\nfunction numberFactory (name, value) {\n  const dependencies = ['config', 'BigNumber']\n\n  return factory(name, dependencies, ({ config, BigNumber }) => {\n    return config.number === 'BigNumber'\n      ? new BigNumber(value)\n      : value\n  })\n}\n","import Fraction from 'fraction.js'\nimport { factory } from '../../utils/factory'\n\nconst name = 'Fraction'\nconst dependencies = []\n\nexport const createFractionClass = /* #__PURE__ */ factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Fraction.prototype.type = 'Fraction'\n  Fraction.prototype.isFraction = true\n\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    }\n  }\n\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json)\n  }\n\n  return Fraction\n}, { isClass: true })\n","import { isArray, isBigNumber, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is'\nimport { arraySize, getArrayDataType, reshape, resize, unsqueeze, validate, validateIndex } from '../../utils/array'\nimport { format } from '../../utils/string'\nimport { isInteger } from '../../utils/number'\nimport { clone, deepStrictEqual } from '../../utils/object'\nimport { DimensionError } from '../../error/DimensionError'\nimport { factory } from '../../utils/factory'\n\nconst name = 'DenseMatrix'\nconst dependencies = [\n  'Matrix'\n]\n\nexport const createDenseMatrixClass = /* #__PURE__ */ factory(name, dependencies, ({ Matrix }) => {\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   */\n  function DenseMatrix (data, datatype) {\n    if (!(this instanceof DenseMatrix)) { throw new SyntaxError('Constructor must be called with the new operator') }\n    if (datatype && !isString(datatype)) { throw new Error('Invalid datatype: ' + datatype) }\n\n    if (isMatrix(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = clone(data._data)\n        this._size = clone(data._size)\n        this._datatype = datatype || data._datatype\n      } else {\n        // build data from existing matrix\n        this._data = data.toArray()\n        this._size = data.size()\n        this._datatype = datatype || data._datatype\n      }\n    } else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data\n      this._size = data.size\n      this._datatype = datatype || data.datatype\n    } else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data)\n      // get the dimensions of the array\n      this._size = arraySize(this._data)\n      // verify the dimensions of the array, TODO: compute size while processing array\n      validate(this._data, this._size)\n      // data type unknown\n      this._datatype = datatype\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')')\n    } else {\n      // nothing provided\n      this._data = []\n      this._size = [0]\n      this._datatype = datatype\n    }\n  }\n\n  DenseMatrix.prototype = new Matrix()\n\n  /**\n   * Create a new DenseMatrix\n   */\n  DenseMatrix.prototype.createDenseMatrix = function (data, datatype) {\n    return new DenseMatrix(data, datatype)\n  }\n\n  /**\n   * Attach type information\n   */\n  DenseMatrix.prototype.type = 'DenseMatrix'\n  DenseMatrix.prototype.isDenseMatrix = true\n\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf DenseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n  DenseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._data, typeOf)\n  }\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()  // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n  DenseMatrix.prototype.storage = function () {\n    return 'dense'\n  }\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype\n  }\n\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype)\n  }\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index)\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue)\n\n      default:\n        throw new SyntaxError('Wrong number of arguments')\n    }\n  }\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  DenseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) { throw new TypeError('Array expected') }\n    if (index.length !== this._size.length) { throw new DimensionError(index.length, this._size.length) }\n\n    // check index\n    for (let x = 0; x < index.length; x++) { validateIndex(index[x], this._size[x]) }\n\n    let data = this._data\n    for (let i = 0, ii = index.length; i < ii; i++) {\n      const indexI = index[i]\n      validateIndex(indexI, data.length)\n      data = data[indexI]\n    }\n\n    return data\n  }\n\n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index)) { throw new TypeError('Array expected') }\n    if (index.length < this._size.length) { throw new DimensionError(index.length, this._size.length, '<') }\n\n    let i, ii, indexI\n\n    // enlarge matrix when needed\n    const size = index.map(function (i) {\n      return i + 1\n    })\n    _fit(this, size, defaultValue)\n\n    // traverse over the dimensions\n    let data = this._data\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      indexI = index[i]\n      validateIndex(indexI, data.length)\n      data = data[indexI]\n    }\n\n    // set new value\n    indexI = index[index.length - 1]\n    validateIndex(indexI, data.length)\n    data[indexI] = value\n\n    return this\n  }\n\n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n  function _get (matrix, index) {\n    if (!isIndex(index)) {\n      throw new TypeError('Invalid index')\n    }\n\n    const isScalar = index.isScalar()\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min())\n    } else {\n      // validate dimensions\n      const size = index.size()\n      if (size.length !== matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length)\n      }\n\n      // validate if any of the ranges in the index is out of range\n      const min = index.min()\n      const max = index.max()\n      for (let i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i])\n        validateIndex(max[i], matrix._size[i])\n      }\n\n      // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype)\n    }\n  }\n\n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n  function _getSubmatrix (data, index, dims, dim) {\n    const last = (dim === dims - 1)\n    const range = index.dimension(dim)\n\n    if (last) {\n      return range.map(function (i) {\n        validateIndex(i, data.length)\n        return data[i]\n      }).valueOf()\n    } else {\n      return range.map(function (i) {\n        validateIndex(i, data.length)\n        const child = data[i]\n        return _getSubmatrix(child, index, dims, dim + 1)\n      }).valueOf()\n    }\n  }\n\n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n  function _set (matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index')\n    }\n\n    // get index size and check whether the index contains a single value\n    const iSize = index.size()\n    const isScalar = index.isScalar()\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    let sSize\n    if (isMatrix(submatrix)) {\n      sSize = submatrix.size()\n      submatrix = submatrix.valueOf()\n    } else {\n      sSize = arraySize(submatrix)\n    }\n\n    if (isScalar) {\n      // set a scalar\n\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected')\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue)\n    } else {\n      // set a submatrix\n\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<')\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        let i = 0\n        let outer = 0\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++\n        }\n        while (iSize[i] === 1) {\n          outer++\n          i++\n        }\n\n        // unsqueeze both outer and inner dimensions\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize)\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>')\n      }\n\n      // enlarge matrix when needed\n      const size = index.max().map(function (i) {\n        return i + 1\n      })\n      _fit(matrix, size, defaultValue)\n\n      // insert the sub matrix\n      const dims = iSize.length\n      const dim = 0\n      _setSubmatrix(matrix._data, index, submatrix, dims, dim)\n    }\n\n    return matrix\n  }\n\n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n  function _setSubmatrix (data, index, submatrix, dims, dim) {\n    const last = (dim === dims - 1)\n    const range = index.dimension(dim)\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex)\n        data[dataIndex] = submatrix[subIndex[0]]\n      })\n    } else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex)\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1)\n      })\n    }\n  }\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isArray(size)) { throw new TypeError('Array expected') }\n\n    // matrix to resize\n    const m = copy ? this.clone() : this\n    // resize matrix\n    return _resize(m, size, defaultValue)\n  }\n\n  function _resize (matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      let v = matrix._data\n      // go deep\n      while (isArray(v)) {\n        v = v[0]\n      }\n      return v\n    }\n    // resize matrix\n    matrix._size = size.slice(0) // copy the array\n    matrix._data = resize(matrix._data, matrix._size, defaultValue)\n    // return matrix\n    return matrix\n  }\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    const m = copy ? this.clone() : this\n\n    m._data = reshape(m._data, size)\n    m._size = size.slice(0)\n    return m\n  }\n\n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n  function _fit (matrix, size, defaultValue) {\n    const // copy the array\n      newSize = matrix._size.slice(0)\n\n    let changed = false\n\n    // add dimensions when needed\n    while (newSize.length < size.length) {\n      newSize.push(0)\n      changed = true\n    }\n\n    // enlarge size when needed\n    for (let i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i]\n        changed = true\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue)\n    }\n  }\n\n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n  DenseMatrix.prototype.clone = function () {\n    const m = new DenseMatrix({\n      data: clone(this._data),\n      size: clone(this._size),\n      datatype: this._datatype\n    })\n    return m\n  }\n\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n  DenseMatrix.prototype.size = function () {\n    return this._size.slice(0) // return a clone of _size\n  }\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    const me = this\n    const recurse = function (value, index) {\n      if (isArray(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i))\n        })\n      } else {\n        return callback(value, index, me)\n      }\n    }\n    // return dense format\n    return new DenseMatrix({\n      data: recurse(this._data, []),\n      size: clone(this._size),\n      datatype: this._datatype\n    })\n  }\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    const me = this\n    const recurse = function (value, index) {\n      if (isArray(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i))\n        })\n      } else {\n        callback(value, index, me)\n      }\n    }\n    recurse(this._data, [])\n  }\n\n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.toArray = function () {\n    return clone(this._data)\n  }\n\n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data\n  }\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.format = function (options) {\n    return format(this._data, options)\n  }\n\n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.toString = function () {\n    return format(this._data)\n  }\n\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    }\n  }\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix with the diagonal values.\n   */\n  DenseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) { k = k.toNumber() }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number')\n      }\n    } else {\n      // default value\n      k = 0\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // rows & columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n\n    // number diagonal values\n    const n = Math.min(rows - kSub, columns - kSuper)\n\n    // x is a matrix get diagonal from matrix\n    const data = []\n\n    // loop rows\n    for (let i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper]\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [n],\n      datatype: this._datatype\n    })\n  }\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                     The matrix size.\n   * @param {number | Matrix | Array } value The values for the diagonal.\n   * @param {number | BigNumber} [k=0]       The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]          The default value for non-diagonal\n   * @param {string} [datatype]              The datatype for the diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.diagonal = function (size, value, k, defaultValue) {\n    if (!isArray(size)) { throw new TypeError('Array expected, size parameter') }\n    if (size.length !== 2) { throw new Error('Only two dimensions matrix are supported') }\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber()\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers')\n      }\n      return s\n    })\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) { k = k.toNumber() }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number')\n      }\n    } else {\n      // default value\n      k = 0\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // rows and columns\n    const rows = size[0]\n    const columns = size[1]\n\n    // number of non-zero items\n    const n = Math.min(rows - kSub, columns - kSuper)\n\n    // value extraction function\n    let _value\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length')\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i]\n      }\n    } else if (isMatrix(value)) {\n      // matrix size\n      const ms = value.size()\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length')\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i])\n      }\n    } else {\n      // define function\n      _value = function () {\n        // return value\n        return value\n      }\n    }\n\n    // discover default value if needed\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = isBigNumber(_value(0))\n        ? _value(0).mul(0) // trick to create a BigNumber with value zero\n        : 0\n    }\n\n    // empty array\n    let data = []\n\n    // check we need to resize array\n    if (size.length > 0) {\n      // resize array\n      data = resize(data, size, defaultValue)\n      // fill diagonal\n      for (let d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d)\n      }\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    })\n  }\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json)\n  }\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers')\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported')\n    }\n    // validate index\n    validateIndex(i, this._size[0])\n    validateIndex(j, this._size[0])\n\n    // swap rows\n    DenseMatrix._swapRows(i, j, this._data)\n    // return current instance\n    return this\n  }\n\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   * @param {Array} data     Matrix data\n   */\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    const vi = data[i]\n    data[i] = data[j]\n    data[j] = vi\n  }\n\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @return {Array} data\n   */\n  function preprocess (data) {\n    for (let i = 0, ii = data.length; i < ii; i++) {\n      const elem = data[i]\n      if (isArray(elem)) {\n        data[i] = preprocess(elem)\n      } else if (elem && elem.isMatrix === true) {\n        data[i] = preprocess(elem.valueOf())\n      }\n    }\n\n    return data\n  }\n\n  return DenseMatrix\n}, { isClass: true })\n","/**\n * Create a typed-function which checks the types of the arguments and\n * can match them against multiple provided signatures. The typed-function\n * automatically converts inputs in order to find a matching signature.\n * Typed functions throw informative errors in case of wrong input arguments.\n *\n * See the library [typed-function](https://github.com/josdejong/typed-function)\n * for detailed documentation.\n *\n * Syntax:\n *\n *     math.typed(name, signatures) : function\n *     math.typed(signatures) : function\n *\n * Examples:\n *\n *     // create a typed function with multiple types per argument (type union)\n *     const fn2 = typed({\n *       'number | boolean': function (b) {\n *         return 'b is a number or boolean'\n *       },\n *       'string, number | boolean': function (a, b) {\n *         return 'a is a string, b is a number or boolean'\n *       }\n *     })\n *\n *     // create a typed function with an any type argument\n *     const log = typed({\n *       'string, any': function (event, data) {\n *         console.log('event: ' + event + ', data: ' + JSON.stringify(data))\n *       }\n *     })\n *\n * @param {string} [name]                          Optional name for the typed-function\n * @param {Object<string, function>} signatures   Object with one or multiple function signatures\n * @returns {function} The created typed-function.\n */\n\nimport {\n  isAccessorNode,\n  isArray,\n  isArrayNode,\n  isAssignmentNode,\n  isBigNumber,\n  isBlockNode,\n  isBoolean,\n  isChain,\n  isComplex,\n  isConditionalNode,\n  isConstantNode,\n  isDate,\n  isDenseMatrix,\n  isFraction,\n  isFunction,\n  isFunctionAssignmentNode,\n  isFunctionNode,\n  isHelp,\n  isIndex,\n  isIndexNode,\n  isMatrix,\n  isNode,\n  isNull,\n  isNumber,\n  isObject,\n  isObjectNode,\n  isOperatorNode,\n  isParenthesisNode,\n  isRange,\n  isRangeNode,\n  isRegExp,\n  isResultSet,\n  isSparseMatrix,\n  isString,\n  isSymbolNode,\n  isUndefined,\n  isUnit\n} from '../../utils/is'\nimport typedFunction from 'typed-function'\nimport { digits } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\n// returns a new instance of typed-function\nlet _createTyped = function () {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped = typedFunction.create\n  return typedFunction\n}\n\nconst dependencies = [\n  '?BigNumber',\n  '?Complex',\n  '?DenseMatrix',\n  '?Fraction'\n]\n\n/**\n * Factory function for creating a new typed instance\n * @param {Object} dependencies   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\nexport const createTyped = /* #__PURE__ */ factory('typed', dependencies, function createTyped ({ BigNumber, Complex, DenseMatrix, Fraction }) {\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n\n  // get a new instance of typed-function\n  const typed = _createTyped()\n\n  // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n  typed.types = [\n    { name: 'number', test: isNumber },\n    { name: 'Complex', test: isComplex },\n    { name: 'BigNumber', test: isBigNumber },\n    { name: 'Fraction', test: isFraction },\n    { name: 'Unit', test: isUnit },\n    { name: 'string', test: isString },\n    { name: 'Chain', test: isChain },\n    { name: 'Array', test: isArray },\n    { name: 'Matrix', test: isMatrix },\n    { name: 'DenseMatrix', test: isDenseMatrix },\n    { name: 'SparseMatrix', test: isSparseMatrix },\n    { name: 'Range', test: isRange },\n    { name: 'Index', test: isIndex },\n    { name: 'boolean', test: isBoolean },\n    { name: 'ResultSet', test: isResultSet },\n    { name: 'Help', test: isHelp },\n    { name: 'function', test: isFunction },\n    { name: 'Date', test: isDate },\n    { name: 'RegExp', test: isRegExp },\n    { name: 'null', test: isNull },\n    { name: 'undefined', test: isUndefined },\n\n    { name: 'AccessorNode', test: isAccessorNode },\n    { name: 'ArrayNode', test: isArrayNode },\n    { name: 'AssignmentNode', test: isAssignmentNode },\n    { name: 'BlockNode', test: isBlockNode },\n    { name: 'ConditionalNode', test: isConditionalNode },\n    { name: 'ConstantNode', test: isConstantNode },\n    { name: 'FunctionNode', test: isFunctionNode },\n    { name: 'FunctionAssignmentNode', test: isFunctionAssignmentNode },\n    { name: 'IndexNode', test: isIndexNode },\n    { name: 'Node', test: isNode },\n    { name: 'ObjectNode', test: isObjectNode },\n    { name: 'OperatorNode', test: isOperatorNode },\n    { name: 'ParenthesisNode', test: isParenthesisNode },\n    { name: 'RangeNode', test: isRangeNode },\n    { name: 'SymbolNode', test: isSymbolNode },\n\n    { name: 'Object', test: isObject } // order 'Object' last, it matches on other classes too\n  ]\n\n  typed.conversions = [\n    {\n      from: 'number',\n      to: 'BigNumber',\n      convert: function (x) {\n        if (!BigNumber) {\n          throwNoBignumber(x)\n        }\n\n        // note: conversion from number to BigNumber can fail if x has >15 digits\n        if (digits(x) > 15) {\n          throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' +\n            '(value: ' + x + '). ' +\n            'Use function bignumber(x) to convert to BigNumber.')\n        }\n        return new BigNumber(x)\n      }\n    }, {\n      from: 'number',\n      to: 'Complex',\n      convert: function (x) {\n        if (!Complex) {\n          throwNoComplex(x)\n        }\n\n        return new Complex(x, 0)\n      }\n    }, {\n      from: 'number',\n      to: 'string',\n      convert: function (x) {\n        return x + ''\n      }\n    }, {\n      from: 'BigNumber',\n      to: 'Complex',\n      convert: function (x) {\n        if (!Complex) {\n          throwNoComplex(x)\n        }\n\n        return new Complex(x.toNumber(), 0)\n      }\n    }, {\n      from: 'Fraction',\n      to: 'BigNumber',\n      convert: function (x) {\n        throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' +\n          'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.')\n      }\n    }, {\n      from: 'Fraction',\n      to: 'Complex',\n      convert: function (x) {\n        if (!Complex) {\n          throwNoComplex(x)\n        }\n\n        return new Complex(x.valueOf(), 0)\n      }\n    }, {\n      from: 'number',\n      to: 'Fraction',\n      convert: function (x) {\n        if (!Fraction) {\n          throwNoFraction(x)\n        }\n\n        const f = new Fraction(x)\n        if (f.valueOf() !== x) {\n          throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' +\n            '(value: ' + x + '). ' +\n            'Use function fraction(x) to convert to Fraction.')\n        }\n        return f\n      }\n    }, {\n      // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n      //  from: 'Fraction',\n      //  to: 'number',\n      //  convert: function (x) {\n      //    return x.valueOf()\n      //  }\n      // }, {\n      from: 'string',\n      to: 'number',\n      convert: function (x) {\n        const n = Number(x)\n        if (isNaN(n)) {\n          throw new Error('Cannot convert \"' + x + '\" to a number')\n        }\n        return n\n      }\n    }, {\n      from: 'string',\n      to: 'BigNumber',\n      convert: function (x) {\n        if (!BigNumber) {\n          throwNoBignumber(x)\n        }\n\n        try {\n          return new BigNumber(x)\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to BigNumber')\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Fraction',\n      convert: function (x) {\n        if (!Fraction) {\n          throwNoFraction(x)\n        }\n\n        try {\n          return new Fraction(x)\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Fraction')\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Complex',\n      convert: function (x) {\n        if (!Complex) {\n          throwNoComplex(x)\n        }\n\n        try {\n          return new Complex(x)\n        } catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Complex')\n        }\n      }\n    }, {\n      from: 'boolean',\n      to: 'number',\n      convert: function (x) {\n        return +x\n      }\n    }, {\n      from: 'boolean',\n      to: 'BigNumber',\n      convert: function (x) {\n        if (!BigNumber) {\n          throwNoBignumber(x)\n        }\n\n        return new BigNumber(+x)\n      }\n    }, {\n      from: 'boolean',\n      to: 'Fraction',\n      convert: function (x) {\n        if (!Fraction) {\n          throwNoFraction(x)\n        }\n\n        return new Fraction(+x)\n      }\n    }, {\n      from: 'boolean',\n      to: 'string',\n      convert: function (x) {\n        return String(x)\n      }\n    }, {\n      from: 'Array',\n      to: 'Matrix',\n      convert: function (array) {\n        if (!DenseMatrix) {\n          throwNoMatrix()\n        }\n\n        return new DenseMatrix(array)\n      }\n    }, {\n      from: 'Matrix',\n      to: 'Array',\n      convert: function (matrix) {\n        return matrix.valueOf()\n      }\n    }\n  ]\n\n  return typed\n})\n\nfunction throwNoBignumber (x) {\n  throw new Error(`Cannot convert value ${x} into a BigNumber: no class 'BigNumber' provided`)\n}\n\nfunction throwNoComplex (x) {\n  throw new Error(`Cannot convert value ${x} into a Complex number: no class 'Complex' provided`)\n}\n\nfunction throwNoMatrix () {\n  throw new Error(`Cannot convert array into a Matrix: no class 'DenseMatrix' provided`)\n}\n\nfunction throwNoFraction (x) {\n  throw new Error(`Cannot convert value ${x} into a Fraction, no class 'Fraction' provided.`)\n}\n","import { isCollection, isMatrix } from './is'\nimport { IndexError } from '../error/IndexError'\nimport { arraySize } from './array'\n\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\nexport function containsCollections (array) {\n  for (let i = 0; i < array.length; i++) {\n    if (isCollection(array[i])) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\nexport function deepForEach (array, callback) {\n  if (isMatrix(array)) {\n    array = array.valueOf()\n  }\n\n  for (let i = 0, ii = array.length; i < ii; i++) {\n    const value = array[i]\n\n    if (Array.isArray(value)) {\n      deepForEach(value, callback)\n    } else {\n      callback(value)\n    }\n  }\n}\n\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\nexport function deepMap (array, callback, skipZeros) {\n  if (array && (typeof array.map === 'function')) {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros)\n    })\n  } else {\n    return callback(array)\n  }\n}\n\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\nexport function reduce (mat, dim, callback) {\n  const size = Array.isArray(mat) ? arraySize(mat) : mat.size()\n  if (dim < 0 || (dim >= size.length)) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new IndexError(dim, size.length)\n  }\n\n  if (isMatrix(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback))\n  } else {\n    return _reduce(mat, dim, callback)\n  }\n}\n\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\nfunction _reduce (mat, dim, callback) {\n  let i, ret, val, tran\n\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0]\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i])\n      }\n      return val\n    } else {\n      tran = _switch(mat)\n      ret = []\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback)\n      }\n      return ret\n    }\n  } else {\n    ret = []\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback)\n    }\n    return ret\n  }\n}\n\n/**\n * Transpose a matrix\n * @param {Array} mat\n * @returns {Array} ret\n * @private\n */\nfunction _switch (mat) {\n  const I = mat.length\n  const J = mat[0].length\n  let i, j\n  const ret = []\n  for (j = 0; j < J; j++) {\n    const tmp = []\n    for (i = 0; i < I; i++) {\n      tmp.push(mat[i][j])\n    }\n    ret.push(tmp)\n  }\n  return ret\n}\n\n// TODO: document function scatter\nexport function scatter (a, j, w, x, u, mark, c, f, inverse, update, value) {\n  // a arrays\n  const avalues = a._values\n  const aindex = a._index\n  const aptr = a._ptr\n  // c arrays\n  const cindex = c._index\n\n  // vars\n  let k, k0, k1, i\n\n  // check we need to process values (pattern matrix)\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark\n        // add i to pattern of C\n        cindex.push(i)\n        // x(i) = A, check we need to call function this time\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k])\n          // function was called on current row\n          u[i] = mark\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k]\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k])\n        // function was called on current row\n        u[i] = mark\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark\n        // add i to pattern of C\n        cindex.push(i)\n      } else {\n        // indicate function was called on current row\n        u[i] = mark\n      }\n    }\n  }\n}\n","import { deepMap } from '../../utils/collection'\nimport { isInteger as isIntegerNumber } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\nconst name = 'isInteger'\nconst dependencies = ['typed']\n\nexport const createIsInteger = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Test whether a value is an integer number.\n   * The function supports `number`, `BigNumber`, and `Fraction`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isInteger(x)\n   *\n   * Examples:\n   *\n   *    math.isInteger(2)                     // returns true\n   *    math.isInteger(0)                     // returns true\n   *    math.isInteger(0.5)                   // returns false\n   *    math.isInteger(math.bignumber(500))   // returns true\n   *    math.isInteger(math.fraction(4))      // returns true\n   *    math.isInteger('3')                   // returns true\n   *    math.isInteger([3, 0.5, -2])          // returns [true, false, true]\n   *    math.isInteger(math.complex('2-4i')   // throws an error\n   *\n   * See also:\n   *\n   *    isNumeric, isPositive, isNegative, isZero\n   *\n   * @param {number | BigNumber | Fraction | Array | Matrix} x   Value to be tested\n   * @return {boolean}  Returns true when `x` contains a numeric, integer value.\n   *                    Throws an error in case of an unknown data type.\n   */\n  const isInteger = typed(name, {\n    'number': isIntegerNumber, // TODO: what to do with isInteger(add(0.1, 0.2))  ?\n\n    'BigNumber': function (x) {\n      return x.isInt()\n    },\n\n    'Fraction': function (x) {\n      return x.d === 1 && isFinite(x.n)\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, isInteger)\n    }\n  })\n\n  return isInteger\n})\n","import { isInteger } from '../../utils/number'\n\nconst n1 = 'number'\n\nexport function isIntegerNumber (x) {\n  return isInteger(x)\n}\nisIntegerNumber.signature = n1\n\nexport function isNegativeNumber (x) {\n  return x < 0\n}\nisNegativeNumber.signature = n1\n\nexport function isPositiveNumber (x) {\n  return x > 0\n}\nisPositiveNumber.signature = n1\n\nexport function isZeroNumber (x) {\n  return x === 0\n}\nisZeroNumber.signature = n1\n\nexport function isNaNNumber (x) {\n  return Number.isNaN(x)\n}\nisNaNNumber.signature = n1\n","/**\n * Compares two BigNumbers.\n * @param {BigNumber} x       First value to compare\n * @param {BigNumber} y       Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n */\nexport function nearlyEqual (x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x.eq(y)\n  }\n\n  // use \"==\" operator, handles infinities\n  if (x.eq(y)) {\n    return true\n  }\n\n  // NaN\n  if (x.isNaN() || y.isNaN()) {\n    return false\n  }\n\n  // at this point x and y should be finite\n  if (x.isFinite() && y.isFinite()) {\n    // check numbers are very close, needed when comparing numbers near zero\n    const diff = x.minus(y).abs()\n    if (diff.isZero()) {\n      return true\n    } else {\n      // use relative error\n      const max = x.constructor.max(x.abs(), y.abs())\n      return diff.lte(max.times(epsilon))\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false\n}\n","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual'\nimport { nearlyEqual } from '../../utils/number'\nimport { factory } from '../../utils/factory'\nimport { complexEquals } from '../../utils/complex'\n\nconst name = 'equalScalar'\nconst dependencies = ['typed', 'config']\n\nexport const createEqualScalar = /* #__PURE__ */ factory(name, dependencies, ({ typed, config }) => {\n  /**\n   * Test whether two scalar values are nearly equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  const equalScalar = typed(name, {\n\n    'boolean, boolean': function (x, y) {\n      return x === y\n    },\n\n    'number, number': function (x, y) {\n      return nearlyEqual(x, y, config.epsilon)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.eq(y) || bigNearlyEqual(x, y, config.epsilon)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.equals(y)\n    },\n\n    'Complex, Complex': function (x, y) {\n      return complexEquals(x, y, config.epsilon)\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base')\n      }\n      return equalScalar(x.value, y.value)\n    }\n  })\n\n  return equalScalar\n})\n\nexport const createEqualScalarNumber = factory(name, ['typed', 'config'], ({ typed, config }) => {\n  return typed(name, {\n    'number, number': function (x, y) {\n      return nearlyEqual(x, y, config.epsilon)\n    }\n  })\n})\n","import { nearlyEqual } from './number'\n\n/**\n * Test whether two complex values are equal provided a given epsilon.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x\n * @param {Complex} y\n * @param {number} epsilon\n * @returns {boolean}\n */\nexport function complexEquals (x, y, epsilon) {\n  return nearlyEqual(x.re, y.re, epsilon) && nearlyEqual(x.im, y.im, epsilon)\n}\n","import { isInteger, log2, log10, cbrt, expm1, sign, toFixed, log1p } from '../../utils/number'\n\nconst n1 = 'number'\nconst n2 = 'number, number'\n\nexport function absNumber (a) {\n  return Math.abs(a)\n}\nabsNumber.signature = n1\n\nexport function addNumber (a, b) {\n  return a + b\n}\naddNumber.signature = n2\n\nexport function subtractNumber (a, b) {\n  return a - b\n}\nsubtractNumber.signature = n2\n\nexport function multiplyNumber (a, b) {\n  return a * b\n}\nmultiplyNumber.signature = n2\n\nexport function divideNumber (a, b) {\n  return a / b\n}\ndivideNumber.signature = n2\n\nexport function unaryMinusNumber (x) {\n  return -x\n}\nunaryMinusNumber.signature = n1\n\nexport function unaryPlusNumber (x) {\n  return x\n}\nunaryPlusNumber.signature = n1\n\nexport function cbrtNumber (x) {\n  return cbrt(x)\n}\ncbrtNumber.signature = n1\n\nexport function ceilNumber (x) {\n  return Math.ceil(x)\n}\nceilNumber.signature = n1\n\nexport function cubeNumber (x) {\n  return x * x * x\n}\ncubeNumber.signature = n1\n\nexport function expNumber (x) {\n  return Math.exp(x)\n}\nexpNumber.signature = n1\n\nexport function expm1Number (x) {\n  return expm1(x)\n}\nexpm1Number.signature = n1\n\nexport function fixNumber (x) {\n  return (x > 0) ? Math.floor(x) : Math.ceil(x)\n}\nfixNumber.signature = n1\n\nexport function floorNumber (x) {\n  return Math.floor(x)\n}\nfloorNumber.signature = n1\n\n/**\n * Calculate gcd for numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the greatest common denominator of a and b\n */\nexport function gcdNumber (a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function gcd must be integer numbers')\n  }\n\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  let r\n  while (b !== 0) {\n    r = a % b\n    a = b\n    b = r\n  }\n  return (a < 0) ? -a : a\n}\ngcdNumber.signature = n2\n\n/**\n * Calculate lcm for two numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the least common multiple of a and b\n */\nexport function lcmNumber (a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function lcm must be integer numbers')\n  }\n\n  if (a === 0 || b === 0) {\n    return 0\n  }\n\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  // evaluate lcm here inline to reduce overhead\n  let t\n  const prod = a * b\n  while (b !== 0) {\n    t = b\n    b = a % t\n    a = t\n  }\n  return Math.abs(prod / a)\n}\nlcmNumber.signature = n2\n\n/**\n * Calculate the logarithm of a value.\n * @param {number} x\n * @return {number}\n */\nexport function logNumber (x) {\n  return Math.log(x)\n}\nlogNumber.signature = n1\n\n/**\n * Calculate the 10-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\nexport function log10Number (x) {\n  return log10(x)\n}\nlog10Number.signature = n1\n\n/**\n * Calculate the 2-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\nexport function log2Number (x) {\n  return log2(x)\n}\nlog2Number.signature = n1\n\n/**\n * Calculate the natural logarithm of a `number+1`\n * @param {number} x\n * @returns {number}\n */\nexport function log1pNumber (x) {\n  return log1p(x)\n}\nlog1pNumber.signature = n1\n\n/**\n * Calculate the modulus of two numbers\n * @param {number} x\n * @param {number} y\n * @returns {number} res\n * @private\n */\nexport function modNumber (x, y) {\n  if (y > 0) {\n    // We don't use JavaScript's % operator here as this doesn't work\n    // correctly for x < 0 and x === 0\n    // see https://en.wikipedia.org/wiki/Modulo_operation\n    return x - y * Math.floor(x / y)\n  } else if (y === 0) {\n    return x\n  } else { // y < 0\n    // TODO: implement mod for a negative divisor\n    throw new Error('Cannot calculate mod for a negative divisor')\n  }\n}\nmodNumber.signature = n2\n\n/**\n * Calculate the nth root of a, solve x^root == a\n * http://rosettacode.org/wiki/Nth_root#JavaScript\n * @param {number} a\n * @param {number} root\n * @private\n */\nexport function nthRootNumber (a, root) {\n  const inv = root < 0\n  if (inv) {\n    root = -root\n  }\n\n  if (root === 0) {\n    throw new Error('Root must be non-zero')\n  }\n  if (a < 0 && (Math.abs(root) % 2 !== 1)) {\n    throw new Error('Root must be odd when a is negative.')\n  }\n\n  // edge cases zero and infinity\n  if (a === 0) {\n    return inv ? Infinity : 0\n  }\n  if (!isFinite(a)) {\n    return inv ? 0 : a\n  }\n\n  let x = Math.pow(Math.abs(a), 1 / root)\n  // If a < 0, we require that root is an odd integer,\n  // so (-1) ^ (1/root) = -1\n  x = a < 0 ? -x : x\n  return inv ? 1 / x : x\n\n  // Very nice algorithm, but fails with nthRoot(-2, 3).\n  // Newton's method has some well-known problems at times:\n  // https://en.wikipedia.org/wiki/Newton%27s_method#Failure_analysis\n  /*\n  let x = 1 // Initial guess\n  let xPrev = 1\n  let i = 0\n  const iMax = 10000\n  do {\n    const delta = (a / Math.pow(x, root - 1) - x) / root\n    xPrev = x\n    x = x + delta\n    i++\n  }\n  while (xPrev !== x && i < iMax)\n\n  if (xPrev !== x) {\n    throw new Error('Function nthRoot failed to converge')\n  }\n\n  return inv ? 1 / x : x\n  */\n}\nnthRootNumber.signature = n2\n\nexport function signNumber (x) {\n  return sign(x)\n}\nsignNumber.signature = n1\n\nexport function sqrtNumber (x) {\n  return Math.sqrt(x)\n}\nsqrtNumber.signature = n1\n\nexport function squareNumber (x) {\n  return x * x\n}\nsquareNumber.signature = n1\n\n/**\n * Calculate xgcd for two numbers\n * @param {number} a\n * @param {number} b\n * @return {number} result\n * @private\n */\nexport function xgcdNumber (a, b) {\n  // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n  let t // used to swap two variables\n  let q // quotient\n  let r // remainder\n  let x = 0\n  let lastx = 1\n  let y = 1\n  let lasty = 0\n\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function xgcd must be integer numbers')\n  }\n\n  while (b) {\n    q = Math.floor(a / b)\n    r = a - q * b\n\n    t = x\n    x = lastx - q * x\n    lastx = t\n\n    t = y\n    y = lasty - q * y\n    lasty = t\n\n    a = b\n    b = r\n  }\n\n  let res\n  if (a < 0) {\n    res = [-a, -lastx, -lasty]\n  } else {\n    res = [a, a ? lastx : 0, lasty]\n  }\n  return res\n}\nxgcdNumber.signature = n2\n\n/**\n * Calculates the power of x to y, x^y, for two numbers.\n * @param {number} x\n * @param {number} y\n * @return {number} res\n */\nexport function powNumber (x, y) {\n  // x^Infinity === 0 if -1 < x < 1\n  // A real number 0 is returned instead of complex(0)\n  if ((x * x < 1 && y === Infinity) ||\n    (x * x > 1 && y === -Infinity)) {\n    return 0\n  }\n\n  return Math.pow(x, y)\n}\npowNumber.signature = n2\n\n/**\n * round a number to the given number of decimals, or to zero if decimals is\n * not provided\n * @param {number} value\n * @param {number} decimals       number of decimals, between 0 and 15 (0 by default)\n * @return {number} roundedValue\n */\nexport function roundNumber (value, decimals = 0) {\n  return parseFloat(toFixed(value, decimals))\n}\nroundNumber.signature = n2\n\n/**\n * Calculate the norm of a number, the absolute value.\n * @param {number} x\n * @return {number}\n */\nexport function normNumber (x) {\n  return Math.abs(x)\n}\nnormNumber.signature = n1\n","import { isInteger } from '../../utils/number'\n\nconst n1 = 'number'\nconst n2 = 'number, number'\n\nexport function bitAndNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitAnd')\n  }\n\n  return x & y\n}\nbitAndNumber.signature = n2\n\nexport function bitNotNumber (x) {\n  if (!isInteger(x)) {\n    throw new Error('Integer expected in function bitNot')\n  }\n\n  return ~x\n}\nbitNotNumber.signature = n1\n\nexport function bitOrNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitOr')\n  }\n\n  return x | y\n}\nbitOrNumber.signature = n2\n\nexport function bitXorNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitXor')\n  }\n\n  return x ^ y\n}\nbitXorNumber.signature = n2\n\nexport function leftShiftNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function leftShift')\n  }\n\n  return x << y\n}\nleftShiftNumber.signature = n2\n\nexport function rightArithShiftNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function rightArithShift')\n  }\n\n  return x >> y\n}\nrightArithShiftNumber.signature = n2\n\nexport function rightLogShiftNumber (x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function rightLogShift')\n  }\n\n  return x >>> y\n}\nrightLogShiftNumber.signature = n2\n","const n1 = 'number'\nconst n2 = 'number, number'\n\nexport function notNumber (x) {\n  return !x\n}\nnotNumber.signature = n1\n\nexport function orNumber (x, y) {\n  return !!(x || y)\n}\norNumber.signature = n2\n\nexport function xorNumber (x, y) {\n  return !!x !== !!y\n}\nxorNumber.signature = n2\n\nexport function andNumber (x, y) {\n  return !!(x && y)\n}\nandNumber.signature = n2\n","import { deepMap } from '../../utils/collection'\nimport { sign } from '../../utils/number'\nimport { factory } from '../../utils/factory'\n\nconst name = 'erf'\nconst dependencies = [\n  'typed'\n]\n\nexport const createErf = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Compute the erf function of a value using a rational Chebyshev\n   * approximations for different intervals of x.\n   *\n   * This is a translation of W. J. Cody's Fortran implementation from 1987\n   * ( https://www.netlib.org/specfun/erf ). See the AMS publication\n   * \"Rational Chebyshev Approximations for the Error Function\" by W. J. Cody\n   * for an explanation of this process.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.erf(x)\n   *\n   * Examples:\n   *\n   *    math.erf(0.2)    // returns 0.22270258921047847\n   *    math.erf(-0.5)   // returns -0.5204998778130465\n   *    math.erf(4)      // returns 0.9999999845827421\n   *\n   * @param {number | Array | Matrix} x   A real number\n   * @return {number | Array | Matrix}    The erf of `x`\n   */\n  const erf = typed('name', {\n    'number': function (x) {\n      const y = Math.abs(x)\n\n      if (y >= MAX_NUM) {\n        return sign(x)\n      }\n      if (y <= THRESH) {\n        return sign(x) * erf1(y)\n      }\n      if (y <= 4.0) {\n        return sign(x) * (1 - erfc2(y))\n      }\n      return sign(x) * (1 - erfc3(y))\n    },\n\n    'Array | Matrix': function (n) {\n      return deepMap(n, erf)\n    }\n\n    // TODO: For complex numbers, use the approximation for the Faddeeva function\n    //  from \"More Efficient Computation of the Complex Error Function\" (AMS)\n\n  })\n\n  /**\n   * Approximates the error function erf() for x <= 0.46875 using this function:\n   *               n\n   * erf(x) = x * sum (p_j * x^(2j)) / (q_j * x^(2j))\n   *              j=0\n   */\n  function erf1 (y) {\n    const ysq = y * y\n    let xnum = P[0][4] * ysq\n    let xden = ysq\n    let i\n\n    for (i = 0; i < 3; i += 1) {\n      xnum = (xnum + P[0][i]) * ysq\n      xden = (xden + Q[0][i]) * ysq\n    }\n    return y * (xnum + P[0][3]) / (xden + Q[0][3])\n  }\n\n  /**\n   * Approximates the complement of the error function erfc() for\n   * 0.46875 <= x <= 4.0 using this function:\n   *                       n\n   * erfc(x) = e^(-x^2) * sum (p_j * x^j) / (q_j * x^j)\n   *                      j=0\n   */\n  function erfc2 (y) {\n    let xnum = P[1][8] * y\n    let xden = y\n    let i\n\n    for (i = 0; i < 7; i += 1) {\n      xnum = (xnum + P[1][i]) * y\n      xden = (xden + Q[1][i]) * y\n    }\n    const result = (xnum + P[1][7]) / (xden + Q[1][7])\n    const ysq = parseInt(y * 16) / 16\n    const del = (y - ysq) * (y + ysq)\n    return Math.exp(-ysq * ysq) * Math.exp(-del) * result\n  }\n\n  /**\n   * Approximates the complement of the error function erfc() for x > 4.0 using\n   * this function:\n   *\n   * erfc(x) = (e^(-x^2) / x) * [ 1/sqrt(pi) +\n   *               n\n   *    1/(x^2) * sum (p_j * x^(-2j)) / (q_j * x^(-2j)) ]\n   *              j=0\n   */\n  function erfc3 (y) {\n    let ysq = 1 / (y * y)\n    let xnum = P[2][5] * ysq\n    let xden = ysq\n    let i\n\n    for (i = 0; i < 4; i += 1) {\n      xnum = (xnum + P[2][i]) * ysq\n      xden = (xden + Q[2][i]) * ysq\n    }\n    let result = ysq * (xnum + P[2][4]) / (xden + Q[2][4])\n    result = (SQRPI - result) / y\n    ysq = parseInt(y * 16) / 16\n    const del = (y - ysq) * (y + ysq)\n    return Math.exp(-ysq * ysq) * Math.exp(-del) * result\n  }\n\n  return erf\n})\n\n/**\n * Upper bound for the first approximation interval, 0 <= x <= THRESH\n * @constant\n */\nconst THRESH = 0.46875\n\n/**\n * Constant used by W. J. Cody's Fortran77 implementation to denote sqrt(pi)\n * @constant\n */\nconst SQRPI = 5.6418958354775628695e-1\n\n/**\n * Coefficients for each term of the numerator sum (p_j) for each approximation\n * interval (see W. J. Cody's paper for more details)\n * @constant\n */\nconst P = [[\n  3.16112374387056560e00, 1.13864154151050156e02,\n  3.77485237685302021e02, 3.20937758913846947e03,\n  1.85777706184603153e-1\n], [\n  5.64188496988670089e-1, 8.88314979438837594e00,\n  6.61191906371416295e01, 2.98635138197400131e02,\n  8.81952221241769090e02, 1.71204761263407058e03,\n  2.05107837782607147e03, 1.23033935479799725e03,\n  2.15311535474403846e-8\n], [\n  3.05326634961232344e-1, 3.60344899949804439e-1,\n  1.25781726111229246e-1, 1.60837851487422766e-2,\n  6.58749161529837803e-4, 1.63153871373020978e-2\n]]\n\n/**\n * Coefficients for each term of the denominator sum (q_j) for each approximation\n * interval (see W. J. Cody's paper for more details)\n * @constant\n */\nconst Q = [[\n  2.36012909523441209e01, 2.44024637934444173e02,\n  1.28261652607737228e03, 2.84423683343917062e03\n], [\n  1.57449261107098347e01, 1.17693950891312499e02,\n  5.37181101862009858e02, 1.62138957456669019e03,\n  3.29079923573345963e03, 4.36261909014324716e03,\n  3.43936767414372164e03, 1.23033935480374942e03\n], [\n  2.56852019228982242e00, 1.87295284992346047e00,\n  5.27905102951428412e-1, 6.05183413124413191e-2,\n  2.33520497626869185e-3\n]]\n\n/**\n * Maximum/minimum safe numbers to input to erf() (in ES6+, this number is\n * Number.[MAX|MIN]_SAFE_INTEGER). erf() for all numbers beyond this limit will\n * return 1\n */\nconst MAX_NUM = Math.pow(2, 53)\n","import { acosh, asinh, atanh, cosh, sign, sinh, tanh } from '../../utils/number'\n\nconst n1 = 'number'\nconst n2 = 'number, number'\n\nexport function acosNumber (x) {\n  return Math.acos(x)\n}\nacosNumber.signature = n1\n\nexport function acoshNumber (x) {\n  return acosh(x)\n}\nacoshNumber.signature = n1\n\nexport function acotNumber (x) {\n  return Math.atan(1 / x)\n}\nacotNumber.signature = n1\n\nexport function acothNumber (x) {\n  return isFinite(x)\n    ? (Math.log((x + 1) / x) + Math.log(x / (x - 1))) / 2\n    : 0\n}\nacothNumber.signature = n1\n\nexport function acscNumber (x) {\n  return Math.asin(1 / x)\n}\nacscNumber.signature = n1\n\nexport function acschNumber (x) {\n  const xInv = 1 / x\n  return Math.log(xInv + Math.sqrt(xInv * xInv + 1))\n}\nacschNumber.signature = n1\n\nexport function asecNumber (x) {\n  return Math.acos(1 / x)\n}\nasecNumber.signature = n1\n\nexport function asechNumber (x) {\n  const xInv = 1 / x\n  const ret = Math.sqrt(xInv * xInv - 1)\n  return Math.log(ret + xInv)\n}\nasechNumber.signature = n1\n\nexport function asinNumber (x) {\n  return Math.asin(x)\n}\nasinNumber.signature = n1\n\nexport function asinhNumber (x) {\n  return asinh(x)\n}\nasinhNumber.signature = n1\n\nexport function atanNumber (x) {\n  return Math.atan(x)\n}\natanNumber.signature = n1\n\nexport function atan2Number (y, x) {\n  return Math.atan2(y, x)\n}\natan2Number.signature = n2\n\nexport function atanhNumber (x) {\n  return atanh(x)\n}\natanhNumber.signature = n1\n\nexport function cosNumber (x) {\n  return Math.cos(x)\n}\ncosNumber.signature = n1\n\nexport function coshNumber (x) {\n  return cosh(x)\n}\ncoshNumber.signature = n1\n\nexport function cotNumber (x) {\n  return 1 / Math.tan(x)\n}\ncotNumber.signature = n1\n\nexport function cothNumber (x) {\n  const e = Math.exp(2 * x)\n  return (e + 1) / (e - 1)\n}\ncothNumber.signature = n1\n\nexport function cscNumber (x) {\n  return 1 / Math.sin(x)\n}\ncscNumber.signature = n1\n\nexport function cschNumber (x) {\n  // consider values close to zero (+/-)\n  if (x === 0) {\n    return Number.POSITIVE_INFINITY\n  } else {\n    return Math.abs(2 / (Math.exp(x) - Math.exp(-x))) * sign(x)\n  }\n}\ncschNumber.signature = n1\n\nexport function secNumber (x) {\n  return 1 / Math.cos(x)\n}\nsecNumber.signature = n1\n\nexport function sechNumber (x) {\n  return 2 / (Math.exp(x) + Math.exp(-x))\n}\nsechNumber.signature = n1\n\nexport function sinNumber (x) {\n  return Math.sin(x)\n}\nsinNumber.signature = n1\n\nexport function sinhNumber (x) {\n  return sinh(x)\n}\nsinhNumber.signature = n1\n\nexport function tanNumber (x) {\n  return Math.tan(x)\n}\ntanNumber.signature = n1\n\nexport function tanhNumber (x) {\n  return tanh(x)\n}\ntanhNumber.signature = n1\n","/** @param {number} i\n *  @param {number} n\n *  @returns {number} product of i to n\n */\nexport function product (i, n) {\n  let half\n  if (n < i) {\n    return 1\n  }\n  if (n === i) {\n    return n\n  }\n  half = (n + i) >> 1 // divide (n + i) by 2 and truncate to integer\n  return product(i, half) * product(half + 1, n)\n}\n","import { isInteger } from '../../utils/number'\nimport { product } from '../../utils/product'\n\nexport function combinationsNumber (n, k) {\n  let prodrange, nMinusk\n\n  if (!isInteger(n) || n < 0) {\n    throw new TypeError('Positive integer value expected in function combinations')\n  }\n  if (!isInteger(k) || k < 0) {\n    throw new TypeError('Positive integer value expected in function combinations')\n  }\n  if (k > n) {\n    throw new TypeError('k must be less than or equal to n')\n  }\n\n  nMinusk = n - k\n\n  if (k < nMinusk) {\n    prodrange = product(nMinusk + 1, n)\n    return prodrange / product(1, k)\n  }\n  prodrange = product(k + 1, n)\n  return prodrange / product(1, nMinusk)\n}\ncombinationsNumber.signature = 'number, number'\n","/**\n * Log a console.warn message only once\n */\nexport const warnOnce = (() => {\n  const messages = {}\n\n  return function warnOnce (...args) {\n    const message = args.join(', ')\n\n    if (!messages[message]) {\n      messages[message] = true\n\n      console.warn('Warning:', ...args)\n    }\n  }\n})()\n","import { factory } from '../../utils/factory'\nimport { randomMatrix } from './util/randomMatrix'\nimport { createRng } from './util/seededRNG'\nimport { isMatrix } from '../../utils/is'\n\nconst name = 'randomInt'\nconst dependencies = ['typed', 'config', '?on']\n\nexport const createRandomInt = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, on }) => {\n  // seeded pseudo random number generator\n  let rng = createRng(config.randomSeed)\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = createRng(curr.randomSeed)\n      }\n    })\n  }\n\n  /**\n   * Return a random integer number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.randomInt()                // generate a random integer between 0 and 1\n   *     math.randomInt(max)             // generate a random integer between 0 and max\n   *     math.randomInt(min, max)        // generate a random integer between min and max\n   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1\n   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max\n   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max\n   *\n   * Examples:\n   *\n   *     math.randomInt(100)    // returns a random integer between 0 and 100\n   *     math.randomInt(30, 40) // returns a random integer between 30 and 40\n   *     math.randomInt([2, 3]) // returns a 2x3 matrix with random integers between 0 and 1\n   *\n   * See also:\n   *\n   *     random, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {number} [min]  Minimum boundary for the random value, included\n   * @param {number} [max]  Maximum boundary for the random value, excluded\n   * @return {number | Array | Matrix} A random integer value\n   */\n  return typed(name, {\n    '': () => _randomInt(0, 1),\n    'number': (max) => _randomInt(0, max),\n    'number, number': (min, max) => _randomInt(min, max),\n    'Array | Matrix': (size) => _randomIntMatrix(size, 0, 1),\n    'Array | Matrix, number': (size, max) => _randomIntMatrix(size, 0, max),\n    'Array | Matrix, number, number': (size, min, max) => _randomIntMatrix(size, min, max)\n  })\n\n  function _randomIntMatrix (size, min, max) {\n    const res = randomMatrix(size.valueOf(), () => _randomInt(min, max))\n    return isMatrix(size) ? size.create(res) : res\n  }\n\n  function _randomInt (min, max) {\n    return Math.floor(min + rng() * (max - min))\n  }\n})\n","import { factory } from '../../utils/factory'\nimport { addNumber } from '../../plain/number'\n\nconst name = 'addScalar'\nconst dependencies = ['typed']\n\nexport const createAddScalar = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Sum of `x` and `y`\n   * @private\n   */\n  const addScalar = typed(name, {\n\n    'number, number': addNumber,\n\n    'Complex, Complex': function (x, y) {\n      return x.add(y)\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.plus(y)\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.add(y)\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (x.value === null || x.value === undefined) throw new Error('Parameter x contains a unit with undefined value')\n      if (y.value === null || y.value === undefined) throw new Error('Parameter y contains a unit with undefined value')\n      if (!x.equalBase(y)) throw new Error('Units do not match')\n\n      const res = x.clone()\n      res.value = addScalar(res.value, y.value)\n      res.fixPrefix = false\n      return res\n    }\n  })\n\n  return addScalar\n})\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\n\nconst name = 'sqrt'\nconst dependencies = ['config', 'typed', 'Complex']\n\nexport const createSqrt = /* #__PURE__ */ factory(name, dependencies, ({ config, typed, Complex }) => {\n  /**\n   * Calculate the square root of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sqrt(x)\n   *\n   * Examples:\n   *\n   *    math.sqrt(25)                // returns 5\n   *    math.square(5)               // returns 25\n   *    math.sqrt(-4)                // returns Complex 2i\n   *\n   * See also:\n   *\n   *    square, multiply, cube, cbrt, sqrtm\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix | Unit} x\n   *            Value for which to calculate the square root.\n   * @return {number | BigNumber | Complex | Array | Matrix | Unit}\n   *            Returns the square root of `x`\n   */\n  const sqrt = typed('sqrt', {\n    'number': _sqrtNumber,\n\n    'Complex': function (x) {\n      return x.sqrt()\n    },\n\n    'BigNumber': function (x) {\n      if (!x.isNegative() || config.predictable) {\n        return x.sqrt()\n      } else {\n        // negative value -> downgrade to number to do complex value computation\n        return _sqrtNumber(x.toNumber())\n      }\n    },\n\n    'Array | Matrix': function (x) {\n      // deep map collection, skip zeros since sqrt(0) = 0\n      return deepMap(x, sqrt, true)\n    },\n\n    'Unit': function (x) {\n      // Someday will work for complex units when they are implemented\n      return x.pow(0.5)\n    }\n\n  })\n\n  /**\n   * Calculate sqrt for a number\n   * @param {number} x\n   * @returns {number | Complex} Returns the square root of x\n   * @private\n   */\n  function _sqrtNumber (x) {\n    if (isNaN(x)) {\n      return NaN\n    } else if (x >= 0 || config.predictable) {\n      return Math.sqrt(x)\n    } else {\n      return new Complex(x, 0).sqrt()\n    }\n  }\n\n  return sqrt\n})\n","import { factory } from '../../utils/factory'\nimport { deepMap } from '../../utils/collection'\nimport { acoshNumber } from '../../plain/number'\n\nconst name = 'acosh'\nconst dependencies = ['typed', 'config', 'Complex']\n\nexport const createAcosh = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, Complex }) => {\n  /**\n   * Calculate the hyperbolic arccos of a value,\n   * defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acosh(x)\n   *\n   * Examples:\n   *\n   *    math.acosh(1.5)       // returns 0.9624236501192069\n   *\n   * See also:\n   *\n   *    cosh, asinh, atanh\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccosine of x\n   */\n  const acosh = typed(name, {\n    'number': function (x) {\n      if (x >= 1 || config.predictable) {\n        return acoshNumber(x)\n      }\n      if (x <= -1) {\n        return new Complex(Math.log(Math.sqrt(x * x - 1) - x), Math.PI)\n      }\n      return new Complex(x, 0).acosh()\n    },\n\n    'Complex': function (x) {\n      return x.acosh()\n    },\n\n    'BigNumber': function (x) {\n      return x.acosh()\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, acosh)\n    }\n  })\n\n  return acosh\n})\n","import { isArray, isBigNumber, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is'\nimport { isInteger } from '../../utils/number'\nimport { format } from '../../utils/string'\nimport { clone, deepStrictEqual } from '../../utils/object'\nimport { arraySize, getArrayDataType, unsqueeze, validateIndex } from '../../utils/array'\nimport { factory } from '../../utils/factory'\nimport { DimensionError } from '../../error/DimensionError'\n\nconst name = 'SparseMatrix'\nconst dependencies = [\n  'typed',\n  'equalScalar',\n  'Matrix'\n]\n\nexport const createSparseMatrixClass = /* #__PURE__ */ factory(name, dependencies, ({ typed, equalScalar, Matrix }) => {\n  /**\n   * Sparse Matrix implementation. This type implements a Compressed Column Storage format\n   * for sparse matrices.\n   * @class SparseMatrix\n   */\n  function SparseMatrix (data, datatype) {\n    if (!(this instanceof SparseMatrix)) { throw new SyntaxError('Constructor must be called with the new operator') }\n    if (datatype && !isString(datatype)) { throw new Error('Invalid datatype: ' + datatype) }\n\n    if (isMatrix(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype)\n    } else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values\n      this._index = data.index\n      this._ptr = data.ptr\n      this._size = data.size\n      this._datatype = datatype || data.datatype\n    } else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data, datatype)\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')')\n    } else {\n      // nothing provided\n      this._values = []\n      this._index = []\n      this._ptr = [0]\n      this._size = [0, 0]\n      this._datatype = datatype\n    }\n  }\n\n  function _createFromMatrix (matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? clone(source._values) : undefined\n      matrix._index = clone(source._index)\n      matrix._ptr = clone(source._ptr)\n      matrix._size = clone(source._size)\n      matrix._datatype = datatype || source._datatype\n    } else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype)\n    }\n  }\n\n  function _createFromArray (matrix, data, datatype) {\n    // initialize fields\n    matrix._values = []\n    matrix._index = []\n    matrix._ptr = []\n    matrix._datatype = datatype\n    // discover rows & columns, do not use math.size() to avoid looping array twice\n    const rows = data.length\n    let columns = 0\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype)\n    }\n\n    // check we have rows (empty array)\n    if (rows > 0) {\n      // column index\n      let j = 0\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length)\n        // loop rows\n        for (let i = 0; i < rows; i++) {\n          // current row\n          const row = data[i]\n          // check row is an array\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length) { columns = row.length }\n            // check row has column\n            if (j < row.length) {\n              // value\n              const v = row[j]\n              // check value != 0\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v)\n                // index\n                matrix._index.push(i)\n              }\n            }\n          } else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1) { columns = 1 }\n            // check value != 0 (row is a scalar)\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row)\n              // index\n              matrix._index.push(i)\n            }\n          }\n        }\n        // increment index\n        j++\n      }\n      while (j < columns)\n    }\n    // store number of values in ptr\n    matrix._ptr.push(matrix._index.length)\n    // size\n    matrix._size = [rows, columns]\n  }\n\n  SparseMatrix.prototype = new Matrix()\n\n  /**\n   * Create a new SparseMatrix\n   */\n  SparseMatrix.prototype.createSparseMatrix = function (data, datatype) {\n    return new SparseMatrix(data, datatype)\n  }\n\n  /**\n   * Attach type information\n   */\n  SparseMatrix.prototype.type = 'SparseMatrix'\n  SparseMatrix.prototype.isSparseMatrix = true\n\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf SparseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n  SparseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._values, typeOf)\n  }\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse'\n  }\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype\n  }\n\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype)\n  }\n\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     const density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n    // calculate density\n    return rows !== 0 && columns !== 0 ? (this._index.length / (rows * columns)) : 0\n  }\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) { // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke subset on a Pattern only matrix') }\n\n    // check arguments\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index)\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue)\n\n      default:\n        throw new SyntaxError('Wrong number of arguments')\n    }\n  }\n\n  function _getsubset (matrix, idx) {\n    // check idx\n    if (!isIndex(idx)) {\n      throw new TypeError('Invalid index')\n    }\n\n    const isScalar = idx.isScalar()\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min())\n    }\n    // validate dimensions\n    const size = idx.size()\n    if (size.length !== matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length)\n    }\n\n    // vars\n    let i, ii, k, kk\n\n    // validate if any of the ranges in the index is out of range\n    const min = idx.min()\n    const max = idx.max()\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i])\n      validateIndex(max[i], matrix._size[i])\n    }\n\n    // matrix arrays\n    const mvalues = matrix._values\n    const mindex = matrix._index\n    const mptr = matrix._ptr\n\n    // rows & columns dimensions for result matrix\n    const rows = idx.dimension(0)\n    const columns = idx.dimension(1)\n\n    // workspace & permutation vector\n    const w = []\n    const pv = []\n\n    // loop rows in resulting matrix\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0]\n      // mark i in workspace\n      w[i] = true\n    })\n\n    // result matrix arrays\n    const values = mvalues ? [] : undefined\n    const index = []\n    const ptr = []\n\n    // loop columns in result matrix\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length)\n      // loop values in column j\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k]\n        // check row is in result matrix\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i])\n          // check we need to process values\n          if (values) { values.push(mvalues[k]) }\n        }\n      }\n    })\n    // update ptr\n    ptr.push(index.length)\n\n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: size,\n      datatype: matrix._datatype\n    })\n  }\n\n  function _setsubset (matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index')\n    }\n\n    // get index size and check whether the index contains a single value\n    const iSize = index.size()\n    const isScalar = index.isScalar()\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    let sSize\n    if (isMatrix(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size()\n      // use array representation\n      submatrix = submatrix.toArray()\n    } else {\n      // get submatrix size (array, scalar)\n      sSize = arraySize(submatrix)\n    }\n\n    // check index is a scalar\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected')\n      }\n      // set value\n      matrix.set(index.min(), submatrix, defaultValue)\n    } else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<')\n      }\n\n      // check submatrix and index have the same dimensions\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        let i = 0\n        let outer = 0\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++\n        }\n        while (iSize[i] === 1) {\n          outer++\n          i++\n        }\n        // unsqueeze both outer and inner dimensions\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize)\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>')\n      }\n\n      // offsets\n      const x0 = index.min()[0]\n      const y0 = index.min()[1]\n\n      // submatrix rows and columns\n      const m = sSize[0]\n      const n = sSize[1]\n\n      // loop submatrix\n      for (let x = 0; x < m; x++) {\n        // loop columns\n        for (let y = 0; y < n; y++) {\n          // value at i, j\n          const v = submatrix[x][y]\n          // invoke set (zero value will remove entry from matrix)\n          matrix.set([x + x0, y + y0], v, defaultValue)\n        }\n      }\n    }\n    return matrix\n  }\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  SparseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) { throw new TypeError('Array expected') }\n    if (index.length !== this._size.length) { throw new DimensionError(index.length, this._size.length) }\n\n    // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke get on a Pattern only matrix') }\n\n    // row and column\n    const i = index[0]\n    const j = index[1]\n\n    // check i, j are valid\n    validateIndex(i, this._size[0])\n    validateIndex(j, this._size[1])\n\n    // find value index\n    const k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index)\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) { return this._values[k] }\n\n    return 0\n  }\n\n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} v\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index)) { throw new TypeError('Array expected') }\n    if (index.length !== this._size.length) { throw new DimensionError(index.length, this._size.length) }\n\n    // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke set on a Pattern only matrix') }\n\n    // row and column\n    const i = index[0]\n    const j = index[1]\n\n    // rows & columns\n    let rows = this._size[0]\n    let columns = this._size[1]\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, this._datatype)\n    }\n\n    // check we need to resize matrix\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue)\n      // update rows & columns\n      rows = this._size[0]\n      columns = this._size[1]\n    }\n\n    // check i, j are valid\n    validateIndex(i, rows)\n    validateIndex(j, columns)\n\n    // find value index\n    const k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index)\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v\n      } else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr)\n      }\n    } else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr)\n    }\n\n    return this\n  }\n\n  function _getValueIndex (i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0) { return bottom }\n    // loop rows [top, bottom[\n    for (let r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i) { return r }\n    }\n    // we did not find row\n    return top\n  }\n\n  function _remove (k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1)\n    index.splice(k, 1)\n    // update pointers\n    for (let x = j + 1; x < ptr.length; x++) { ptr[x]-- }\n  }\n\n  function _insert (k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v)\n    // update row for k\n    index.splice(k, 0, i)\n    // update column pointers\n    for (let x = j + 1; x < ptr.length; x++) { ptr[x]++ }\n  }\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isArray(size)) { throw new TypeError('Array expected') }\n    if (size.length !== 2) { throw new Error('Only two dimensions matrix are supported') }\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + format(size) + ')')\n      }\n    })\n\n    // matrix to resize\n    const m = copy ? this.clone() : this\n    // resize matrix\n    return _resize(m, size[0], size[1], defaultValue)\n  }\n\n  function _resize (matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    let value = defaultValue || 0\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype)\n      // convert value to the same datatype\n      value = typed.convert(value, matrix._datatype)\n    }\n\n    // should we insert the value?\n    const ins = !eq(value, zero)\n\n    // old columns and rows\n    const r = matrix._size[0]\n    let c = matrix._size[1]\n\n    let i, j, k\n\n    // check we need to increase columns\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length\n        // check we need to insert matrix._values\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value)\n            // update matrix._index\n            matrix._index.push(i)\n          }\n        }\n      }\n      // store number of matrix._values in matrix._ptr\n      matrix._ptr[columns] = matrix._values.length\n    } else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns)\n      // truncate matrix._values and matrix._index\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length)\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length)\n    }\n    // update columns\n    c = columns\n\n    // check we need to increase rows\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        let n = 0\n        // loop columns\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n\n          // where to insert matrix._values\n          k = matrix._ptr[j + 1] + n\n          // pointer\n          let p = 0\n          // loop new rows, initialize pointer\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value)\n            // update matrix._index\n            matrix._index.splice(k + p, 0, i)\n            // increment inserts\n            n++\n          }\n        }\n        // store number of matrix._values in matrix._ptr\n        matrix._ptr[c] = matrix._values.length\n      }\n    } else if (rows < r) {\n      // deletes\n      let d = 0\n      // loop columns\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d\n        // where matrix._values start for next column\n        const k0 = matrix._ptr[j]\n        const k1 = matrix._ptr[j + 1] - d\n        // loop matrix._index\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k]\n          // check we need to delete value and matrix._index\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1)\n            // remove item from matrix._index\n            matrix._index.splice(k, 1)\n            // increase deletes\n            d++\n          }\n        }\n      }\n      // update matrix._ptr for current column\n      matrix._ptr[j] = matrix._values.length\n    }\n    // update matrix._size\n    matrix._size[0] = rows\n    matrix._size[1] = columns\n    // return matrix\n    return matrix\n  }\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  SparseMatrix.prototype.reshape = function (size, copy) {\n    // validate arguments\n    if (!isArray(size)) { throw new TypeError('Array expected') }\n    if (size.length !== 2) { throw new Error('Sparse matrices can only be reshaped in two dimensions') }\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + format(size) + ')')\n      }\n    })\n\n    // m * n must not change\n    if (this._size[0] * this._size[1] !== size[0] * size[1]) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements')\n    }\n\n    // matrix to reshape\n    const m = copy ? this.clone() : this\n\n    // return unchanged if the same shape\n    if (this._size[0] === size[0] && this._size[1] === size[1]) {\n      return m\n    }\n\n    // Convert to COO format (generate a column index)\n    const colIndex = []\n    for (let i = 0; i < m._ptr.length; i++) {\n      for (let j = 0; j < m._ptr[i + 1] - m._ptr[i]; j++) {\n        colIndex.push(i)\n      }\n    }\n\n    // Clone the values array\n    const values = m._values.slice()\n\n    // Clone the row index array\n    const rowIndex = m._index.slice()\n\n    // Transform the (row, column) indices\n    for (let i = 0; i < m._index.length; i++) {\n      const r1 = rowIndex[i]\n      const c1 = colIndex[i]\n      const flat = r1 * m._size[1] + c1\n      colIndex[i] = flat % size[1]\n      rowIndex[i] = Math.floor(flat / size[1])\n    }\n\n    // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n\n    // OR, we could easily just:\n\n    // 1. Remove all values from the matrix\n    m._values.length = 0\n    m._index.length = 0\n    m._ptr.length = size[1] + 1\n    m._size = size.slice()\n    for (let i = 0; i < m._ptr.length; i++) {\n      m._ptr[i] = 0\n    }\n\n    // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n    for (let h = 0; h < values.length; h++) {\n      const i = rowIndex[h]\n      const j = colIndex[h]\n      const v = values[h]\n      const k = _getValueIndex(i, m._ptr[j], m._ptr[j + 1], m._index)\n      _insert(k, i, j, v, m._values, m._index, m._ptr)\n    }\n\n    // The value indices are inserted out of order, but apparently that's... still OK?\n\n    return m\n  }\n\n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n  SparseMatrix.prototype.clone = function () {\n    const m = new SparseMatrix({\n      values: this._values ? clone(this._values) : undefined,\n      index: clone(this._index),\n      ptr: clone(this._ptr),\n      size: clone(this._size),\n      datatype: this._datatype\n    })\n    return m\n  }\n\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n  SparseMatrix.prototype.size = function () {\n    return this._size.slice(0) // copy the Array\n  }\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke map on a Pattern only matrix') }\n    // matrix instance\n    const me = this\n    // rows and columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n    // invoke callback\n    const invoke = function (v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me)\n    }\n    // invoke _map\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros)\n  }\n\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n  function _map (matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    const values = []\n    const index = []\n    const ptr = []\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype)\n    }\n\n    // invoke callback\n    const invoke = function (v, x, y) {\n      // invoke callback\n      v = callback(v, x, y)\n      // check value != 0\n      if (!eq(v, zero)) {\n        // store value\n        values.push(v)\n        // index\n        index.push(x)\n      }\n    }\n    // loop columns\n    for (let j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length)\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = matrix._ptr[j]\n      const k1 = matrix._ptr[j + 1]\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (let k = k0; k < k1; k++) {\n          // row index\n          const i = matrix._index[k]\n          // check i is in range\n          if (i >= minRow && i <= maxRow) {\n            // value @ k\n            invoke(matrix._values[k], i - minRow, j - minColumn)\n          }\n        }\n      } else {\n        // create a cache holding all defined values\n        const values = {}\n        for (let k = k0; k < k1; k++) {\n          const i = matrix._index[k]\n          values[i] = matrix._values[k]\n        }\n\n        // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n        for (let i = minRow; i <= maxRow; i++) {\n          const value = (i in values) ? values[i] : 0\n          invoke(value, i - minRow, j - minColumn)\n        }\n      }\n    }\n\n    // store number of values in ptr\n    ptr.push(values.length)\n    // return sparse matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    })\n  }\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) { throw new Error('Cannot invoke forEach on a Pattern only matrix') }\n    // matrix instance\n    const me = this\n    // rows and columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = this._ptr[j]\n      const k1 = this._ptr[j + 1]\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (let k = k0; k < k1; k++) {\n          // row index\n          const i = this._index[k]\n\n          // value @ k\n          callback(this._values[k], [i, j], me)\n        }\n      } else {\n        // create a cache holding all defined values\n        const values = {}\n        for (let k = k0; k < k1; k++) {\n          const i = this._index[k]\n          values[i] = this._values[k]\n        }\n\n        // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n        for (let i = 0; i < rows; i++) {\n          const value = (i in values) ? values[i] : 0\n          callback(value, [i, j], me)\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true)\n  }\n\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false)\n  }\n\n  function _toArray (values, index, ptr, size, copy) {\n    // rows and columns\n    const rows = size[0]\n    const columns = size[1]\n    // result\n    const a = []\n    // vars\n    let i, j\n    // initialize array\n    for (i = 0; i < rows; i++) {\n      a[i] = []\n      for (j = 0; j < columns; j++) { a[i][j] = 0 }\n    }\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = ptr[j]\n      const k1 = ptr[j + 1]\n      // loop k within [k0, k1[\n      for (let k = k0; k < k1; k++) {\n        // row index\n        i = index[k]\n        // set value (use one for pattern matrix)\n        a[i][j] = values ? (copy ? clone(values[k]) : values[k]) : 1\n      }\n    }\n    return a\n  }\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n    // density\n    const density = this.density()\n    // rows & columns\n    let str = 'Sparse Matrix [' + format(rows, options) + ' x ' + format(columns, options) + '] density: ' + format(density, options) + '\\n'\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = this._ptr[j]\n      const k1 = this._ptr[j + 1]\n      // loop k within [k0, k1[\n      for (let k = k0; k < k1; k++) {\n        // row index\n        const i = this._index[k]\n        // append value\n        str += '\\n    (' + format(i, options) + ', ' + format(j, options) + ') ==> ' + (this._values ? format(this._values[k], options) : 'X')\n      }\n    }\n    return str\n  }\n\n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.toString = function () {\n    return format(this.toArray())\n  }\n\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    }\n  }\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n  SparseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) { k = k.toNumber() }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number')\n      }\n    } else {\n      // default value\n      k = 0\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // rows & columns\n    const rows = this._size[0]\n    const columns = this._size[1]\n\n    // number diagonal values\n    const n = Math.min(rows - kSub, columns - kSuper)\n\n    // diagonal arrays\n    const values = []\n    const index = []\n    const ptr = []\n    // initial ptr value\n    ptr[0] = 0\n    // loop columns\n    for (let j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = this._ptr[j]\n      const k1 = this._ptr[j + 1]\n      // loop x within [k0, k1[\n      for (let x = k0; x < k1; x++) {\n        // row index\n        const i = this._index[x]\n        // check row\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x])\n          // store row\n          index[values.length - 1] = i - kSub\n          // exit loop\n          break\n        }\n      }\n    }\n    // close ptr\n    ptr.push(values.length)\n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [n, 1]\n    })\n  }\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json)\n  }\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]            The default value for non-diagonal\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size)) { throw new TypeError('Array expected, size parameter') }\n    if (size.length !== 2) { throw new Error('Only two dimensions matrix are supported') }\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber()\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers')\n      }\n      return s\n    })\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) { k = k.toNumber() }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number')\n      }\n    } else {\n      // default value\n      k = 0\n    }\n\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype)\n    }\n\n    const kSuper = k > 0 ? k : 0\n    const kSub = k < 0 ? -k : 0\n\n    // rows and columns\n    const rows = size[0]\n    const columns = size[1]\n\n    // number of non-zero items\n    const n = Math.min(rows - kSub, columns - kSuper)\n\n    // value extraction function\n    let _value\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length')\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i]\n      }\n    } else if (isMatrix(value)) {\n      // matrix size\n      const ms = value.size()\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length')\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i])\n      }\n    } else {\n      // define function\n      _value = function () {\n        // return value\n        return value\n      }\n    }\n\n    // create arrays\n    const values = []\n    const index = []\n    const ptr = []\n\n    // loop items\n    for (let j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length)\n      // diagonal index\n      const i = j - kSuper\n      // check we need to set diagonal value\n      if (i >= 0 && i < n) {\n        // get value @ i\n        const v = _value(i)\n        // check for zero\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub)\n          // add value\n          values.push(v)\n        }\n      }\n    }\n    // last value should be number of values\n    ptr.push(values.length)\n    // create SparseMatrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    })\n  }\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers')\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported')\n    }\n    // validate index\n    validateIndex(i, this._size[0])\n    validateIndex(j, this._size[0])\n\n    // swap rows\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr)\n    // return current instance\n    return this\n  }\n\n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    const k0 = ptr[j]\n    const k1 = ptr[j + 1]\n    // loop\n    for (let k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k])\n    }\n  }\n\n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      const k0 = ptr[j]\n      const k1 = ptr[j + 1]\n      // find value index @ x\n      const kx = _getValueIndex(x, k0, k1, index)\n      // find value index @ x\n      const ky = _getValueIndex(y, k0, k1, index)\n      // check both rows exist in matrix\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          const v = values[kx]\n          values[kx] = values[ky]\n          values[ky] = v\n        }\n        // next column\n        continue\n      }\n      // check x row exist & no y row\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        const vx = values ? values[kx] : undefined\n        // insert value @ y\n        index.splice(ky, 0, y)\n        if (values) { values.splice(ky, 0, vx) }\n        // remove value @ x (adjust array index if needed)\n        index.splice(ky <= kx ? kx + 1 : kx, 1)\n        if (values) { values.splice(ky <= kx ? kx + 1 : kx, 1) }\n        // next column\n        continue\n      }\n      // check y row exist & no x row\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        const vy = values ? values[ky] : undefined\n        // insert value @ x\n        index.splice(kx, 0, x)\n        if (values) { values.splice(kx, 0, vy) }\n        // remove value @ y (adjust array index if needed)\n        index.splice(kx <= ky ? ky + 1 : ky, 1)\n        if (values) { values.splice(kx <= ky ? ky + 1 : ky, 1) }\n      }\n    }\n  }\n\n  return SparseMatrix\n}, { isClass: true })\n","import { factory } from '../../../utils/factory'\n\nconst name = 'matrix'\nconst dependencies = [ 'typed', 'Matrix', 'DenseMatrix', 'SparseMatrix' ]\n\nexport const createMatrix = /* #__PURE__ */ factory(name, dependencies, ({ typed, Matrix, DenseMatrix, SparseMatrix }) => {\n  /**\n   * Create a Matrix. The function creates a new `math.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    let m = math.matrix([[1, 2], [3, 4]])\n   *    m.size()                        // Array [2, 2]\n   *    m.resize([3, 2], 5)\n   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format\n   *\n   * @return {Matrix} The created matrix\n   */\n  return typed(name, {\n    '': function () {\n      return _create([])\n    },\n\n    'string': function (format) {\n      return _create([], format)\n    },\n\n    'string, string': function (format, datatype) {\n      return _create([], format, datatype)\n    },\n\n    'Array': function (data) {\n      return _create(data)\n    },\n\n    'Matrix': function (data) {\n      return _create(data, data.storage())\n    },\n\n    'Array | Matrix, string': _create,\n\n    'Array | Matrix, string, string': _create\n  })\n\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n  function _create (data, format, datatype) {\n    // get storage format constructor\n    if (format === 'dense' || format === 'default' || format === undefined) {\n      return new DenseMatrix(data, datatype)\n    }\n\n    if (format === 'sparse') {\n      return new SparseMatrix(data, datatype)\n    }\n\n    throw new TypeError('Unknown matrix type ' + JSON.stringify(format) + '.')\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm01'\nconst dependencies = ['typed']\n\nexport const createAlgorithm01 = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm1 (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    const adata = denseMatrix._data\n    const asize = denseMatrix._size\n    const adt = denseMatrix._datatype\n    // sparse matrix arrays\n    const bvalues = sparseMatrix._values\n    const bindex = sparseMatrix._index\n    const bptr = sparseMatrix._ptr\n    const bsize = sparseMatrix._size\n    const bdt = sparseMatrix._datatype\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues) { throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // process data types\n    const dt = typeof adt === 'string' && adt === bdt ? adt : undefined\n    // callback function\n    const cf = dt ? typed.find(callback, [dt, dt]) : callback\n\n    // vars\n    let i, j\n\n    // result (DenseMatrix)\n    const cdata = []\n    // initialize c\n    for (i = 0; i < rows; i++) { cdata[i] = [] }\n\n    // workspace\n    const x = []\n    // marks indicating we have a value in x for a given column\n    const w = []\n\n    // loop columns in b\n    for (j = 0; j < columns; j++) {\n      // column mark\n      const mark = j + 1\n      // values in column j\n      for (let k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k])\n        // mark i as updated\n        w[i] = mark\n      }\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i]\n        } else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j]\n        }\n      }\n    }\n\n    // return dense matrix\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    })\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm04'\nconst dependencies = ['typed', 'equalScalar']\n\nexport const createAlgorithm04 = /* #__PURE__ */ factory(name, dependencies, ({ typed, equalScalar }) => {\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0\n   *          └  B(i,j)       ; B(i,j) !== 0\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm04 (a, b, callback) {\n    // sparse matrix arrays\n    const avalues = a._values\n    const aindex = a._index\n    const aptr = a._ptr\n    const asize = a._size\n    const adt = a._datatype\n    // sparse matrix arrays\n    const bvalues = b._values\n    const bindex = b._index\n    const bptr = b._ptr\n    const bsize = b._size\n    const bdt = b._datatype\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // equal signature to use\n    let eq = equalScalar\n    // zero value\n    let zero = 0\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt])\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // result arrays\n    const cvalues = avalues && bvalues ? [] : undefined\n    const cindex = []\n    const cptr = []\n    // matrix\n    const c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    })\n\n    // workspace\n    const xa = avalues && bvalues ? [] : undefined\n    const xb = avalues && bvalues ? [] : undefined\n    // marks indicating we have a value in x for a given column\n    const wa = []\n    const wb = []\n\n    // vars\n    let i, j, k, k0, k1\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length\n      // columns mark\n      const mark = j + 1\n      // loop A(:,j)\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k]\n        // update c\n        cindex.push(i)\n        // update workspace\n        wa[i] = mark\n        // check we need to process values\n        if (xa) { xa[i] = avalues[k] }\n      }\n      // loop B(:,j)\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]\n        // check row exists in A\n        if (wa[i] === mark) {\n          // update record in xa @ i\n          if (xa) {\n            // invoke callback\n            const v = cf(xa[i], bvalues[k])\n            // check for zero\n            if (!eq(v, zero)) {\n              // update workspace\n              xa[i] = v\n            } else {\n              // remove mark (index will be removed later)\n              wa[i] = null\n            }\n          }\n        } else {\n          // update c\n          cindex.push(i)\n          // update workspace\n          wb[i] = mark\n          // check we need to process values\n          if (xb) { xb[i] = bvalues[k] }\n        }\n      }\n      // check we need to process values (non pattern matrix)\n      if (xa && xb) {\n        // initialize first index in j\n        k = cptr[j]\n        // loop index in j\n        while (k < cindex.length) {\n          // row\n          i = cindex[k]\n          // check workspace has value @ i\n          if (wa[i] === mark) {\n            // push value (Aij != 0 || (Aij != 0 && Bij != 0))\n            cvalues[k] = xa[i]\n            // increment pointer\n            k++\n          } else if (wb[i] === mark) {\n            // push value (bij != 0)\n            cvalues[k] = xb[i]\n            // increment pointer\n            k++\n          } else {\n            // remove index @ k\n            cindex.splice(k, 1)\n          }\n        }\n      }\n    }\n    // update cptr\n    cptr[columns] = cindex.length\n\n    // return sparse matrix\n    return c\n  }\n})\n","import { factory } from '../../../utils/factory'\n\nconst name = 'algorithm10'\nconst dependencies = ['typed', 'DenseMatrix']\n\nexport const createAlgorithm10 = /* #__PURE__ */ factory(name, dependencies, ({ typed, DenseMatrix }) => {\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm10 (s, b, callback, inverse) {\n    // sparse matrix arrays\n    const avalues = s._values\n    const aindex = s._index\n    const aptr = s._ptr\n    const asize = s._size\n    const adt = s._datatype\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues) { throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value') }\n\n    // rows & columns\n    const rows = asize[0]\n    const columns = asize[1]\n\n    // datatype\n    let dt\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // convert b to the same datatype\n      b = typed.convert(b, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // result arrays\n    const cdata = []\n    // matrix\n    const c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    })\n\n    // workspaces\n    const x = []\n    // marks indicating we have a value in x for a given column\n    const w = []\n\n    // loop columns\n    for (let j = 0; j < columns; j++) {\n      // columns mark\n      const mark = j + 1\n      // values in j\n      for (let k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        const r = aindex[k]\n        // update workspace\n        x[r] = avalues[k]\n        w[r] = mark\n      }\n      // loop rows\n      for (let i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = []\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b)\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { DimensionError } from '../../../error/DimensionError'\n\nconst name = 'algorithm13'\nconst dependencies = ['typed']\n\nexport const createAlgorithm13 = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n  return function algorithm13 (a, b, callback) {\n    // a arrays\n    const adata = a._data\n    const asize = a._size\n    const adt = a._datatype\n    // b arrays\n    const bdata = b._data\n    const bsize = b._size\n    const bdt = b._datatype\n    // c arrays\n    const csize = []\n\n    // validate dimensions\n    if (asize.length !== bsize.length) { throw new DimensionError(asize.length, bsize.length) }\n\n    // validate each one of the dimension sizes\n    for (let s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s]) { throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')') }\n      // update dimension in c\n      csize[s] = asize[s]\n    }\n\n    // datatype\n    let dt\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // populate cdata, iterate through dimensions\n    const cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : []\n\n    // c matrix\n    return a.createDenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    })\n  }\n\n  // recursive function\n  function _iterate (f, level, s, n, av, bv) {\n    // initialize array for this level\n    const cv = []\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (let i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i])\n      }\n    } else {\n      // iterate current level\n      for (let j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j])\n      }\n    }\n    return cv\n  }\n})\n","import { factory } from '../../../utils/factory'\nimport { clone } from '../../../utils/object'\n\nconst name = 'algorithm14'\nconst dependencies = ['typed']\n\nexport const createAlgorithm14 = /* #__PURE__ */ factory(name, dependencies, ({ typed }) => {\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n  return function algorithm14 (a, b, callback, inverse) {\n    // a arrays\n    const adata = a._data\n    const asize = a._size\n    const adt = a._datatype\n\n    // datatype\n    let dt\n    // callback signature to use\n    let cf = callback\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt\n      // convert b to the same datatype\n      b = typed.convert(b, dt)\n      // callback\n      cf = typed.find(callback, [dt, dt])\n    }\n\n    // populate cdata, iterate through dimensions\n    const cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : []\n\n    // c matrix\n    return a.createDenseMatrix({\n      data: cdata,\n      size: clone(asize),\n      datatype: dt\n    })\n  }\n\n  // recursive function\n  function _iterate (f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    const cv = []\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (let i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv)\n      }\n    } else {\n      // iterate current level\n      for (let j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse)\n      }\n    }\n    return cv\n  }\n})\n","import { factory } from '../../utils/factory'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\n\nconst name = 'unequal'\nconst dependencies = [\n  'typed',\n  'config',\n  'equalScalar',\n  'matrix',\n  'DenseMatrix'\n]\n\nexport const createUnequal = /* #__PURE__ */ factory(name, dependencies, ({ typed, config, equalScalar, matrix, DenseMatrix }) => {\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm07 = createAlgorithm07({ typed, DenseMatrix })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Test whether two values are unequal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * larger than the configured epsilon. The function cannot be used to compare\n   * values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.\n   * Strings are compared by their numerical value.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is unequal\n   * with everything except `null`, and `undefined` is unequal with everything\n   * except `undefined`.\n   *\n   * Syntax:\n   *\n   *    math.unequal(x, y)\n   *\n   * Examples:\n   *\n   *    math.unequal(2 + 2, 3)       // returns true\n   *    math.unequal(2 + 2, 4)       // returns false\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.unequal(a, b)           // returns false\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.unequal(c, d)           // returns [false, true, false]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.unequal(0, null)        // returns true\n   * See also:\n   *\n   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false\n   */\n  const unequal = typed('unequal', {\n\n    'any, any': function (x, y) {\n      // strict equality for null and undefined?\n      if (x === null) { return y !== null }\n      if (y === null) { return x !== null }\n      if (x === undefined) { return y !== undefined }\n      if (y === undefined) { return x !== undefined }\n\n      return _unequal(x, y)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm07(x, y, _unequal)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm03(y, x, _unequal, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm03(x, y, _unequal, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, _unequal)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return unequal(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return unequal(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return unequal(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm12(x, y, _unequal, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, _unequal, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm12(y, x, _unequal, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, _unequal, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _unequal, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _unequal, true).valueOf()\n    }\n  })\n\n  function _unequal (x, y) {\n    return !equalScalar(x, y)\n  }\n\n  return unequal\n})\n\nexport const createUnequalNumber = factory(name, ['typed', 'equalScalar'], ({ typed, equalScalar }) => {\n  return typed(name, {\n    'any, any': function (x, y) {\n      // strict equality for null and undefined?\n      if (x === null) { return y !== null }\n      if (y === null) { return x !== null }\n      if (x === undefined) { return y !== undefined }\n      if (y === undefined) { return x !== undefined }\n\n      return !equalScalar(x, y)\n    }\n  })\n})\n","import { deepForEach, reduce, containsCollections } from '../../utils/collection'\nimport { factory } from '../../utils/factory'\nimport { improveErrorMessage } from './utils/improveErrorMessage'\n\nconst name = 'max'\nconst dependencies = ['typed', 'larger']\n\nexport const createMax = /* #__PURE__ */ factory(name, dependencies, ({ typed, larger }) => {\n  /**\n   * Compute the maximum value of a matrix or a  list with values.\n   * In case of a multi dimensional array, the maximum of the flattened array\n   * will be calculated. When `dim` is provided, the maximum over the selected\n   * dimension will be calculated. Parameter `dim` is zero-based.\n   *\n   * Syntax:\n   *\n   *     math.max(a, b, c, ...)\n   *     math.max(A)\n   *     math.max(A, dim)\n   *\n   * Examples:\n   *\n   *     math.max(2, 1, 4, 3)                  // returns 4\n   *     math.max([2, 1, 4, 3])                // returns 4\n   *\n   *     // maximum over a specified dimension (zero-based)\n   *     math.max([[2, 5], [4, 3], [1, 7]], 0) // returns [4, 7]\n   *     math.max([[2, 5], [4, 3]], [1, 7], 1) // returns [5, 4, 7]\n   *\n   *     math.max(2.7, 7.1, -4.5, 2.0, 4.1)    // returns 7.1\n   *     math.min(2.7, 7.1, -4.5, 2.0, 4.1)    // returns -4.5\n   *\n   * See also:\n   *\n   *    mean, median, min, prod, std, sum, variance\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The maximum value\n   */\n  return typed(name, {\n    // max([a, b, c, d, ...])\n    'Array | Matrix': _max,\n\n    // max([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': function (array, dim) {\n      return reduce(array, dim.valueOf(), _largest)\n    },\n\n    // max(a, b, c, d, ...)\n    '...': function (args) {\n      if (containsCollections(args)) {\n        throw new TypeError('Scalar values expected in function max')\n      }\n\n      return _max(args)\n    }\n  })\n\n  /**\n   * Return the largest of two values\n   * @param {*} x\n   * @param {*} y\n   * @returns {*} Returns x when x is largest, or y when y is largest\n   * @private\n   */\n  function _largest (x, y) {\n    try {\n      return larger(x, y) ? x : y\n    } catch (err) {\n      throw improveErrorMessage(err, 'max', y)\n    }\n  }\n\n  /**\n   * Recursively calculate the maximum value in an n-dimensional array\n   * @param {Array} array\n   * @return {number} max\n   * @private\n   */\n  function _max (array) {\n    let res\n\n    deepForEach(array, function (value) {\n      try {\n        if (isNaN(value) && typeof value === 'number') {\n          res = NaN\n        } else if (res === undefined || larger(value, res)) {\n          res = value\n        }\n      } catch (err) {\n        throw improveErrorMessage(err, 'max', value)\n      }\n    })\n\n    if (res === undefined) {\n      throw new Error('Cannot calculate max of an empty array')\n    }\n\n    return res\n  }\n})\n","import { factory } from '../../utils/factory'\nimport { extend } from '../../utils/object'\nimport { createAlgorithm01 } from '../../type/matrix/utils/algorithm01'\nimport { createAlgorithm04 } from '../../type/matrix/utils/algorithm04'\nimport { createAlgorithm10 } from '../../type/matrix/utils/algorithm10'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\n\nconst name = 'add'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'addScalar',\n  'equalScalar',\n  'DenseMatrix',\n  'SparseMatrix'\n]\n\nexport const createAdd = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, addScalar, equalScalar, DenseMatrix, SparseMatrix }) => {\n  const algorithm01 = createAlgorithm01({ typed })\n  const algorithm04 = createAlgorithm04({ typed, equalScalar })\n  const algorithm10 = createAlgorithm10({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Add two or more values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *    math.add(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3)               // returns number 5\n   *    math.add(2, 3, 4)            // returns number 9\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(-4, 1)\n   *    math.add(a, b)               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4)       // returns Array [5, 6, 7]\n   *\n   *    const c = math.unit('5 cm')\n   *    const d = math.unit('2.1 mm')\n   *    math.add(c, d)               // returns Unit 52.1 mm\n   *\n   *    math.add(\"2.3\", \"4\")         // returns number 6.3\n   *\n   * See also:\n   *\n   *    subtract, sum\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n   */\n  const add = typed(name, extend({\n    // we extend the signatures of addScalar with signatures dealing with matrices\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, addScalar)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm01(x, y, addScalar, false)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm01(y, x, addScalar, true)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm04(x, y, addScalar)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return add(x, matrix(y))\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, addScalar, false)\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm10(x, y, addScalar, false)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, addScalar, true)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm10(y, x, addScalar, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, addScalar, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, addScalar, true).valueOf()\n    },\n\n    'any, any': addScalar,\n\n    'any, any, ...any': function (x, y, rest) {\n      let result = add(x, y)\n\n      for (let i = 0; i < rest.length; i++) {\n        result = add(result, rest[i])\n      }\n\n      return result\n    }\n  }, addScalar.signatures))\n\n  return add\n})\n","/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nexport function ArgumentsError (fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator')\n  }\n\n  this.fn = fn\n  this.count = count\n  this.min = min\n  this.max = max\n\n  this.message = 'Wrong number of arguments in function ' + fn +\n      ' (' + count + ' provided, ' +\n      min + ((max !== undefined && max !== null) ? ('-' + max) : '') + ' expected)'\n\n  this.stack = (new Error()).stack\n}\n\nArgumentsError.prototype = new Error()\nArgumentsError.prototype.constructor = Error\nArgumentsError.prototype.name = 'ArgumentsError'\nArgumentsError.prototype.isArgumentsError = true\n","import { isInteger } from '../../utils/number'\nimport { product } from '../../utils/product'\n\nexport function gammaNumber (n) {\n  let t, x\n\n  if (isInteger(n)) {\n    if (n <= 0) {\n      return isFinite(n) ? Infinity : NaN\n    }\n\n    if (n > 171) {\n      return Infinity // Will overflow\n    }\n\n    return product(1, n - 1)\n  }\n\n  if (n < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * n) * gammaNumber(1 - n))\n  }\n\n  if (n >= 171.35) {\n    return Infinity // will overflow\n  }\n\n  if (n > 85.0) { // Extended Stirling Approx\n    const twoN = n * n\n    const threeN = twoN * n\n    const fourN = threeN * n\n    const fiveN = fourN * n\n    return Math.sqrt(2 * Math.PI / n) * Math.pow((n / Math.E), n) *\n      (1 + 1 / (12 * n) + 1 / (288 * twoN) - 139 / (51840 * threeN) -\n        571 / (2488320 * fourN) + 163879 / (209018880 * fiveN) +\n        5246819 / (75246796800 * fiveN * n))\n  }\n\n  --n\n  x = gammaP[0]\n  for (let i = 1; i < gammaP.length; ++i) {\n    x += gammaP[i] / (n + i)\n  }\n\n  t = n + gammaG + 0.5\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x\n}\ngammaNumber.signature = 'number'\n\n// TODO: comment on the variables g and p\n\nexport const gammaG = 4.7421875\n\nexport const gammaP = [\n  0.99999999999999709182,\n  57.156235665862923517,\n  -59.597960355475491248,\n  14.136097974741747174,\n  -0.49191381609762019978,\n  0.33994649984811888699e-4,\n  0.46523628927048575665e-4,\n  -0.98374475304879564677e-4,\n  0.15808870322491248884e-3,\n  -0.21026444172410488319e-3,\n  0.21743961811521264320e-3,\n  -0.16431810653676389022e-3,\n  0.84418223983852743293e-4,\n  -0.26190838401581408670e-4,\n  0.36899182659531622704e-5\n]\n","import { factory } from '../../utils/factory'\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03'\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07'\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12'\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13'\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14'\n\nconst name = 'equal'\nconst dependencies = [\n  'typed',\n  'matrix',\n  'equalScalar',\n  'DenseMatrix'\n]\n\nexport const createEqual = /* #__PURE__ */ factory(name, dependencies, ({ typed, matrix, equalScalar, DenseMatrix }) => {\n  const algorithm03 = createAlgorithm03({ typed })\n  const algorithm07 = createAlgorithm07({ typed, DenseMatrix })\n  const algorithm12 = createAlgorithm12({ typed, DenseMatrix })\n  const algorithm13 = createAlgorithm13({ typed })\n  const algorithm14 = createAlgorithm14({ typed })\n\n  /**\n   * Test whether two values are equal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is only\n   * equal to `null` and nothing else, and `undefined` is only equal to\n   * `undefined` and nothing else. Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.equal(x, y)\n   *\n   * Examples:\n   *\n   *    math.equal(2 + 2, 3)         // returns false\n   *    math.equal(2 + 2, 4)         // returns true\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.equal(a, b)             // returns true\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.equal(c, d)             // returns [true, false, true]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.equal(\"1000\", \"1e3\")    // returns true\n   *    math.equal(0, null)          // returns false\n   *\n   * See also:\n   *\n   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual, equalText\n   *\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are equal, else returns false\n   */\n  const equal = typed(name, {\n\n    'any, any': function (x, y) {\n      // strict equality for null and undefined?\n      if (x === null) { return y === null }\n      if (y === null) { return x === null }\n      if (x === undefined) { return y === undefined }\n      if (y === undefined) { return x === undefined }\n\n      return equalScalar(x, y)\n    },\n\n    'SparseMatrix, SparseMatrix': function (x, y) {\n      return algorithm07(x, y, equalScalar)\n    },\n\n    'SparseMatrix, DenseMatrix': function (x, y) {\n      return algorithm03(y, x, equalScalar, true)\n    },\n\n    'DenseMatrix, SparseMatrix': function (x, y) {\n      return algorithm03(x, y, equalScalar, false)\n    },\n\n    'DenseMatrix, DenseMatrix': function (x, y) {\n      return algorithm13(x, y, equalScalar)\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return equal(matrix(x), matrix(y)).valueOf()\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return equal(matrix(x), y)\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return equal(x, matrix(y))\n    },\n\n    'SparseMatrix, any': function (x, y) {\n      return algorithm12(x, y, equalScalar, false)\n    },\n\n    'DenseMatrix, any': function (x, y) {\n      return algorithm14(x, y, equalScalar, false)\n    },\n\n    'any, SparseMatrix': function (x, y) {\n      return algorithm12(y, x, equalScalar, true)\n    },\n\n    'any, DenseMatrix': function (x, y) {\n      return algorithm14(y, x, equalScalar, true)\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, equalScalar, false).valueOf()\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, equalScalar, true).valueOf()\n    }\n  })\n\n  return equal\n})\n\nexport const createEqualNumber = factory(name, ['typed', 'equalScalar'], ({ typed, equalScalar }) => {\n  return typed(name, {\n    'any, any': function (x, y) {\n      // strict equality for null and undefined?\n      if (x === null) { return y === null }\n      if (y === null) { return x === null }\n      if (x === undefined) { return y === undefined }\n      if (y === undefined) { return x === undefined }\n\n      return equalScalar(x, y)\n    }\n  })\n})\n","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { config } from './configReadonly'\nimport {\n  createResultSet,\n  createComplexClass,\n  createRangeClass,\n  createEye,\n  createFalse,\n  createNull,\n  createTrue,\n  createBigNumberClass,\n  createMatrixClass,\n  createE,\n  createI,\n  createLN10,\n  createLOG10E,\n  createNaN,\n  createPi,\n  createSQRT1_2, // eslint-disable-line camelcase\n  createTau,\n  createEfimovFactor,\n  createFineStructure,\n  createSackurTetrode,\n  createWeakMixingAngle,\n  createFractionClass,\n  createLN2,\n  createPhi,\n  createSQRT2,\n  createDenseMatrixClass,\n  createInfinity,\n  createTyped,\n  createIsInteger,\n  createIsNumeric,\n  createIsPositive,\n  createIsNaN,\n  createEqualScalar,\n  createNumber,\n  createBoolean,\n  createComplex,\n  createSplitUnit,\n  createUnaryPlus,\n  createApply,\n  createCube,\n  createExpm1,\n  createLog10,\n  createMultiplyScalar,\n  createSign,\n  createSquare,\n  createBitNot,\n  createArg,\n  createIm,\n  createNot,\n  createFilter,\n  createForEach,\n  createMap,\n  createErf,\n  createFormat,\n  createIsPrime,\n  createAcos,\n  createAcot,\n  createAcsc,\n  createAsec,\n  createAsin,\n  createAtan,\n  createAtanh,\n  createCosh,\n  createCoth,\n  createCsch,\n  createSech,\n  createSinh,\n  createTanh,\n  createCombinations,\n  createPickRandom,\n  createRandomInt,\n  createLOG2E,\n  createClone,\n  createHasNumericValue,\n  createTypeOf,\n  createString,\n  createFraction,\n  createUnaryMinus,\n  createAddScalar,\n  createExp,\n  createLog2,\n  createSqrt,\n  createConj,\n  createGetMatrixDataType,\n  createMode,\n  createPrint,\n  createAcosh,\n  createAcsch,\n  createAsinh,\n  createCos,\n  createCsc,\n  createSin,\n  createRandom,\n  createVersion,\n  createIsNegative,\n  createSparseMatrixClass,\n  createMatrix,\n  createCbrt,\n  createGcd,\n  createMod,\n  createNthRoot,\n  createXgcd,\n  createBitAnd,\n  createBitXor,\n  createOr,\n  createConcat,\n  createDiag,\n  createIdentity,\n  createOnes,\n  createReshape,\n  createSize,\n  createSubset,\n  createZeros,\n  createTo,\n  createRound,\n  createLeftShift,\n  createRightLogShift,\n  createCompare,\n  createCompareText,\n  createSmaller,\n  createLarger,\n  createUnequal,\n  createMax,\n  createImmutableDenseMatrixClass,\n  createFibonacciHeapClass,\n  createSparse,\n  createAcoth,\n  createAtan2,\n  createSec,\n  createAdd,\n  createTrace,\n  createComposition,\n  createIsZero,\n  createAbs,\n  createFloor,\n  createMultiply,\n  createDotMultiply,\n  createRe,\n  createFlatten,\n  createResize,\n  createSqueeze,\n  createProd,\n  createPow,\n  createDotPow,\n  createRightArithShift,\n  createCompareNatural,\n  createEqualText,\n  createLargerEq,\n  createPartitionSelect,\n  createMin,\n  createSpaClass,\n  createAsech,\n  createTan,\n  createSetSize,\n  createNorm,\n  createQuantileSeq,\n  createGamma,\n  createBignumber,\n  createLcm,\n  createBitOr,\n  createKron,\n  createTranspose,\n  createNumeric,\n  createAnd,\n  createSmallerEq,\n  createSort,\n  createCot,\n  createDot,\n  createSum,\n  createFactorial,\n  createPermutations,\n  createCeil,\n  createSubtract,\n  createCross,\n  createCtranspose,\n  createEqual,\n  createIndexClass,\n  createSetCartesian,\n  createSetDistinct,\n  createSetIsSubset,\n  createSetPowerset,\n  createIndex,\n  createFix,\n  createRange,\n  createDivideScalar,\n  createNthRoots,\n  createLsolve,\n  createDeepEqual,\n  createSetDifference,\n  createSetMultiplicity,\n  createHypot,\n  createLup,\n  createSlu,\n  createDet,\n  createDistance,\n  createStirlingS2,\n  createCatalan,\n  createXor,\n  createRow,\n  createDotDivide,\n  createUnitClass,\n  createCreateUnit,\n  createSetSymDifference,\n  createQr,\n  createInv,\n  createSqrtm,\n  createIntersect,\n  createBellNumbers,\n  createAtomicMass,\n  createBohrMagneton,\n  createBoltzmann,\n  createConductanceQuantum,\n  createDeuteronMass,\n  createElectronMass,\n  createFaraday,\n  createFirstRadiation,\n  createGravitationConstant,\n  createHartreeEnergy,\n  createKlitzing,\n  createMagneticConstant,\n  createMolarMass,\n  createMolarPlanckConstant,\n  createNeutronMass,\n  createPlanckCharge,\n  createPlanckLength,\n  createPlanckTemperature,\n  createProtonMass,\n  createReducedPlanckConstant,\n  createSecondRadiation,\n  createStefanBoltzmann,\n  createVacuumImpedance,\n  createColumn,\n  createUsolve,\n  createSetIntersect,\n  createLusolve,\n  createExpm,\n  createAvogadro,\n  createClassicalElectronRadius,\n  createElectricConstant,\n  createFermiCoupling,\n  createGravity,\n  createLoschmidt,\n  createMolarMassC12,\n  createNuclearMagneton,\n  createPlanckMass,\n  createQuantumOfCirculation,\n  createSpeedOfLight,\n  createWienDisplacement,\n  createLog,\n  createUnitFunction,\n  createDivide,\n  createMedian,\n  createVariance,\n  createStd,\n  createMultinomial,\n  createBohrRadius,\n  createElementaryCharge,\n  createInverseConductanceQuantum,\n  createMolarVolume,\n  createPlanckTime,\n  createThomsonCrossSection,\n  createLog1p,\n  createMean,\n  createGasConstant,\n  createPlanckConstant,\n  createSetUnion,\n  createKldivergence,\n  createCoulomb,\n  createRydberg,\n  createMad,\n  createMagneticFluxQuantum\n} from '../factoriesAny'\n\nexport const ResultSet = /* #__PURE__ */ createResultSet({})\nexport const Complex = /* #__PURE__ */ createComplexClass({})\nexport const Range = /* #__PURE__ */ createRangeClass({})\nexport const eye = /* #__PURE__ */ createEye({})\nexport const _false = /* #__PURE__ */ createFalse({})\nexport const _null = /* #__PURE__ */ createNull({})\nexport const _true = /* #__PURE__ */ createTrue({})\nexport const BigNumber = /* #__PURE__ */ createBigNumberClass({ config })\nexport const Matrix = /* #__PURE__ */ createMatrixClass({})\nexport const e = /* #__PURE__ */ createE({ BigNumber, config })\nexport const i = /* #__PURE__ */ createI({ Complex })\nexport const LN10 = /* #__PURE__ */ createLN10({ BigNumber, config })\nexport const LOG10E = /* #__PURE__ */ createLOG10E({ BigNumber, config })\nexport const _NaN = /* #__PURE__ */ createNaN({ BigNumber, config })\nexport const pi = /* #__PURE__ */ createPi({ BigNumber, config })\nexport const SQRT1_2 = /* #__PURE__ */ createSQRT1_2({ BigNumber, config })\nexport const tau = /* #__PURE__ */ createTau({ BigNumber, config })\nexport const efimovFactor = /* #__PURE__ */ createEfimovFactor({ BigNumber, config })\nexport const fineStructure = /* #__PURE__ */ createFineStructure({ BigNumber, config })\nexport const sackurTetrode = /* #__PURE__ */ createSackurTetrode({ BigNumber, config })\nexport const weakMixingAngle = /* #__PURE__ */ createWeakMixingAngle({ BigNumber, config })\nexport const Fraction = /* #__PURE__ */ createFractionClass({})\nexport const LN2 = /* #__PURE__ */ createLN2({ BigNumber, config })\nexport const phi = /* #__PURE__ */ createPhi({ BigNumber, config })\nexport const SQRT2 = /* #__PURE__ */ createSQRT2({ BigNumber, config })\nexport const DenseMatrix = /* #__PURE__ */ createDenseMatrixClass({ Matrix })\nexport const _Infinity = /* #__PURE__ */ createInfinity({ BigNumber, config })\nexport const typed = /* #__PURE__ */ createTyped({ BigNumber, Complex, DenseMatrix, Fraction })\nexport const isInteger = /* #__PURE__ */ createIsInteger({ typed })\nexport const isNumeric = /* #__PURE__ */ createIsNumeric({ typed })\nexport const isPositive = /* #__PURE__ */ createIsPositive({ typed })\nexport const isNaN = /* #__PURE__ */ createIsNaN({ typed })\nexport const equalScalar = /* #__PURE__ */ createEqualScalar({ config, typed })\nexport const number = /* #__PURE__ */ createNumber({ typed })\nexport const boolean = /* #__PURE__ */ createBoolean({ typed })\nexport const complex = /* #__PURE__ */ createComplex({ Complex, typed })\nexport const splitUnit = /* #__PURE__ */ createSplitUnit({ typed })\nexport const unaryPlus = /* #__PURE__ */ createUnaryPlus({ BigNumber, config, typed })\nexport const apply = /* #__PURE__ */ createApply({ isInteger, typed })\nexport const cube = /* #__PURE__ */ createCube({ typed })\nexport const expm1 = /* #__PURE__ */ createExpm1({ Complex, typed })\nexport const log10 = /* #__PURE__ */ createLog10({ Complex, config, typed })\nexport const multiplyScalar = /* #__PURE__ */ createMultiplyScalar({ typed })\nexport const sign = /* #__PURE__ */ createSign({ BigNumber, Fraction, typed })\nexport const square = /* #__PURE__ */ createSquare({ typed })\nexport const bitNot = /* #__PURE__ */ createBitNot({ typed })\nexport const arg = /* #__PURE__ */ createArg({ typed })\nexport const im = /* #__PURE__ */ createIm({ typed })\nexport const not = /* #__PURE__ */ createNot({ typed })\nexport const filter = /* #__PURE__ */ createFilter({ typed })\nexport const forEach = /* #__PURE__ */ createForEach({ typed })\nexport const map = /* #__PURE__ */ createMap({ typed })\nexport const erf = /* #__PURE__ */ createErf({ typed })\nexport const format = /* #__PURE__ */ createFormat({ typed })\nexport const isPrime = /* #__PURE__ */ createIsPrime({ typed })\nexport const acos = /* #__PURE__ */ createAcos({ Complex, config, typed })\nexport const acot = /* #__PURE__ */ createAcot({ BigNumber, typed })\nexport const acsc = /* #__PURE__ */ createAcsc({ BigNumber, Complex, config, typed })\nexport const asec = /* #__PURE__ */ createAsec({ BigNumber, Complex, config, typed })\nexport const asin = /* #__PURE__ */ createAsin({ Complex, config, typed })\nexport const atan = /* #__PURE__ */ createAtan({ typed })\nexport const atanh = /* #__PURE__ */ createAtanh({ Complex, config, typed })\nexport const cosh = /* #__PURE__ */ createCosh({ typed })\nexport const coth = /* #__PURE__ */ createCoth({ BigNumber, typed })\nexport const csch = /* #__PURE__ */ createCsch({ BigNumber, typed })\nexport const sech = /* #__PURE__ */ createSech({ BigNumber, typed })\nexport const sinh = /* #__PURE__ */ createSinh({ typed })\nexport const tanh = /* #__PURE__ */ createTanh({ typed })\nexport const combinations = /* #__PURE__ */ createCombinations({ typed })\nexport const pickRandom = /* #__PURE__ */ createPickRandom({ config, typed })\nexport const randomInt = /* #__PURE__ */ createRandomInt({ config, typed })\nexport const LOG2E = /* #__PURE__ */ createLOG2E({ BigNumber, config })\nexport const clone = /* #__PURE__ */ createClone({ typed })\nexport const hasNumericValue = /* #__PURE__ */ createHasNumericValue({ isNumeric, typed })\nexport const typeOf = /* #__PURE__ */ createTypeOf({ typed })\nexport const string = /* #__PURE__ */ createString({ typed })\nexport const fraction = /* #__PURE__ */ createFraction({ Fraction, typed })\nexport const unaryMinus = /* #__PURE__ */ createUnaryMinus({ typed })\nexport const addScalar = /* #__PURE__ */ createAddScalar({ typed })\nexport const exp = /* #__PURE__ */ createExp({ typed })\nexport const log2 = /* #__PURE__ */ createLog2({ Complex, config, typed })\nexport const sqrt = /* #__PURE__ */ createSqrt({ Complex, config, typed })\nexport const conj = /* #__PURE__ */ createConj({ typed })\nexport const getMatrixDataType = /* #__PURE__ */ createGetMatrixDataType({ typed })\nexport const mode = /* #__PURE__ */ createMode({ isNaN, isNumeric, typed })\nexport const print = /* #__PURE__ */ createPrint({ typed })\nexport const acosh = /* #__PURE__ */ createAcosh({ Complex, config, typed })\nexport const acsch = /* #__PURE__ */ createAcsch({ BigNumber, typed })\nexport const asinh = /* #__PURE__ */ createAsinh({ typed })\nexport const cos = /* #__PURE__ */ createCos({ typed })\nexport const csc = /* #__PURE__ */ createCsc({ BigNumber, typed })\nexport const sin = /* #__PURE__ */ createSin({ typed })\nexport const random = /* #__PURE__ */ createRandom({ config, typed })\nexport const version = /* #__PURE__ */ createVersion({})\nexport const isNegative = /* #__PURE__ */ createIsNegative({ typed })\nexport const SparseMatrix = /* #__PURE__ */ createSparseMatrixClass({ Matrix, equalScalar, typed })\nexport const matrix = /* #__PURE__ */ createMatrix({ DenseMatrix, Matrix, SparseMatrix, typed })\nexport const cbrt = /* #__PURE__ */ createCbrt({ BigNumber, Complex, Fraction, config, isNegative, matrix, typed, unaryMinus })\nexport const gcd = /* #__PURE__ */ createGcd({ BigNumber, DenseMatrix, equalScalar, matrix, typed })\nexport const mod = /* #__PURE__ */ createMod({ DenseMatrix, equalScalar, matrix, typed })\nexport const nthRoot = /* #__PURE__ */ createNthRoot({ BigNumber, equalScalar, matrix, typed })\nexport const xgcd = /* #__PURE__ */ createXgcd({ BigNumber, config, matrix, typed })\nexport const bitAnd = /* #__PURE__ */ createBitAnd({ equalScalar, matrix, typed })\nexport const bitXor = /* #__PURE__ */ createBitXor({ DenseMatrix, matrix, typed })\nexport const or = /* #__PURE__ */ createOr({ DenseMatrix, equalScalar, matrix, typed })\nexport const concat = /* #__PURE__ */ createConcat({ isInteger, matrix, typed })\nexport const diag = /* #__PURE__ */ createDiag({ DenseMatrix, SparseMatrix, matrix, typed })\nexport const identity = /* #__PURE__ */ createIdentity({ BigNumber, DenseMatrix, SparseMatrix, config, matrix, typed })\nexport const ones = /* #__PURE__ */ createOnes({ BigNumber, config, matrix, typed })\nexport const reshape = /* #__PURE__ */ createReshape({ isInteger, matrix, typed })\nexport const size = /* #__PURE__ */ createSize({ matrix, config, typed })\nexport const subset = /* #__PURE__ */ createSubset({ matrix, typed })\nexport const zeros = /* #__PURE__ */ createZeros({ BigNumber, config, matrix, typed })\nexport const to = /* #__PURE__ */ createTo({ matrix, typed })\nexport const round = /* #__PURE__ */ createRound({ BigNumber, DenseMatrix, equalScalar, matrix, typed, zeros })\nexport const leftShift = /* #__PURE__ */ createLeftShift({ DenseMatrix, equalScalar, matrix, typed, zeros })\nexport const rightLogShift = /* #__PURE__ */ createRightLogShift({ DenseMatrix, equalScalar, matrix, typed, zeros })\nexport const compare = /* #__PURE__ */ createCompare({ BigNumber, DenseMatrix, Fraction, config, equalScalar, matrix, typed })\nexport const compareText = /* #__PURE__ */ createCompareText({ matrix, typed })\nexport const smaller = /* #__PURE__ */ createSmaller({ DenseMatrix, config, matrix, typed })\nexport const larger = /* #__PURE__ */ createLarger({ DenseMatrix, config, matrix, typed })\nexport const unequal = /* #__PURE__ */ createUnequal({ DenseMatrix, config, equalScalar, matrix, typed })\nexport const max = /* #__PURE__ */ createMax({ larger, typed })\nexport const ImmutableDenseMatrix = /* #__PURE__ */ createImmutableDenseMatrixClass({ DenseMatrix, smaller })\nexport const FibonacciHeap = /* #__PURE__ */ createFibonacciHeapClass({ larger, smaller })\nexport const sparse = /* #__PURE__ */ createSparse({ SparseMatrix, typed })\nexport const acoth = /* #__PURE__ */ createAcoth({ BigNumber, Complex, config, typed })\nexport const atan2 = /* #__PURE__ */ createAtan2({ BigNumber, DenseMatrix, equalScalar, matrix, typed })\nexport const sec = /* #__PURE__ */ createSec({ BigNumber, typed })\nexport const add = /* #__PURE__ */ createAdd({ DenseMatrix, SparseMatrix, addScalar, equalScalar, matrix, typed })\nexport const trace = /* #__PURE__ */ createTrace({ add, matrix, typed })\nexport const composition = /* #__PURE__ */ createComposition({ addScalar, combinations, isInteger, isNegative, isPositive, larger, typed })\nexport const isZero = /* #__PURE__ */ createIsZero({ typed })\nexport const abs = /* #__PURE__ */ createAbs({ typed })\nexport const floor = /* #__PURE__ */ createFloor({ config, round, typed })\nexport const multiply = /* #__PURE__ */ createMultiply({ addScalar, equalScalar, matrix, multiplyScalar, typed })\nexport const dotMultiply = /* #__PURE__ */ createDotMultiply({ equalScalar, matrix, multiplyScalar, typed })\nexport const re = /* #__PURE__ */ createRe({ typed })\nexport const flatten = /* #__PURE__ */ createFlatten({ matrix, typed })\nexport const resize = /* #__PURE__ */ createResize({ config, matrix })\nexport const squeeze = /* #__PURE__ */ createSqueeze({ matrix, typed })\nexport const prod = /* #__PURE__ */ createProd({ multiply, typed })\nexport const pow = /* #__PURE__ */ createPow({ Complex, config, fraction, identity, matrix, multiply, number, typed })\nexport const dotPow = /* #__PURE__ */ createDotPow({ DenseMatrix, equalScalar, matrix, pow, typed })\nexport const rightArithShift = /* #__PURE__ */ createRightArithShift({ DenseMatrix, equalScalar, matrix, typed, zeros })\nexport const compareNatural = /* #__PURE__ */ createCompareNatural({ compare, typed })\nexport const equalText = /* #__PURE__ */ createEqualText({ compareText, isZero, typed })\nexport const largerEq = /* #__PURE__ */ createLargerEq({ DenseMatrix, config, matrix, typed })\nexport const partitionSelect = /* #__PURE__ */ createPartitionSelect({ compare, isNaN, isNumeric, typed })\nexport const min = /* #__PURE__ */ createMin({ smaller, typed })\nexport const Spa = /* #__PURE__ */ createSpaClass({ FibonacciHeap, addScalar, equalScalar })\nexport const asech = /* #__PURE__ */ createAsech({ BigNumber, Complex, config, typed })\nexport const tan = /* #__PURE__ */ createTan({ typed })\nexport const setSize = /* #__PURE__ */ createSetSize({ compareNatural, typed })\nexport const norm = /* #__PURE__ */ createNorm({ abs, add, conj, equalScalar, larger, matrix, multiply, pow, smaller, sqrt, typed })\nexport const quantileSeq = /* #__PURE__ */ createQuantileSeq({ add, compare, multiply, partitionSelect, typed })\nexport const gamma = /* #__PURE__ */ createGamma({ BigNumber, Complex, config, multiplyScalar, pow, typed })\nexport const bignumber = /* #__PURE__ */ createBignumber({ BigNumber, typed })\nexport const lcm = /* #__PURE__ */ createLcm({ equalScalar, matrix, typed })\nexport const bitOr = /* #__PURE__ */ createBitOr({ DenseMatrix, equalScalar, matrix, typed })\nexport const kron = /* #__PURE__ */ createKron({ matrix, multiplyScalar, typed })\nexport const transpose = /* #__PURE__ */ createTranspose({ matrix, typed })\nexport const numeric = /* #__PURE__ */ createNumeric({ bignumber, fraction, number })\nexport const and = /* #__PURE__ */ createAnd({ equalScalar, matrix, not, typed, zeros })\nexport const smallerEq = /* #__PURE__ */ createSmallerEq({ DenseMatrix, config, matrix, typed })\nexport const sort = /* #__PURE__ */ createSort({ compare, compareNatural, matrix, typed })\nexport const cot = /* #__PURE__ */ createCot({ BigNumber, typed })\nexport const dot = /* #__PURE__ */ createDot({ add, multiply, typed })\nexport const sum = /* #__PURE__ */ createSum({ bignumber, fraction, add, config, typed })\nexport const factorial = /* #__PURE__ */ createFactorial({ gamma, typed })\nexport const permutations = /* #__PURE__ */ createPermutations({ factorial, typed })\nexport const ceil = /* #__PURE__ */ createCeil({ config, round, typed })\nexport const subtract = /* #__PURE__ */ createSubtract({ DenseMatrix, addScalar, equalScalar, matrix, typed, unaryMinus })\nexport const cross = /* #__PURE__ */ createCross({ matrix, multiply, subtract, typed })\nexport const ctranspose = /* #__PURE__ */ createCtranspose({ conj, transpose, typed })\nexport const equal = /* #__PURE__ */ createEqual({ DenseMatrix, equalScalar, matrix, typed })\nexport const Index = /* #__PURE__ */ createIndexClass({ ImmutableDenseMatrix })\nexport const setCartesian = /* #__PURE__ */ createSetCartesian({ DenseMatrix, Index, compareNatural, size, subset, typed })\nexport const setDistinct = /* #__PURE__ */ createSetDistinct({ DenseMatrix, Index, compareNatural, size, subset, typed })\nexport const setIsSubset = /* #__PURE__ */ createSetIsSubset({ Index, compareNatural, size, subset, typed })\nexport const setPowerset = /* #__PURE__ */ createSetPowerset({ Index, compareNatural, size, subset, typed })\nexport const index = /* #__PURE__ */ createIndex({ Index, typed })\nexport const fix = /* #__PURE__ */ createFix({ Complex, ceil, floor, typed })\nexport const range = /* #__PURE__ */ createRange({ bignumber, matrix, config, larger, largerEq, smaller, smallerEq, typed })\nexport const divideScalar = /* #__PURE__ */ createDivideScalar({ numeric, typed })\nexport const nthRoots = /* #__PURE__ */ createNthRoots({ Complex, config, divideScalar, typed })\nexport const lsolve = /* #__PURE__ */ createLsolve({ DenseMatrix, divideScalar, equalScalar, matrix, multiplyScalar, subtract, typed })\nexport const deepEqual = /* #__PURE__ */ createDeepEqual({ equal, typed })\nexport const setDifference = /* #__PURE__ */ createSetDifference({ DenseMatrix, Index, compareNatural, size, subset, typed })\nexport const setMultiplicity = /* #__PURE__ */ createSetMultiplicity({ Index, compareNatural, size, subset, typed })\nexport const hypot = /* #__PURE__ */ createHypot({ abs, addScalar, divideScalar, isPositive, multiplyScalar, smaller, sqrt, typed })\nexport const lup = /* #__PURE__ */ createLup({ DenseMatrix, Spa, SparseMatrix, abs, addScalar, divideScalar, equalScalar, larger, matrix, multiplyScalar, subtract, typed, unaryMinus })\nexport const slu = /* #__PURE__ */ createSlu({ SparseMatrix, abs, add, divideScalar, larger, largerEq, multiply, subtract, transpose, typed })\nexport const det = /* #__PURE__ */ createDet({ lup, matrix, multiply, subtract, typed, unaryMinus })\nexport const distance = /* #__PURE__ */ createDistance({ abs, addScalar, divideScalar, multiplyScalar, sqrt, subtract, typed, unaryMinus })\nexport const stirlingS2 = /* #__PURE__ */ createStirlingS2({ addScalar, combinations, divideScalar, factorial, isInteger, isNegative, larger, multiplyScalar, pow, subtract, typed })\nexport const catalan = /* #__PURE__ */ createCatalan({ addScalar, combinations, divideScalar, isInteger, isNegative, multiplyScalar, typed })\nexport const xor = /* #__PURE__ */ createXor({ DenseMatrix, matrix, typed })\nexport const row = /* #__PURE__ */ createRow({ Index, matrix, range, typed })\nexport const dotDivide = /* #__PURE__ */ createDotDivide({ DenseMatrix, divideScalar, equalScalar, matrix, typed })\nexport const Unit = /* #__PURE__ */ createUnitClass({ BigNumber, Complex, Fraction, abs, addScalar, config, divideScalar, equal, fix, format, isNumeric, multiplyScalar, number, pow, round, subtract })\nexport const createUnit = /* #__PURE__ */ createCreateUnit({ Unit, typed })\nexport const setSymDifference = /* #__PURE__ */ createSetSymDifference({ Index, concat, setDifference, size, subset, typed })\nexport const qr = /* #__PURE__ */ createQr({ addScalar, conj, divideScalar, identity, isZero, matrix, multiplyScalar, sign, sqrt, subtract, typed, unaryMinus, unequal, zeros })\nexport const inv = /* #__PURE__ */ createInv({ abs, addScalar, det, divideScalar, identity, matrix, multiply, typed, unaryMinus })\nexport const sqrtm = /* #__PURE__ */ createSqrtm({ abs, add, identity, inv, max, multiply, size, sqrt, subtract, typed })\nexport const intersect = /* #__PURE__ */ createIntersect({ abs, add, addScalar, config, divideScalar, equalScalar, matrix, multiply, multiplyScalar, smaller, subtract, typed })\nexport const bellNumbers = /* #__PURE__ */ createBellNumbers({ addScalar, isInteger, isNegative, stirlingS2, typed })\nexport const atomicMass = /* #__PURE__ */ createAtomicMass({ BigNumber, Unit, config })\nexport const bohrMagneton = /* #__PURE__ */ createBohrMagneton({ BigNumber, Unit, config })\nexport const boltzmann = /* #__PURE__ */ createBoltzmann({ BigNumber, Unit, config })\nexport const conductanceQuantum = /* #__PURE__ */ createConductanceQuantum({ BigNumber, Unit, config })\nexport const deuteronMass = /* #__PURE__ */ createDeuteronMass({ BigNumber, Unit, config })\nexport const electronMass = /* #__PURE__ */ createElectronMass({ BigNumber, Unit, config })\nexport const faraday = /* #__PURE__ */ createFaraday({ BigNumber, Unit, config })\nexport const firstRadiation = /* #__PURE__ */ createFirstRadiation({ BigNumber, Unit, config })\nexport const gravitationConstant = /* #__PURE__ */ createGravitationConstant({ BigNumber, Unit, config })\nexport const hartreeEnergy = /* #__PURE__ */ createHartreeEnergy({ BigNumber, Unit, config })\nexport const klitzing = /* #__PURE__ */ createKlitzing({ BigNumber, Unit, config })\nexport const magneticConstant = /* #__PURE__ */ createMagneticConstant({ BigNumber, Unit, config })\nexport const molarMass = /* #__PURE__ */ createMolarMass({ BigNumber, Unit, config })\nexport const molarPlanckConstant = /* #__PURE__ */ createMolarPlanckConstant({ BigNumber, Unit, config })\nexport const neutronMass = /* #__PURE__ */ createNeutronMass({ BigNumber, Unit, config })\nexport const planckCharge = /* #__PURE__ */ createPlanckCharge({ BigNumber, Unit, config })\nexport const planckLength = /* #__PURE__ */ createPlanckLength({ BigNumber, Unit, config })\nexport const planckTemperature = /* #__PURE__ */ createPlanckTemperature({ BigNumber, Unit, config })\nexport const protonMass = /* #__PURE__ */ createProtonMass({ BigNumber, Unit, config })\nexport const reducedPlanckConstant = /* #__PURE__ */ createReducedPlanckConstant({ BigNumber, Unit, config })\nexport const secondRadiation = /* #__PURE__ */ createSecondRadiation({ BigNumber, Unit, config })\nexport const stefanBoltzmann = /* #__PURE__ */ createStefanBoltzmann({ BigNumber, Unit, config })\nexport const vacuumImpedance = /* #__PURE__ */ createVacuumImpedance({ BigNumber, Unit, config })\nexport const column = /* #__PURE__ */ createColumn({ Index, matrix, range, typed })\nexport const usolve = /* #__PURE__ */ createUsolve({ DenseMatrix, divideScalar, equalScalar, matrix, multiplyScalar, subtract, typed })\nexport const setIntersect = /* #__PURE__ */ createSetIntersect({ DenseMatrix, Index, compareNatural, size, subset, typed })\nexport const lusolve = /* #__PURE__ */ createLusolve({ DenseMatrix, lsolve, lup, matrix, slu, typed, usolve })\nexport const expm = /* #__PURE__ */ createExpm({ abs, add, identity, inv, multiply, typed })\nexport const avogadro = /* #__PURE__ */ createAvogadro({ BigNumber, Unit, config })\nexport const classicalElectronRadius = /* #__PURE__ */ createClassicalElectronRadius({ BigNumber, Unit, config })\nexport const electricConstant = /* #__PURE__ */ createElectricConstant({ BigNumber, Unit, config })\nexport const fermiCoupling = /* #__PURE__ */ createFermiCoupling({ BigNumber, Unit, config })\nexport const gravity = /* #__PURE__ */ createGravity({ BigNumber, Unit, config })\nexport const loschmidt = /* #__PURE__ */ createLoschmidt({ BigNumber, Unit, config })\nexport const molarMassC12 = /* #__PURE__ */ createMolarMassC12({ BigNumber, Unit, config })\nexport const nuclearMagneton = /* #__PURE__ */ createNuclearMagneton({ BigNumber, Unit, config })\nexport const planckMass = /* #__PURE__ */ createPlanckMass({ BigNumber, Unit, config })\nexport const quantumOfCirculation = /* #__PURE__ */ createQuantumOfCirculation({ BigNumber, Unit, config })\nexport const speedOfLight = /* #__PURE__ */ createSpeedOfLight({ BigNumber, Unit, config })\nexport const wienDisplacement = /* #__PURE__ */ createWienDisplacement({ BigNumber, Unit, config })\nexport const log = /* #__PURE__ */ createLog({ Complex, config, divideScalar, typed })\nexport const unit = /* #__PURE__ */ createUnitFunction({ Unit, typed })\nexport const divide = /* #__PURE__ */ createDivide({ divideScalar, equalScalar, inv, matrix, multiply, typed })\nexport const median = /* #__PURE__ */ createMedian({ add, compare, divide, partitionSelect, typed })\nexport const variance = /* #__PURE__ */ createVariance({ add, apply, divide, isNaN, multiply, subtract, typed })\nexport const std = /* #__PURE__ */ createStd({ sqrt, typed, variance })\nexport const multinomial = /* #__PURE__ */ createMultinomial({ add, divide, factorial, isInteger, isPositive, multiply, typed })\nexport const bohrRadius = /* #__PURE__ */ createBohrRadius({ BigNumber, Unit, config })\nexport const elementaryCharge = /* #__PURE__ */ createElementaryCharge({ BigNumber, Unit, config })\nexport const inverseConductanceQuantum = /* #__PURE__ */ createInverseConductanceQuantum({ BigNumber, Unit, config })\nexport const molarVolume = /* #__PURE__ */ createMolarVolume({ BigNumber, Unit, config })\nexport const planckTime = /* #__PURE__ */ createPlanckTime({ BigNumber, Unit, config })\nexport const thomsonCrossSection = /* #__PURE__ */ createThomsonCrossSection({ BigNumber, Unit, config })\nexport const log1p = /* #__PURE__ */ createLog1p({ Complex, config, divideScalar, log, typed })\nexport const mean = /* #__PURE__ */ createMean({ add, divide, typed })\nexport const gasConstant = /* #__PURE__ */ createGasConstant({ BigNumber, Unit, config })\nexport const planckConstant = /* #__PURE__ */ createPlanckConstant({ BigNumber, Unit, config })\nexport const setUnion = /* #__PURE__ */ createSetUnion({ Index, concat, setIntersect, setSymDifference, size, subset, typed })\nexport const kldivergence = /* #__PURE__ */ createKldivergence({ divide, dotDivide, isNumeric, log, matrix, multiply, sum, typed })\nexport const coulomb = /* #__PURE__ */ createCoulomb({ BigNumber, Unit, config })\nexport const rydberg = /* #__PURE__ */ createRydberg({ BigNumber, Unit, config })\nexport const mad = /* #__PURE__ */ createMad({ abs, map, median, subtract, typed })\nexport const magneticFluxQuantum = /* #__PURE__ */ createMagneticFluxQuantum({ BigNumber, Unit, config })\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n  config.method = config.method ? config.method.toLowerCase() : 'get';\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n"],"sourceRoot":""}